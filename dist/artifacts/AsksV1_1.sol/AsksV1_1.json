{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc721TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wethAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "finder",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userA",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "userB",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
          "name": "a",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
          "name": "b",
          "type": "tuple"
        }
      ],
      "name": "ExchangeExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payoutCurrency",
          "type": "address"
        }
      ],
      "name": "_handleRoyaltyEnginePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "askForNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sellerFundsRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "askCurrency",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "findersFeeBps",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "askPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_askPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_askCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sellerFundsRecipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_findersFeeBps",
          "type": "uint16"
        }
      ],
      "name": "createAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC20TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC721TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fillCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fillAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_finder",
          "type": "address"
        }
      ],
      "name": "fillAsk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_askPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_askCurrency",
          "type": "address"
        }
      ],
      "name": "setAskPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngineAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61012060405260016000553480156200001757600080fd5b5060405162003450380380620034508339810160408190526200003a916200024f565b6040518060400160405280600a81526020016941736b733a2076312e3160b01b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c59190620002cf565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001299190620002cf565b6001600160a01b038a811660805291821660a052600180546001600160a01b0319169483169490941790935590811660e0521660c05280516200017490600290602084019062000190565b5050506001600160a01b03909216610100525062000333915050565b8280546200019e90620002f6565b90600052602060002090601f016020900481019282620001c257600085556200020d565b82601f10620001dd57805160ff19168380011785556200020d565b828001600101855582156200020d579182015b828111156200020d578251825591602001919060010190620001f0565b506200021b9291506200021f565b5090565b5b808211156200021b576000815560010162000220565b6001600160a01b03811681146200024c57600080fd5b50565b600080600080600060a086880312156200026857600080fd5b8551620002758162000236565b6020870151909550620002888162000236565b60408701519094506200029b8162000236565b6060870151909350620002ae8162000236565b6080870151909250620002c18162000236565b809150509295509295909350565b600060208284031215620002e257600080fd5b8151620002ef8162000236565b9392505050565b600181811c908216806200030b57607f821691505b602082108114156200032d57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516130a8620003a86000396000818161031001528181610aab015281816111c1015261131101526000818161210901526121b501526000818160fe01526119b70152600081816123b9015261245101526000818161025b0152611dfe01526130a86000f3fe6080604052600436106100bc5760003560e01c80638f9d325111610074578063b20075331161004e578063b2007533146102be578063b249bb30146102de578063f7cd1d9b146102fe57600080fd5b80638f9d3251146102495780639128c22c1461027d5780639e8471081461029e57600080fd5b806340b80746116100a557806340b8074614610145578063418f065614610167578063622dcbd71461023657600080fd5b806306fdde03146100c15780632b20e397146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610332565b6040516100e39190612999565b60405180910390f35b3480156100f857600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b34801561015157600080fd5b50610165610160366004612a0f565b6103c0565b005b34801561017357600080fd5b506101ec610182366004612a0f565b60036020818152600093845260408085209091529183529120805460018201546002830154929093015473ffffffffffffffffffffffffffffffffffffffff918216938216929182169174010000000000000000000000000000000000000000900461ffff169085565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681529486166020860152929094169183019190915261ffff166060820152608081019190915260a0016100e3565b610165610244366004612a3b565b6106b8565b34801561025557600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b61029061028b366004612a9a565b610ca9565b6040519081526020016100e3565b3480156102aa57600080fd5b506101656102b9366004612af4565b610f4e565b3480156102ca57600080fd5b506101656102d9366004612a9a565b6117f9565b3480156102ea57600080fd5b506101656102f9366004612b64565b61199f565b34801561030a57600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b6002805461033f90612b81565b80601f016020809104026020016040519081016040528092919081815260200182805461036b90612b81565b80156103b85780601f1061038d576101008083540402835291602001916103b8565b820191906000526020600020905b81548152906001019060200180831161039b57829003601f168201915b505050505081565b600054600114610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600090815573ffffffffffffffffffffffffffffffffffffffff838116825260036020908152604080842085855290915290912054166104cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f63616e63656c41736b2061736b20646f65736e277420657869737400000000006044820152606401610428565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061061857506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190612bf2565b6106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6106ae8383611b61565b5050600160005550565b600054600114610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808716825260036020908152604080842088855290915290912080549091166107c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f66696c6c41736b206d757374206265206163746976652061736b0000000000006044820152606401610428565b600281015473ffffffffffffffffffffffffffffffffffffffff858116911614610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f66696c6c41736b205f66696c6c43757272656e6379206d757374206d6174636860448201527f2061736b2063757272656e6379000000000000000000000000000000000000006064820152608401610428565b82816003015414610904576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f66696c6c41736b205f66696c6c416d6f756e74206d757374206d61746368206160448201527f736b20616d6f756e7400000000000000000000000000000000000000000000006064820152608401610428565b6003810154600282015461092e919073ffffffffffffffffffffffffffffffffffffffff16611c61565b6003810154600282015460009161095f918991899173ffffffffffffffffffffffffffffffffffffffff1685611fb4565b50600283015490915061098990829073ffffffffffffffffffffffffffffffffffffffff166120ba565b905073ffffffffffffffffffffffffffffffffffffffff831615610a1e576002820154600090612710906109d99074010000000000000000000000000000000000000000900461ffff1684612c43565b6109e39190612c80565b6002840154909150610a10908590839073ffffffffffffffffffffffffffffffffffffffff16600061225a565b610a1a8183612cbb565b9150505b60018201546002830154610a4f9173ffffffffffffffffffffffffffffffffffffffff90811691849116600061225a565b81546040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301529182166024820152336044820152606481018890527f0000000000000000000000000000000000000000000000000000000000000000909116906315dacbea90608401600060405180830381600087803b158015610af157600080fd5b505af1158015610b05573d6000803e3d6000fd5b5050604080516060808201835273ffffffffffffffffffffffffffffffffffffffff808d16835260208084018d90526001848601528451928301855260028901548216835260009083015260038801548285015287549351929550909350339216907f1f432c9454edd444f55492be01e3fa82aa88bfa28e120a039be204253c10c36e90610b969086908690612cd2565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16888a73ffffffffffffffffffffffffffffffffffffffff167f21a9d8e221211780696258a05c6225b1a24f428e2fd4d51708f1ab2be4224d398888604051610bfe929190612d3a565b60405180910390a450505073ffffffffffffffffffffffffffffffffffffffff909516600090815260036020818152604080842097845296905294812080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600180830180549092169091556002820180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905595018190559390935550505050565b6000333014610d3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c65000000000000000000000000000000000000006064820152608401610428565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610dbe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e049190810190612ea3565b8151919350915080610e1b57859350505050610f46565b85600080805b84811015610f3c57868181518110610e3b57610e3b612f68565b60200260200101519250858181518110610e5757610e57612f68565b6020026020010151915081841015610ecb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610428565b610ed983838b61c35061225a565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610e21565b5091955050505050505b949350505050565b600054600114610fba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff881690636352211e90602401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110509190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061110757506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015288169063e985e9c590604401602060405180830381865afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190612bf2565b611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63726561746541736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6040517f72d276920000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906372d2769290602401602060405180830381865afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190612bf2565b6112cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f63726561746541736b206d75737420617070726f76652041736b735631206d6f60448201527f64756c65000000000000000000000000000000000000000000000000000000006064820152608401610428565b6040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015288169063e985e9c590604401602060405180830381865afa158015611360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113849190612bf2565b611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f63726561746541736b206d75737420617070726f76652045524337323154726160448201527f6e7366657248656c706572206173206f70657261746f720000000000000000006064820152608401610428565b6127108261ffff1611156114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f63726561746541736b2066696e646572732066656520627073206d757374206260448201527f65206c657373207468616e206f7220657175616c20746f2031303030300000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff8316611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f63726561746541736b206d7573742073706563696679205f73656c6c6572467560448201527f6e6473526563697069656e7400000000000000000000000000000000000000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff87811660009081526003602090815260408083208a8452909152902054161561158b5761158b8787611b61565b6040518060a001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018361ffff16815260200186815250600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548161ffff021916908361ffff16021790555060808201518160030155905050858773ffffffffffffffffffffffffffffffffffffffff167f5b65b398e1d736436510f4da442eaec71466d2abee0816567088c892c4bcee70600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206040516117e39190612f97565b60405180910390a3505060016000555050505050565b600054600114611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808616825260036020908152604080842087855290915290912080549091163314611908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f73657441736b5072696365206d7573742062652073656c6c65720000000000006044820152606401610428565b600381018390556002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8481169190911790915560405185918716907f1a24bcf5290feab70f35cfb4870c294ebf497e608d4262b0ec0debe0450081409061198b908590612f97565b60405180910390a350506001600055505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611a64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610428565b611a8e817fcb23f816000000000000000000000000000000000000000000000000000000006124aa565b611b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610428565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff821660008181526003602090815260408083208584529091529081902090518392917f871956abf85befb7c955eacd40fcabe7e01b1702d75764bf7f54bf481933fd3591611bc49190612f97565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff909116600090815260036020818152604080842094845293905291812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116825560018201805490911690556002810180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905590910155565b73ffffffffffffffffffffffffffffffffffffffff8116611d105781341015611d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e7400000000006064820152608401610428565b5050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da39190612feb565b6040517fd9fc4b6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b158015611e4457600080fd5b505af1158015611e58573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff851691506370a0823190602401602060405180830381865afa158015611ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eed9190612feb565b905080611efa8684613004565b14611fad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201527f656374656420616d6f756e740000000000000000000000000000000000000000608482015260a401610428565b5050505050565b60008080831580611fc457505a84115b611fce5783611fd0565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015612092575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261208f91810190612feb565b60015b6120a35785600092509250506120b0565b9250600191506120b09050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015612150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121749190612feb565b9050806121845783915050612254565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015612210573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612234919061301c565b91505061224581838661c35061225a565b61224f8286612cbb565b925050505b92915050565b82158061227b575073ffffffffffffffffffffffffffffffffffffffff8416155b15612285576124a4565b73ffffffffffffffffffffffffffffffffffffffff82166124835782471015612330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610428565b600081158061233e57505a82115b612348578161234a565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d80600081146123a9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ae565b606091505b505090508061247c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561241f57600080fd5b505af1158015612433573d6000803e3d6000fd5b5061247c93505073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169150889050876124cd565b50506124a4565b6124a473ffffffffffffffffffffffffffffffffffffffff831685856124cd565b50505050565b60006124b58361255f565b80156124c657506124c683836125c3565b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261255a9084906126ff565b505050565b600061258b827f01ffc9a7000000000000000000000000000000000000000000000000000000006125c3565b801561225457506125bc827fffffffff000000000000000000000000000000000000000000000000000000006125c3565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff8716906175309061267d908690613056565b6000604051808303818686fa925050503d80600081146126b9576040519150601f19603f3d011682016040523d82523d6000602084013e6126be565b606091505b50915091506020815110156126d95760009350505050612254565b8180156126f55750808060200190518101906126f59190612bf2565b9695505050505050565b6000612761826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661280b9092919063ffffffff16565b80519091501561255a578080602001905181019061277f9190612bf2565b61255a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610428565b6060610f4684846000858573ffffffffffffffffffffffffffffffffffffffff85163b612894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610428565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516128bd9190613056565b60006040518083038185875af1925050503d80600081146128fa576040519150601f19603f3d011682016040523d82523d6000602084013e6128ff565b606091505b509150915061290f82828661291a565b979650505050505050565b606083156129295750816124c6565b8251156129395782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289190612999565b60005b83811015612988578181015183820152602001612970565b838111156124a45750506000910152565b60208152600082518060208401526129b881604085016020870161296d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114612a0c57600080fd5b50565b60008060408385031215612a2257600080fd5b8235612a2d816129ea565b946020939093013593505050565b600080600080600060a08688031215612a5357600080fd5b8535612a5e816129ea565b9450602086013593506040860135612a75816129ea565b9250606086013591506080860135612a8c816129ea565b809150509295509295909350565b60008060008060808587031215612ab057600080fd5b8435612abb816129ea565b935060208501359250604085013591506060850135612ad9816129ea565b939692955090935050565b61ffff81168114612a0c57600080fd5b60008060008060008060c08789031215612b0d57600080fd5b8635612b18816129ea565b955060208701359450604087013593506060870135612b36816129ea565b92506080870135612b46816129ea565b915060a0870135612b5681612ae4565b809150509295509295509295565b600060208284031215612b7657600080fd5b81356124c6816129ea565b600181811c90821680612b9557607f821691505b60208210811415612bcf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612be757600080fd5b81516124c6816129ea565b600060208284031215612c0457600080fd5b815180151581146124c657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612c7b57612c7b612c14565b500290565b600082612cb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612ccd57612ccd612c14565b500390565b825173ffffffffffffffffffffffffffffffffffffffff168152602080840151908201526040808401519082015260c08101825173ffffffffffffffffffffffffffffffffffffffff16606083015260208301516080830152604083015160a08301526124c6565b73ffffffffffffffffffffffffffffffffffffffff83811682528254811660208301526001830154811660408301526002830154908116606083015261ffff60a091821c16608083015260038301549082015260c081016124c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612e0c57612e0c612d96565b604052919050565b600067ffffffffffffffff821115612e2e57612e2e612d96565b5060051b60200190565b600082601f830112612e4957600080fd5b81516020612e5e612e5983612e14565b612dc5565b82815260059290921b84018101918181019086841115612e7d57600080fd5b8286015b84811015612e985780518352918301918301612e81565b509695505050505050565b60008060408385031215612eb657600080fd5b825167ffffffffffffffff80821115612ece57600080fd5b818501915085601f830112612ee257600080fd5b81516020612ef2612e5983612e14565b82815260059290921b84018101918181019089841115612f1157600080fd5b948201945b83861015612f38578551612f29816129ea565b82529482019490820190612f16565b91880151919650909350505080821115612f5157600080fd5b50612f5e85828601612e38565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b815473ffffffffffffffffffffffffffffffffffffffff90811682526001830154811660208301526002830154908116604083015261ffff60a091821c166060830152600383015460808301528101612254565b600060208284031215612ffd57600080fd5b5051919050565b6000821982111561301757613017612c14565b500190565b6000806040838503121561302f57600080fd5b825161303a81612ae4565b602084015190925061304b816129ea565b809150509250929050565b6000825161306881846020870161296d565b919091019291505056fea26469706673582212208079419989b841891a12af22529673361791592f7d085a3094390816898cad8b64736f6c634300080a0033",
    "sourceMap": "947:16760:38:-:0;;;461:1:127;426:36;;3956:524:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:62:4;;;;;;;;;;;;;-1:-1:-1;;;376:62:4;;;4234:14:38;4250:20;4272:12;4307:21;-1:-1:-1;;;;;4286:47:38;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4286:59:38;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;690:63:3;;;;;552:26:6;;;;;1931:13:2::1;:48:::0;;-1:-1:-1;;;;;;1931:48:2::1;::::0;;::::1;::::0;;;::::1;::::0;;;1989:67;;::::1;;::::0;2066:29:::1;;::::0;419:12:4;;;;:4;;-1:-1:-1;419:12:4;;;;:::i;:::-;-1:-1:-1;;;;;;;;4407:66:38;;::::3;;::::0;-1:-1:-1;947:16760:38;;-1:-1:-1;;947:16760:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:16760:38;;;-1:-1:-1;947:16760:38;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:128;-1:-1:-1;;;;;89:31:128;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:789::-;256:6;264;272;280;288;341:3;329:9;320:7;316:23;312:33;309:53;;;358:1;355;348:12;309:53;390:9;384:16;409:31;434:5;409:31;:::i;:::-;509:2;494:18;;488:25;459:5;;-1:-1:-1;522:33:128;488:25;522:33;:::i;:::-;626:2;611:18;;605:25;574:7;;-1:-1:-1;639:33:128;605:25;639:33;:::i;:::-;743:2;728:18;;722:25;691:7;;-1:-1:-1;756:33:128;722:25;756:33;:::i;:::-;860:3;845:19;;839:26;808:7;;-1:-1:-1;874:33:128;839:26;874:33;:::i;:::-;926:7;916:17;;;150:789;;;;;;;;:::o;944:276::-;1039:6;1092:2;1080:9;1071:7;1067:23;1063:32;1060:52;;;1108:1;1105;1098:12;1060:52;1140:9;1134:16;1159:31;1184:5;1159:31;:::i;:::-;1209:5;944:276;-1:-1:-1;;;944:276:128:o;1481:380::-;1560:1;1556:12;;;;1603;;;1624:61;;1678:4;1670:6;1666:17;1656:27;;1624:61;1731:2;1723:6;1720:14;1700:18;1697:38;1694:161;;;1777:10;1772:3;1768:20;1765:1;1758:31;1812:4;1809:1;1802:15;1840:4;1837:1;1830:15;1694:161;;1481:380;;;:::o;:::-;947:16760:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100bc5760003560e01c80638f9d325111610074578063b20075331161004e578063b2007533146102be578063b249bb30146102de578063f7cd1d9b146102fe57600080fd5b80638f9d3251146102495780639128c22c1461027d5780639e8471081461029e57600080fd5b806340b80746116100a557806340b8074614610145578063418f065614610167578063622dcbd71461023657600080fd5b806306fdde03146100c15780632b20e397146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610332565b6040516100e39190612999565b60405180910390f35b3480156100f857600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e3565b34801561015157600080fd5b50610165610160366004612a0f565b6103c0565b005b34801561017357600080fd5b506101ec610182366004612a0f565b60036020818152600093845260408085209091529183529120805460018201546002830154929093015473ffffffffffffffffffffffffffffffffffffffff918216938216929182169174010000000000000000000000000000000000000000900461ffff169085565b6040805173ffffffffffffffffffffffffffffffffffffffff96871681529486166020860152929094169183019190915261ffff166060820152608081019190915260a0016100e3565b610165610244366004612a3b565b6106b8565b34801561025557600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b61029061028b366004612a9a565b610ca9565b6040519081526020016100e3565b3480156102aa57600080fd5b506101656102b9366004612af4565b610f4e565b3480156102ca57600080fd5b506101656102d9366004612a9a565b6117f9565b3480156102ea57600080fd5b506101656102f9366004612b64565b61199f565b34801561030a57600080fd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b6002805461033f90612b81565b80601f016020809104026020016040519081016040528092919081815260200182805461036b90612b81565b80156103b85780601f1061038d576101008083540402835291602001916103b8565b820191906000526020600020905b81548152906001019060200180831161039b57829003601f168201915b505050505081565b600054600114610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600090815573ffffffffffffffffffffffffffffffffffffffff838116825260036020908152604080842085855290915290912054166104cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f63616e63656c41736b2061736b20646f65736e277420657869737400000000006044820152606401610428565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061061857506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190612bf2565b6106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6106ae8383611b61565b5050600160005550565b600054600114610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808716825260036020908152604080842088855290915290912080549091166107c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f66696c6c41736b206d757374206265206163746976652061736b0000000000006044820152606401610428565b600281015473ffffffffffffffffffffffffffffffffffffffff858116911614610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f66696c6c41736b205f66696c6c43757272656e6379206d757374206d6174636860448201527f2061736b2063757272656e6379000000000000000000000000000000000000006064820152608401610428565b82816003015414610904576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f66696c6c41736b205f66696c6c416d6f756e74206d757374206d61746368206160448201527f736b20616d6f756e7400000000000000000000000000000000000000000000006064820152608401610428565b6003810154600282015461092e919073ffffffffffffffffffffffffffffffffffffffff16611c61565b6003810154600282015460009161095f918991899173ffffffffffffffffffffffffffffffffffffffff1685611fb4565b50600283015490915061098990829073ffffffffffffffffffffffffffffffffffffffff166120ba565b905073ffffffffffffffffffffffffffffffffffffffff831615610a1e576002820154600090612710906109d99074010000000000000000000000000000000000000000900461ffff1684612c43565b6109e39190612c80565b6002840154909150610a10908590839073ffffffffffffffffffffffffffffffffffffffff16600061225a565b610a1a8183612cbb565b9150505b60018201546002830154610a4f9173ffffffffffffffffffffffffffffffffffffffff90811691849116600061225a565b81546040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301529182166024820152336044820152606481018890527f0000000000000000000000000000000000000000000000000000000000000000909116906315dacbea90608401600060405180830381600087803b158015610af157600080fd5b505af1158015610b05573d6000803e3d6000fd5b5050604080516060808201835273ffffffffffffffffffffffffffffffffffffffff808d16835260208084018d90526001848601528451928301855260028901548216835260009083015260038801548285015287549351929550909350339216907f1f432c9454edd444f55492be01e3fa82aa88bfa28e120a039be204253c10c36e90610b969086908690612cd2565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16888a73ffffffffffffffffffffffffffffffffffffffff167f21a9d8e221211780696258a05c6225b1a24f428e2fd4d51708f1ab2be4224d398888604051610bfe929190612d3a565b60405180910390a450505073ffffffffffffffffffffffffffffffffffffffff909516600090815260036020818152604080842097845296905294812080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600180830180549092169091556002820180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905595018190559390935550505050565b6000333014610d3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c65000000000000000000000000000000000000006064820152608401610428565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610dbe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e049190810190612ea3565b8151919350915080610e1b57859350505050610f46565b85600080805b84811015610f3c57868181518110610e3b57610e3b612f68565b60200260200101519250858181518110610e5757610e57612f68565b6020026020010151915081841015610ecb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610428565b610ed983838b61c35061225a565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610e21565b5091955050505050505b949350505050565b600054600114610fba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff881690636352211e90602401602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110509190612bd5565b90503373ffffffffffffffffffffffffffffffffffffffff8216148061110757506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015288169063e985e9c590604401602060405180830381865afa1580156110e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111079190612bf2565b611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f63726561746541736b206d75737420626520746f6b656e206f776e6572206f7260448201527f206f70657261746f7200000000000000000000000000000000000000000000006064820152608401610428565b6040517f72d276920000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906372d2769290602401602060405180830381865afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190612bf2565b6112cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f63726561746541736b206d75737420617070726f76652041736b735631206d6f60448201527f64756c65000000000000000000000000000000000000000000000000000000006064820152608401610428565b6040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015288169063e985e9c590604401602060405180830381865afa158015611360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113849190612bf2565b611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f63726561746541736b206d75737420617070726f76652045524337323154726160448201527f6e7366657248656c706572206173206f70657261746f720000000000000000006064820152608401610428565b6127108261ffff1611156114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f63726561746541736b2066696e646572732066656520627073206d757374206260448201527f65206c657373207468616e206f7220657175616c20746f2031303030300000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff8316611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f63726561746541736b206d7573742073706563696679205f73656c6c6572467560448201527f6e6473526563697069656e7400000000000000000000000000000000000000006064820152608401610428565b73ffffffffffffffffffffffffffffffffffffffff87811660009081526003602090815260408083208a8452909152902054161561158b5761158b8787611b61565b6040518060a001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018361ffff16815260200186815250600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548161ffff021916908361ffff16021790555060808201518160030155905050858773ffffffffffffffffffffffffffffffffffffffff167f5b65b398e1d736436510f4da442eaec71466d2abee0816567088c892c4bcee70600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206040516117e39190612f97565b60405180910390a3505060016000555050505050565b600054600114611865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610428565b6002600090815573ffffffffffffffffffffffffffffffffffffffff808616825260036020908152604080842087855290915290912080549091163314611908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f73657441736b5072696365206d7573742062652073656c6c65720000000000006044820152606401610428565b600381018390556002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8481169190911790915560405185918716907f1a24bcf5290feab70f35cfb4870c294ebf497e608d4262b0ec0debe0450081409061198b908590612f97565b60405180910390a350506001600055505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611a64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610428565b611a8e817fcb23f816000000000000000000000000000000000000000000000000000000006124aa565b611b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610428565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff821660008181526003602090815260408083208584529091529081902090518392917f871956abf85befb7c955eacd40fcabe7e01b1702d75764bf7f54bf481933fd3591611bc49190612f97565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff909116600090815260036020818152604080842094845293905291812080547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116825560018201805490911690556002810180547fffffffffffffffffffff0000000000000000000000000000000000000000000016905590910155565b73ffffffffffffffffffffffffffffffffffffffff8116611d105781341015611d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e7400000000006064820152608401610428565b5050565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152819060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da39190612feb565b6040517fd9fc4b6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b158015611e4457600080fd5b505af1158015611e58573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff851691506370a0823190602401602060405180830381865afa158015611ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eed9190612feb565b905080611efa8684613004565b14611fad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201527f656374656420616d6f756e740000000000000000000000000000000000000000608482015260a401610428565b5050505050565b60008080831580611fc457505a84115b611fce5783611fd0565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015612092575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261208f91810190612feb565b60015b6120a35785600092509250506120b0565b9250600191506120b09050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015612150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121749190612feb565b9050806121845783915050612254565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015612210573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612234919061301c565b91505061224581838661c35061225a565b61224f8286612cbb565b925050505b92915050565b82158061227b575073ffffffffffffffffffffffffffffffffffffffff8416155b15612285576124a4565b73ffffffffffffffffffffffffffffffffffffffff82166124835782471015612330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610428565b600081158061233e57505a82115b612348578161234a565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d80600081146123a9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ae565b606091505b505090508061247c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561241f57600080fd5b505af1158015612433573d6000803e3d6000fd5b5061247c93505073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169150889050876124cd565b50506124a4565b6124a473ffffffffffffffffffffffffffffffffffffffff831685856124cd565b50505050565b60006124b58361255f565b80156124c657506124c683836125c3565b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261255a9084906126ff565b505050565b600061258b827f01ffc9a7000000000000000000000000000000000000000000000000000000006125c3565b801561225457506125bc827fffffffff000000000000000000000000000000000000000000000000000000006125c3565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff8716906175309061267d908690613056565b6000604051808303818686fa925050503d80600081146126b9576040519150601f19603f3d011682016040523d82523d6000602084013e6126be565b606091505b50915091506020815110156126d95760009350505050612254565b8180156126f55750808060200190518101906126f59190612bf2565b9695505050505050565b6000612761826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661280b9092919063ffffffff16565b80519091501561255a578080602001905181019061277f9190612bf2565b61255a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610428565b6060610f4684846000858573ffffffffffffffffffffffffffffffffffffffff85163b612894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610428565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516128bd9190613056565b60006040518083038185875af1925050503d80600081146128fa576040519150601f19603f3d011682016040523d82523d6000602084013e6128ff565b606091505b509150915061290f82828661291a565b979650505050505050565b606083156129295750816124c6565b8251156129395782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104289190612999565b60005b83811015612988578181015183820152602001612970565b838111156124a45750506000910152565b60208152600082518060208401526129b881604085016020870161296d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114612a0c57600080fd5b50565b60008060408385031215612a2257600080fd5b8235612a2d816129ea565b946020939093013593505050565b600080600080600060a08688031215612a5357600080fd5b8535612a5e816129ea565b9450602086013593506040860135612a75816129ea565b9250606086013591506080860135612a8c816129ea565b809150509295509295909350565b60008060008060808587031215612ab057600080fd5b8435612abb816129ea565b935060208501359250604085013591506060850135612ad9816129ea565b939692955090935050565b61ffff81168114612a0c57600080fd5b60008060008060008060c08789031215612b0d57600080fd5b8635612b18816129ea565b955060208701359450604087013593506060870135612b36816129ea565b92506080870135612b46816129ea565b915060a0870135612b5681612ae4565b809150509295509295509295565b600060208284031215612b7657600080fd5b81356124c6816129ea565b600181811c90821680612b9557607f821691505b60208210811415612bcf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215612be757600080fd5b81516124c6816129ea565b600060208284031215612c0457600080fd5b815180151581146124c657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612c7b57612c7b612c14565b500290565b600082612cb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612ccd57612ccd612c14565b500390565b825173ffffffffffffffffffffffffffffffffffffffff168152602080840151908201526040808401519082015260c08101825173ffffffffffffffffffffffffffffffffffffffff16606083015260208301516080830152604083015160a08301526124c6565b73ffffffffffffffffffffffffffffffffffffffff83811682528254811660208301526001830154811660408301526002830154908116606083015261ffff60a091821c16608083015260038301549082015260c081016124c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612e0c57612e0c612d96565b604052919050565b600067ffffffffffffffff821115612e2e57612e2e612d96565b5060051b60200190565b600082601f830112612e4957600080fd5b81516020612e5e612e5983612e14565b612dc5565b82815260059290921b84018101918181019086841115612e7d57600080fd5b8286015b84811015612e985780518352918301918301612e81565b509695505050505050565b60008060408385031215612eb657600080fd5b825167ffffffffffffffff80821115612ece57600080fd5b818501915085601f830112612ee257600080fd5b81516020612ef2612e5983612e14565b82815260059290921b84018101918181019089841115612f1157600080fd5b948201945b83861015612f38578551612f29816129ea565b82529482019490820190612f16565b91880151919650909350505080821115612f5157600080fd5b50612f5e85828601612e38565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b815473ffffffffffffffffffffffffffffffffffffffff90811682526001830154811660208301526002830154908116604083015261ffff60a091821c166060830152600383015460808301528101612254565b600060208284031215612ffd57600080fd5b5051919050565b6000821982111561301757613017612c14565b500190565b6000806040838503121561302f57600080fd5b825161303a81612ae4565b602084015190925061304b816129ea565b809150509250929050565b6000825161306881846020870161296d565b919091019291505056fea26469706673582212208079419989b841891a12af22529673361791592f7d085a3094390816898cad8b64736f6c634300080a0033",
    "sourceMap": "947:16760:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:18:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;792:34:2;;;;;;;;;;;;;;;;;;900:42:128;888:55;;;870:74;;858:2;843:18;792:34:2;724:226:128;10387:506:38;;;;;;;;;;-1:-1:-1;10387:506:38;;;;;:::i;:::-;;:::i;:::-;;1449:60;;;;;;;;;;-1:-1:-1;1449:60:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:42:128;1770:15;;;1752:34;;1822:15;;;1817:2;1802:18;;1795:43;1874:15;;;;1854:18;;;1847:43;;;;1938:6;1926:19;1921:2;1906:18;;1899:47;1977:3;1962:19;;1955:35;;;;1678:3;1663:19;1449:60:38;1434:562:128;15203:2115:38;;;;;;:::i;:::-;;:::i;575:56:3:-;;;;;;;;;;;;;;;5751:1742:2;;;;;;:::i;:::-;;:::i;:::-;;;3609:25:128;;;3597:2;3582:18;5751:1742:2;3463:177:128;6468:1504:38;;;;;;;;;;-1:-1:-1;6468:1504:38;;;;;:::i;:::-;;:::i;9038:445::-;;;;;;;;;;-1:-1:-1;9038:445:38;;;;;:::i;:::-;;:::i;2472:414:2:-;;;;;;;;;;-1:-1:-1;2472:414:2;;;;;:::i;:::-;;:::i;1266:58:38:-;;;;;;;;;;;;;;;265:18:4;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10387:506:38:-;511:16:127;;531:1;511:21;503:44;;;;;;;5736:2:128;503:44:127;;;5718:21:128;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:127;;;;;;;;;577:1;558:16;:20;;;10488:56:38::1;:25:::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;:42;::::1;10480:96;;;::::0;::::1;::::0;;6075:2:128;10480:96:38::1;::::0;::::1;6057:21:128::0;6114:2;6094:18;;;6087:30;6153:29;6133:18;;;6126:57;6200:18;;10480:96:38::1;5873:351:128::0;10480:96:38::1;10608:41;::::0;;;;::::1;::::0;::::1;3609:25:128::0;;;10587:18:38::1;::::0;10608:31:::1;::::0;::::1;::::0;::::1;::::0;3582:18:128;;10608:41:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10587:62:::0;-1:-1:-1;10680:10:38::1;:24;::::0;::::1;;::::0;:92:::1;;-1:-1:-1::0;10708:64:38::1;::::0;;;;:40:::1;6738:15:128::0;;;10708:64:38::1;::::0;::::1;6720:34:128::0;10761:10:38::1;6770:18:128::0;;;6763:43;10708:40:38;::::1;::::0;::::1;::::0;6632:18:128;;10708:64:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10659:180;;;::::0;::::1;::::0;;7301:2:128;10659:180:38::1;::::0;::::1;7283:21:128::0;7340:2;7320:18;;;7313:30;7379:34;7359:18;;;7352:62;7450:11;7430:18;;;7423:39;7479:19;;10659:180:38::1;7099:405:128::0;10659:180:38::1;10850:36;10861:14;10877:8;10850:10;:36::i;:::-;-1:-1:-1::0;;620:1:127;601:16;:20;-1:-1:-1;10387:506:38:o;15203:2115::-;511:16:127;;531:1;511:21;503:44;;;;;;;5736:2:128;503:44:127;;;5718:21:128;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:127;5534:334:128;503:44:127;577:1;558:16;:20;;;15427:25:38::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;15481:10;;15427:35;;15481:10:::1;15473:63;;;::::0;::::1;::::0;;7711:2:128;15473:63:38::1;::::0;::::1;7693:21:128::0;7750:2;7730:18;;;7723:30;7789:28;7769:18;;;7762:56;7835:18;;15473:63:38::1;7509:350:128::0;15473:63:38::1;15554:15;::::0;::::1;::::0;:32:::1;::::0;;::::1;:15:::0;::::1;:32;15546:90;;;::::0;::::1;::::0;;8066:2:128;15546:90:38::1;::::0;::::1;8048:21:128::0;8105:2;8085:18;;;8078:30;8144:34;8124:18;;;8117:62;8215:15;8195:18;;;8188:43;8248:19;;15546:90:38::1;7864:409:128::0;15546:90:38::1;15670:11;15654:3;:12;;;:27;15646:81;;;::::0;::::1;::::0;;8480:2:128;15646:81:38::1;::::0;::::1;8462:21:128::0;8519:2;8499:18;;;8492:30;8558:34;8538:18;;;8531:62;8629:11;8609:18;;;8602:39;8658:19;;15646:81:38::1;8278:405:128::0;15646:81:38::1;15836:12;::::0;::::1;::::0;15850:15:::1;::::0;::::1;::::0;15812:54:::1;::::0;15836:12;15850:15:::1;;15812:23;:54::i;:::-;16023:12;::::0;::::1;::::0;16037:15:::1;::::0;::::1;::::0;15947:23:::1;::::0;15976:95:::1;::::0;15997:14;;16013:8;;16037:15:::1;;15947:23:::0;15976:20:::1;:95::i;:::-;-1:-1:-1::0;16182:15:38::1;::::0;::::1;::::0;15946:125;;-1:-1:-1;16140:58:38::1;::::0;15946:125;;16182:15:::1;;16140:24;:58::i;:::-;16122:76:::0;-1:-1:-1;16251:21:38::1;::::0;::::1;::::0;16247:272:::1;;16328:17;::::0;::::1;::::0;16288:18:::1;::::0;16349:5:::1;::::0;16310:35:::1;::::0;16328:17;;::::1;;;16310:15:::0;:35:::1;:::i;:::-;16309:45;;;;:::i;:::-;16413:15;::::0;::::1;::::0;16288:66;;-1:-1:-1;16368:79:38::1;::::0;16392:7;;16288:66;;16413:15:::1;;;16368:23;:79::i;:::-;16480:28;16498:10:::0;16480:15;:28:::1;:::i;:::-;16462:46;;16274:245;16247:272;16604:24;::::0;::::1;::::0;16647:15:::1;::::0;::::1;::::0;16580:101:::1;::::0;16604:24:::1;::::0;;::::1;::::0;16630:15;;16647::::1;16604:24;16580:23;:101::i;:::-;16775:10:::0;;16725:83:::1;::::0;;;;:33:::1;9829:15:128::0;;;16725:83:38::1;::::0;::::1;9811:34:128::0;16775:10:38;;::::1;9861:18:128::0;;;9854:43;16787:10:38::1;9913:18:128::0;;;9906:43;9965:18;;;9958:34;;;16725:20:38::1;:33:::0;;::::1;::::0;::::1;::::0;9722:19:128;;16725:83:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16865:78:38::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;16940:1:::1;16865:78:::0;;;;16999:83;;;;::::1;::::0;;17031:15:::1;::::0;::::1;::::0;;::::1;16999:83:::0;;16819:43:::1;16999:83:::0;;::::1;::::0;17068:12:::1;::::0;::::1;::::0;16999:83;;;;17115:10;;17098:84;;16865:78;;-1:-1:-1;16999:83:38;;-1:-1:-1;17127:10:38::1;::::0;17115::::1;::::0;17098:84:::1;::::0;::::1;::::0;16865:78;;16999:83;;17098:84:::1;:::i;:::-;;;;;;;;17233:10;17197:61;;17223:8;17207:14;17197:61;;;17245:7;17254:3;17197:61;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;17276:25:38::1;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;17269:42;;;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;601:20:127;;;;-1:-1:-1;;;;15203:2115:38:o;5751:1742:2:-;5935:7;6007:10;6029:4;6007:27;5999:85;;;;;;;11745:2:128;5999:85:2;;;11727:21:128;11784:2;11764:18;;;11757:30;11823:34;11803:18;;;11796:62;11894:15;11874:18;;;11867:43;11927:19;;5999:85:2;11543:409:128;5999:85:2;6228:13;;:59;;;;;:13;12177:55:128;;;6228:59:2;;;12159:74:128;12249:18;;;12242:34;;;12292:18;;;12285:34;;;6163:35:2;;;;6228:13;;;:24;;12132:18:128;;6228:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6364:17;;6162:125;;-1:-1:-1;6162:125:2;-1:-1:-1;6460:18:2;6456:38;;6487:7;6480:14;;;;;;;6456:38;6567:7;6541:23;;;6736:718;6760:13;6756:1;:17;6736:718;;;6849:10;6860:1;6849:13;;;;;;;;:::i;:::-;;;;;;;6837:25;;6885:7;6893:1;6885:10;;;;;;;;:::i;:::-;;;;;;;6876:19;;7011:6;6992:15;:25;;6984:47;;;;;;;15347:2:128;6984:47:2;;;15329:21:128;15386:1;15366:18;;;15359:29;15424:11;15404:18;;;15397:39;15453:18;;6984:47:2;15145:332:128;6984:47:2;7087:66;7111:9;7122:6;7130:15;7147:5;7087:23;:66::i;:::-;7173:58;;;;15674:55:128;;;15656:74;;15761:2;15746:18;;15739:34;;;7203:8:2;;7173:58;;;;;;15629:18:128;7173:58:2;;;;;;;7383:25;;;;;7426:3;;6736:718;;;-1:-1:-1;7471:15:2;;-1:-1:-1;;;;;;5751:1742:2;;;;;;;:::o;6468:1504:38:-;511:16:127;;531:1;511:21;503:44;;;;;;;5736:2:128;503:44:127;;;5718:21:128;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:127;5534:334:128;503:44:127;577:1;558:16;:20;;;6731:41:38::1;::::0;;;;::::1;::::0;::::1;3609:25:128::0;;;6731:31:38::1;::::0;::::1;::::0;::::1;::::0;3582:18:128;;6731:41:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6710:62:::0;-1:-1:-1;6804:10:38::1;:24;::::0;::::1;;::::0;:92:::1;;-1:-1:-1::0;6832:64:38::1;::::0;;;;:40:::1;6738:15:128::0;;;6832:64:38::1;::::0;::::1;6720:34:128::0;6885:10:38::1;6770:18:128::0;;;6763:43;6832:40:38;::::1;::::0;::::1;::::0;6632:18:128;;6832:64:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6783:180;;;::::0;::::1;::::0;;15986:2:128;6783:180:38::1;::::0;::::1;15968:21:128::0;16025:2;16005:18;;;15998:30;16064:34;16044:18;;;16037:62;16135:11;16115:18;;;16108:39;16164:19;;6783:180:38::1;15784:405:128::0;6783:180:38::1;6981:49;::::0;;;;7019:10:::1;6981:49;::::0;::::1;870:74:128::0;6981:20:38::1;:37;;::::0;::::1;::::0;843:18:128;;6981:49:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6973:98;;;::::0;::::1;::::0;;16396:2:128;6973:98:38::1;::::0;::::1;16378:21:128::0;16435:2;16415:18;;;16408:30;16474:34;16454:18;;;16447:62;16545:6;16525:18;;;16518:34;16569:19;;6973:98:38::1;16194:400:128::0;6973:98:38::1;7102:83;::::0;;;;:40:::1;6738:15:128::0;;;7102:83:38::1;::::0;::::1;6720:34:128::0;7163:20:38::1;6790:15:128::0;;6770:18;;;6763:43;7102:40:38;::::1;::::0;::::1;::::0;6632:18:128;;7102:83:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7081:185;;;::::0;::::1;::::0;;16801:2:128;7081:185:38::1;::::0;::::1;16783:21:128::0;16840:2;16820:18;;;16813:30;16879:34;16859:18;;;16852:62;16950:25;16930:18;;;16923:53;16993:19;;7081:185:38::1;16599:419:128::0;7081:185:38::1;7302:5;7284:14;:23;;;;7276:97;;;::::0;::::1;::::0;;17225:2:128;7276:97:38::1;::::0;::::1;17207:21:128::0;17264:2;17244:18;;;17237:30;17303:34;17283:18;;;17276:62;17374:31;17354:18;;;17347:59;17423:19;;7276:97:38::1;17023:425:128::0;7276:97:38::1;7391:35;::::0;::::1;7383:92;;;::::0;::::1;::::0;;17655:2:128;7383:92:38::1;::::0;::::1;17637:21:128::0;17694:2;17674:18;;;17667:30;17733:34;17713:18;;;17706:62;17804:14;17784:18;;;17777:42;17836:19;;7383:92:38::1;17453:408:128::0;7383:92:38::1;7490:56;:25:::0;;::::1;7544:1;7490:25:::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;:42;::::1;:56:::0;7486:123:::1;;7562:36;7573:14;7589:8;7562:10;:36::i;:::-;7657:219;;;;;;;;7683:10;7657:219;;;;;;7729:21;7657:219;;;;;;7777:12;7657:219;;;;;;7818:14;7657:219;;;;;;7856:9;7657:219;;::::0;7619:9:::1;:25;7629:14;7619:25;;;;;;;;;;;;;;;:35;7645:8;7619:35;;;;;;;;;;;:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7919:8;7903:14;7892:73;;;7929:9;:25;7939:14;7929:25;;;;;;;;;;;;;;;:35;7955:8;7929:35;;;;;;;;;;;7892:73;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:127;601:16;:20;-1:-1:-1;;;;;6468:1504:38:o;9038:445::-;511:16:127;;531:1;511:21;503:44;;;;;;;5736:2:128;503:44:127;;;5718:21:128;5775:2;5755:18;;;5748:30;5814:12;5794:18;;;5787:40;5844:18;;503:44:127;5534:334:128;503:44:127;577:1;558:16;:20;;;9230:25:38::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;9284:10;;9230:35;;9284:10:::1;9298;9284:24;9276:63;;;::::0;::::1;::::0;;18317:2:128;9276:63:38::1;::::0;::::1;18299:21:128::0;18356:2;18336:18;;;18329:30;18395:28;18375:18;;;18368:56;18441:18;;9276:63:38::1;18115:350:128::0;9276:63:38::1;9350:12;::::0;::::1;:24:::0;;;9384:15:::1;::::0;::::1;:30:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;9430:46:::1;::::0;9462:8;;9430:46;::::1;::::0;::::1;::::0;::::1;::::0;9350:12;;9430:46:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:127;601:16;:20;-1:-1:-1;;;9038:445:38:o;2472:414:2:-;2554:10;:23;2568:9;2554:23;;2546:74;;;;;;;18925:2:128;2546:74:2;;;18907:21:128;18964:2;18944:18;;;18937:30;19003:34;18983:18;;;18976:62;19074:8;19054:18;;;19047:36;19100:19;;2546:74:2;18723:402:128;2546:74:2;2651:83;2683:14;2699:34;2651:31;:83::i;:::-;2630:191;;;;;;;19332:2:128;2630:191:2;;;19314:21:128;19371:2;19351:18;;;19344:30;19410:34;19390:18;;;19383:62;19481:31;19461:18;;;19454:59;19530:19;;2630:191:2;19130:425:128;2630:191:2;2831:13;:48;;;;;;;;;;;;;;;2472:414::o;17486:219:38:-;17571:74;;;17609:25;;;;:9;:25;;;;;;;;:35;;;;;;;;;;17571:74;;17599:8;;17571:74;;;;;17609:35;17571:74;:::i;:::-;;;;;;;;17663:25;;;;;;;;:9;:25;;;;;;;;:35;;;;;;;;;17656:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17486:219::o;1007:933:3:-;1099:23;;;1095:839;;1159:7;1146:9;:20;;1138:92;;;;;;;19762:2:128;1138:92:3;;;19744:21:128;19801:2;19781:18;;;19774:30;19840:34;19820:18;;;19813:62;19911:29;19891:18;;;19884:57;19958:19;;1138:92:3;19560:423:128;1138:92:3;1007:933;;:::o;1095:839::-;1587:30;;;;;1611:4;1587:30;;;870:74:128;1539:9:3;;1517:12;;1587:15;;;;;;843:18:128;;1587:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1631:83;;;;;:36;9829:15:128;;;1631:83:3;;;9811:34:128;1679:10:3;9861:18:128;;;9854:43;1699:4:3;9913:18:128;;;9906:43;9965:18;;;9958:34;;;1563:54:3;;-1:-1:-1;1631:19:3;:36;;;;;;9722:19:128;;1631:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1751:30:3;;;;;1775:4;1751:30;;;870:74:128;1728:20:3;;-1:-1:-1;1751:15:3;;;;-1:-1:-1;1751:15:3;;843:18:128;;1751:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:53;-1:-1:-1;1728:53:3;1803:23;1819:7;1803:13;:23;:::i;:::-;:39;1795:128;;;;;;;20512:2:128;1795:128:3;;;20494:21:128;20551:2;20531:18;;;20524:30;20590:34;20570:18;;;20563:62;20661:34;20641:18;;;20634:62;20733:14;20712:19;;;20705:43;20765:19;;1795:128:3;20310:480:128;1795:128:3;1247:687;;;1007:933;;:::o;4289:888:2:-;4486:7;;;4640:14;;;:39;;;4670:9;4658;:21;4640:39;4639:65;;4695:9;4639:65;;;4683:9;4639:65;4802:93;;;;;21036:42:128;21105:15;;;4802:93:2;;;21087:34:128;21137:18;;;21130:34;;;21180:18;;;21173:34;;;21243:15;;21223:18;;;21216:43;4625:79:2;;-1:-1:-1;4802:4:2;;:31;;4625:79;;20998:19:128;;4802:93:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4802:93:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4798:373;;5145:7;5154:5;5137:23;;;;;;;4798:373;5020:14;-1:-1:-1;5036:4:2;;-1:-1:-1;5012:29:2;;-1:-1:-1;5012:29:2;4289:888;;;;;;;;;:::o;3119:632::-;3289:56;;;;;3330:4;3289:56;;;15656:74:128;15746:18;;;15739:34;;;3213:7:2;;;;3289:32;:19;:32;;;;15629:18:128;;3289:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:78;-1:-1:-1;3404:16:2;3400:36;;3429:7;3422:14;;;;;3400:36;3503:51;;;;;3548:4;3503:51;;;870:74:128;3479:20:2;;3503:19;:36;;;;;843:18:128;;3503:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3476:78;;;3596:74;3620:12;3634:11;3647:15;3664:5;3596:23;:74::i;:::-;3723:21;3733:11;3723:7;:21;:::i;:::-;3716:28;;;;3119:632;;;;;:::o;1039:1016:6:-;1203:12;;;:35;;-1:-1:-1;1219:19:6;;;;1203:35;1199:72;;;1254:7;;1199:72;1315:23;;;1311:738;;1387:7;1362:21;:32;;1354:78;;;;;;;21860:2:128;1354:78:6;;;21842:21:128;21899:2;21879:18;;;21872:30;21938:34;21918:18;;;21911:62;22009:3;21989:18;;;21982:31;22030:19;;1354:78:6;21658:397:128;1354:78:6;1564:11;1579:14;;;:39;;;1609:9;1597;:21;1579:39;1578:65;;1634:9;1578:65;;;1622:9;1578:65;1564:79;;1658:12;1676:5;:10;;1694:7;1708:3;1676:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:59;;;1822:7;1817:145;;1849:4;:12;;;1869:7;1849:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1897:50:6;;-1:-1:-1;;1897:34:6;1912:4;1897:34;;-1:-1:-1;1932:5:6;;-1:-1:-1;1939:7:6;1897:34;:50::i;:::-;1340:632;;1311:738;;;1992:46;:30;;;2023:5;2030:7;1992:30;:46::i;:::-;1039:1016;;;;:::o;1318:274:124:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;:::-;1505:80;1318:274;-1:-1:-1;;;1318:274:124:o;701:205:114:-;840:58;;;15686:42:128;15674:55;;840:58:114;;;15656:74:128;15746:18;;;;15739:34;;;840:58:114;;;;;;;;;;15629:18:128;;;;840:58:114;;;;;;;;;;863:23;840:58;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;689:411:124:-;753:4;960:60;985:7;994:25;960:24;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:124;1062:7;1071:21;1037:24;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:124:o;4208:409::-;4346:71;;;22444:66:128;22432:79;;4346:71:124;;;;22414:98:128;;;;4346:71:124;;;;;;;;;;22387:18:128;;;;4346:71:124;;;;;;;;;4369:34;4346:71;;;4465:45;;4301:4;;4346:71;4301:4;;;;4465:18;;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:124:o;3207:706:114:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:114;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;23004:2:128;3811:85:114;;;22986:21:128;23043:2;23023:18;;;23016:30;23082:34;23062:18;;;23055:62;23153:12;23133:18;;;23126:40;23183:19;;3811:85:114;22802:406:128;3861:223:120;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;1465:19;;;;5228:60;;;;;;;23822:2:128;5228:60:120;;;23804:21:128;23861:2;23841:18;;;23834:30;23900:31;23880:18;;;23873:59;23949:18;;5228:60:120;23620:353:128;5228:60:120;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:120:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:120;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;14:258:128:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:128;244:16;;237:27;14:258::o;277:442::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;635:2;623:15;640:66;619:88;604:104;;;;710:2;600:113;;277:442;-1:-1:-1;;277:442:128:o;955:154::-;1041:42;1034:5;1030:54;1023:5;1020:65;1010:93;;1099:1;1096;1089:12;1010:93;955:154;:::o;1114:315::-;1182:6;1190;1243:2;1231:9;1222:7;1218:23;1214:32;1211:52;;;1259:1;1256;1249:12;1211:52;1298:9;1285:23;1317:31;1342:5;1317:31;:::i;:::-;1367:5;1419:2;1404:18;;;;1391:32;;-1:-1:-1;;;1114:315:128:o;2001:667::-;2096:6;2104;2112;2120;2128;2181:3;2169:9;2160:7;2156:23;2152:33;2149:53;;;2198:1;2195;2188:12;2149:53;2237:9;2224:23;2256:31;2281:5;2256:31;:::i;:::-;2306:5;-1:-1:-1;2358:2:128;2343:18;;2330:32;;-1:-1:-1;2414:2:128;2399:18;;2386:32;2427:33;2386:32;2427:33;:::i;:::-;2479:7;-1:-1:-1;2533:2:128;2518:18;;2505:32;;-1:-1:-1;2589:3:128;2574:19;;2561:33;2603;2561;2603;:::i;:::-;2655:7;2645:17;;;2001:667;;;;;;;;:::o;2933:525::-;3019:6;3027;3035;3043;3096:3;3084:9;3075:7;3071:23;3067:33;3064:53;;;3113:1;3110;3103:12;3064:53;3152:9;3139:23;3171:31;3196:5;3171:31;:::i;:::-;3221:5;-1:-1:-1;3273:2:128;3258:18;;3245:32;;-1:-1:-1;3324:2:128;3309:18;;3296:32;;-1:-1:-1;3380:2:128;3365:18;;3352:32;3393:33;3352:32;3393:33;:::i;:::-;2933:525;;;;-1:-1:-1;2933:525:128;;-1:-1:-1;;2933:525:128:o;3645:117::-;3730:6;3723:5;3719:18;3712:5;3709:29;3699:57;;3752:1;3749;3742:12;3767:807;3870:6;3878;3886;3894;3902;3910;3963:3;3951:9;3942:7;3938:23;3934:33;3931:53;;;3980:1;3977;3970:12;3931:53;4019:9;4006:23;4038:31;4063:5;4038:31;:::i;:::-;4088:5;-1:-1:-1;4140:2:128;4125:18;;4112:32;;-1:-1:-1;4191:2:128;4176:18;;4163:32;;-1:-1:-1;4247:2:128;4232:18;;4219:32;4260:33;4219:32;4260:33;:::i;:::-;4312:7;-1:-1:-1;4371:3:128;4356:19;;4343:33;4385;4343;4385;:::i;:::-;4437:7;-1:-1:-1;4496:3:128;4481:19;;4468:33;4510:32;4468:33;4510:32;:::i;:::-;4561:7;4551:17;;;3767:807;;;;;;;;:::o;4579:247::-;4638:6;4691:2;4679:9;4670:7;4666:23;4662:32;4659:52;;;4707:1;4704;4697:12;4659:52;4746:9;4733:23;4765:31;4790:5;4765:31;:::i;5092:437::-;5171:1;5167:12;;;;5214;;;5235:61;;5289:4;5281:6;5277:17;5267:27;;5235:61;5342:2;5334:6;5331:14;5311:18;5308:38;5305:218;;;5379:77;5376:1;5369:88;5480:4;5477:1;5470:15;5508:4;5505:1;5498:15;5305:218;;5092:437;;;:::o;6229:251::-;6299:6;6352:2;6340:9;6331:7;6327:23;6323:32;6320:52;;;6368:1;6365;6358:12;6320:52;6400:9;6394:16;6419:31;6444:5;6419:31;:::i;6817:277::-;6884:6;6937:2;6925:9;6916:7;6912:23;6908:32;6905:52;;;6953:1;6950;6943:12;6905:52;6985:9;6979:16;7038:5;7031:13;7024:21;7017:5;7014:32;7004:60;;7060:1;7057;7050:12;8688:184;8740:77;8737:1;8730:88;8837:4;8834:1;8827:15;8861:4;8858:1;8851:15;8877:228;8917:7;9043:1;8975:66;8971:74;8968:1;8965:81;8960:1;8953:9;8946:17;8942:105;8939:131;;;9050:18;;:::i;:::-;-1:-1:-1;9090:9:128;;8877:228::o;9110:274::-;9150:1;9176;9166:189;;9211:77;9208:1;9201:88;9312:4;9309:1;9302:15;9340:4;9337:1;9330:15;9166:189;-1:-1:-1;9369:9:128;;9110:274::o;9389:125::-;9429:4;9457:1;9454;9451:8;9448:34;;;9462:18;;:::i;:::-;-1:-1:-1;9499:9:128;;9389:125::o;10269:435::-;10088:12;;10102:42;10084:61;10072:74;;10195:4;10184:16;;;10178:23;10162:14;;;10155:47;10251:4;10240:16;;;10234:23;10218:14;;;10211:47;10563:3;10548:19;;10088:12;;10102:42;10084:61;10694:2;10679:18;;10072:74;10195:4;10184:16;;10178:23;10162:14;;;10155:47;10251:4;10240:16;;10234:23;10218:14;;;10211:47;10637:61;10003:261;11170:368;11418:42;11406:55;;;11388:74;;10855:12;;10851:21;;11528:2;11513:18;;10839:34;10926:4;10915:16;;10909:23;10905:32;;10889:14;;;10882:56;10981:4;10970:16;;10964:23;11019:18;;;11003:14;;;10996:42;11095:6;11078:3;11074:19;;;11070:32;11054:14;;;11047:56;11152:4;11141:16;;11135:23;11119:14;;;11112:47;11375:3;11360:19;;11471:61;10709:456;12330:184;12382:77;12379:1;12372:88;12479:4;12476:1;12469:15;12503:4;12500:1;12493:15;12519:334;12590:2;12584:9;12646:2;12636:13;;12651:66;12632:86;12620:99;;12749:18;12734:34;;12770:22;;;12731:62;12728:88;;;12796:18;;:::i;:::-;12832:2;12825:22;12519:334;;-1:-1:-1;12519:334:128:o;12858:191::-;12926:4;12959:18;12951:6;12948:30;12945:56;;;12981:18;;:::i;:::-;-1:-1:-1;13026:1:128;13022:14;13038:4;13018:25;;12858:191::o;13054:667::-;13119:5;13172:3;13165:4;13157:6;13153:17;13149:27;13139:55;;13190:1;13187;13180:12;13139:55;13219:6;13213:13;13245:4;13269:68;13285:51;13333:2;13285:51;:::i;:::-;13269:68;:::i;:::-;13371:15;;;13457:1;13453:10;;;;13441:23;;13437:32;;;13402:12;;;;13481:15;;;13478:35;;;13509:1;13506;13499:12;13478:35;13545:2;13537:6;13533:15;13557:135;13573:6;13568:3;13565:15;13557:135;;;13639:10;;13627:23;;13670:12;;;;13590;;13557:135;;;-1:-1:-1;13710:5:128;13054:667;-1:-1:-1;;;;;;13054:667:128:o;13726:1225::-;13863:6;13871;13924:2;13912:9;13903:7;13899:23;13895:32;13892:52;;;13940:1;13937;13930:12;13892:52;13973:9;13967:16;14002:18;14043:2;14035:6;14032:14;14029:34;;;14059:1;14056;14049:12;14029:34;14097:6;14086:9;14082:22;14072:32;;14142:7;14135:4;14131:2;14127:13;14123:27;14113:55;;14164:1;14161;14154:12;14113:55;14193:2;14187:9;14215:4;14239:68;14255:51;14303:2;14255:51;:::i;14239:68::-;14341:15;;;14423:1;14419:10;;;;14411:19;;14407:28;;;14372:12;;;;14447:19;;;14444:39;;;14479:1;14476;14469:12;14444:39;14503:11;;;;14523:210;14539:6;14534:3;14531:15;14523:210;;;14612:3;14606:10;14629:31;14654:5;14629:31;:::i;:::-;14673:18;;14556:12;;;;14711;;;;14523:210;;;14788:18;;;14782:25;14752:5;;-1:-1:-1;14782:25:128;;-1:-1:-1;;;14819:16:128;;;14816:36;;;14848:1;14845;14838:12;14816:36;;14871:74;14937:7;14926:8;14915:9;14911:24;14871:74;:::i;:::-;14861:84;;;13726:1225;;;;;:::o;14956:184::-;15008:77;15005:1;14998:88;15105:4;15102:1;15095:15;15129:4;15126:1;15119:15;17866:244;10855:12;;10788:42;10851:21;;;10839:34;;10926:4;10915:16;;10909:23;10905:32;;10898:4;10889:14;;10882:56;10981:4;10970:16;;10964:23;11019:18;;;11012:4;11003:14;;10996:42;11095:6;18039:3;11074:19;;;11070:32;11063:4;11054:14;;11047:56;11152:4;11141:16;;11135:23;11128:4;11119:14;;11112:47;18024:19;;18052:52;10709:456;19988:184;20058:6;20111:2;20099:9;20090:7;20086:23;20082:32;20079:52;;;20127:1;20124;20117:12;20079:52;-1:-1:-1;20150:16:128;;19988:184;-1:-1:-1;19988:184:128:o;20177:128::-;20217:3;20248:1;20244:6;20241:1;20238:13;20235:39;;;20254:18;;:::i;:::-;-1:-1:-1;20290:9:128;;20177:128::o;21270:383::-;21348:6;21356;21409:2;21397:9;21388:7;21384:23;21380:32;21377:52;;;21425:1;21422;21415:12;21377:52;21457:9;21451:16;21476:30;21500:5;21476:30;:::i;:::-;21575:2;21560:18;;21554:25;21525:5;;-1:-1:-1;21588:33:128;21554:25;21588:33;:::i;:::-;21640:7;21630:17;;;21270:383;;;;;:::o;22523:274::-;22652:3;22690:6;22684:13;22706:53;22752:6;22747:3;22740:4;22732:6;22728:17;22706:53;:::i;:::-;22775:16;;;;;22523:274;-1:-1:-1;;22523:274:128:o",
    "linkReferences": {},
    "immutableReferences": {
      "1085": [
        {
          "start": 603,
          "length": 32
        },
        {
          "start": 7678,
          "length": 32
        }
      ],
      "1222": [
        {
          "start": 9145,
          "length": 32
        },
        {
          "start": 9297,
          "length": 32
        }
      ],
      "6464": [
        {
          "start": 784,
          "length": 32
        },
        {
          "start": 2731,
          "length": 32
        },
        {
          "start": 4545,
          "length": 32
        },
        {
          "start": 4881,
          "length": 32
        }
      ],
      "762": [
        {
          "start": 254,
          "length": 32
        },
        {
          "start": 6583,
          "length": 32
        }
      ],
      "766": [
        {
          "start": 8457,
          "length": 32
        },
        {
          "start": 8629,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": "9128c22c",
    "askForNFT(address,uint256)": "418f0656",
    "cancelAsk(address,uint256)": "40b80746",
    "createAsk(address,uint256,uint256,address,address,uint16)": "9e847108",
    "erc20TransferHelper()": "8f9d3251",
    "erc721TransferHelper()": "f7cd1d9b",
    "fillAsk(address,uint256,address,uint256,address)": "622dcbd7",
    "name()": "06fdde03",
    "registrar()": "2b20e397",
    "setAskPrice(address,uint256,uint256,address)": "b2007533",
    "setRoyaltyEngineAddress(address)": "b249bb30"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeSettings\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"finder\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userB\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct UniversalExchangeEventV1.ExchangeDetails\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct UniversalExchangeEventV1.ExchangeDetails\",\"name\":\"b\",\"type\":\"tuple\"}],\"name\":\"ExchangeExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPayout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payoutCurrency\",\"type\":\"address\"}],\"name\":\"_handleRoyaltyEnginePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"askForNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_askPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_askCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_findersFeeBps\",\"type\":\"uint16\"}],\"name\":\"createAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC20TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC721TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fillCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fillAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"}],\"name\":\"fillAsk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_askPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_askCurrency\",\"type\":\"address\"}],\"name\":\"setAskPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"}],\"name\":\"setRoyaltyEngineAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"tbtstl <t@zora.co>\",\"events\":{\"AskCanceled(address,uint256,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the canceled ask\",\"tokenContract\":\"The ERC-721 token address of the canceled ask\",\"tokenId\":\"The ERC-721 token ID of the canceled ask\"}},\"AskCreated(address,uint256,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the created ask\",\"tokenContract\":\"The ERC-721 token address of the created ask\",\"tokenId\":\"The ERC-721 token ID of the created ask\"}},\"AskFilled(address,uint256,address,address,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the filled ask\",\"buyer\":\"The buyer address of the filled ask\",\"finder\":\"The address of finder who referred the ask\",\"tokenContract\":\"The ERC-721 token address of the filled ask\",\"tokenId\":\"The ERC-721 token ID of the filled ask\"}},\"AskPriceUpdated(address,uint256,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the updated ask\",\"tokenContract\":\"The ERC-721 token address of the updated ask\",\"tokenId\":\"The ERC-721 token ID of the updated ask\"}}},\"kind\":\"dev\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"details\":\"This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.\",\"params\":{\"_amount\":\"The total sale amount\",\"_payoutCurrency\":\"The ERC-20 token address to payout royalties in, or address(0) for ETH\",\"_tokenContract\":\"The NFT Contract to get royalty information from\",\"_tokenId\":\", The Token ID to get royalty information from\"},\"returns\":{\"_0\":\"The remaining funds after paying out royalties\"}},\"cancelAsk(address,uint256)\":{\"params\":{\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The ID of the ERC-721 token\"}},\"constructor\":{\"params\":{\"_erc20TransferHelper\":\"The ZORA ERC-20 Transfer Helper address\",\"_erc721TransferHelper\":\"The ZORA ERC-721 Transfer Helper address\",\"_protocolFeeSettings\":\"The ZoraProtocolFeeSettingsV1 address\",\"_royaltyEngine\":\"The Manifold Royalty Engine address << @note this was simplified for Canto implementation\",\"_wethAddress\":\"The WETH token address\"}},\"createAsk(address,uint256,uint256,address,address,uint16)\":{\"params\":{\"_askCurrency\":\"The address of the ERC-20 token required to fill, or address(0) for ETH\",\"_askPrice\":\"The price to fill the ask\",\"_findersFeeBps\":\"The bps of the ask price (post-royalties) to be sent to the referrer of the sale\",\"_sellerFundsRecipient\":\"The address to send funds once the ask is filled\",\"_tokenContract\":\"The address of the ERC-721 token to be sold\",\"_tokenId\":\"The ID of the ERC-721 token to be sold\"}},\"fillAsk(address,uint256,address,uint256,address)\":{\"params\":{\"_fillAmount\":\"The amount to fill the ask\",\"_fillCurrency\":\"The address of the ERC-20 token using to fill, or address(0) for ETH\",\"_finder\":\"The address of the ask referrer\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The ID of the ERC-721 token\"}},\"setAskPrice(address,uint256,uint256,address)\":{\"params\":{\"_askCurrency\":\"The address of the ERC-20 token required to fill, or address(0) for ETH\",\"_askPrice\":\"The ask price to set\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The ID of the ERC-721 token\"}},\"setRoyaltyEngineAddress(address)\":{\"details\":\"emergency use only \\u2013 requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI\",\"params\":{\"_royaltyEngine\":\"The address for the new royalty engine\"}}},\"stateVariables\":{\"USE_ALL_GAS_FLAG\":{\"details\":\"The indicator to pass all remaining gas when paying out royalties\"},\"askForNFT\":{\"details\":\"ERC-721 token contract => ERC-721 token ID => Ask\"}},\"title\":\"Asks V1.1\",\"version\":1},\"userdoc\":{\"events\":{\"AskCanceled(address,uint256,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask is canceled\"},\"AskCreated(address,uint256,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask is created\"},\"AskFilled(address,uint256,address,address,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask is filled\"},\"AskPriceUpdated(address,uint256,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask price is updated\"},\"ExchangeExecuted(address,address,(address,uint256,uint256),(address,uint256,uint256))\":{\"notice\":\"Emitted when a token exchange is executed\"},\"RoyaltyPayout(address,uint256,address,uint256)\":{\"notice\":\"Emitted when royalties are paid\"}},\"kind\":\"user\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"notice\":\"Pays out royalties for NFTs based on the information returned by the royalty engine\"},\"askForNFT(address,uint256)\":{\"notice\":\"The ask for a given NFT, if one exists\"},\"cancelAsk(address,uint256)\":{\"notice\":\"Cancels the ask for a given NFT\"},\"createAsk(address,uint256,uint256,address,address,uint16)\":{\"notice\":\"Creates the ask for a given NFT\"},\"erc20TransferHelper()\":{\"notice\":\"The ZORA ERC-20 Transfer Helper\"},\"erc721TransferHelper()\":{\"notice\":\"The ZORA ERC-721 Transfer Helper\"},\"fillAsk(address,uint256,address,uint256,address)\":{\"notice\":\"Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer\"},\"name()\":{\"notice\":\"The module name\"},\"registrar()\":{\"notice\":\"The ZORA Module Registrar\"},\"setAskPrice(address,uint256,uint256,address)\":{\"notice\":\"Updates the ask price for a given NFT\"},\"setRoyaltyEngineAddress(address)\":{\"notice\":\"Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy\"}},\"notice\":\"This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Asks/V1.1/AsksV1_1.sol\":\"AsksV1_1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@manifoldxyz/=node_modules/@manifoldxyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/ZoraModuleManager.sol\":{\"keccak256\":\"0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f\",\"dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6\"]},\"contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol\":{\"keccak256\":\"0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805\",\"dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t\"]},\"contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol\":{\"keccak256\":\"0xa29ac2f5104fe554ccab7c1c1eac1a91c043064a8c571253177e8c707d3df8d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7335dcf58a8134289861c5dbe20e79bb7db28d131d065bc1e4c0dc0f79a99f27\",\"dweb:/ipfs/Qmdabk1co2w1LQzh4bmaniFXPogmVaPMDHP2WPcrRkmBFc\"]},\"contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol\":{\"keccak256\":\"0xc9fcd245467d24b64528581a38fcf0f07568f107f520edbb93c287c11f745bd3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2284e0522eff27797026547b2162ae656458d0c33f71cc1a98efe9117265e35f\",\"dweb:/ipfs/QmQbnLjat7YZro2Ko3XXn7Hi8BMgVnW6BTNj9aaMuMuKM6\"]},\"contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol\":{\"keccak256\":\"0xe4496549a785f714d8b8edea0716aa0f9ac53152fc171d286b24ed35d6046481\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://86bf38b07ac5b62dac1889c23d6ffa72c41413c5b3e2c37518e3ef16724170d2\",\"dweb:/ipfs/QmdmpFLMTReVM6j49CPXkzgyS4qjGsAkM7LtFzszqTy3EL\"]},\"contracts/common/OutgoingTransferSupport/V1/IWETH.sol\":{\"keccak256\":\"0xc95333328cada092ac242d36c205f984a69a22925f1d6ec4f3d26032006cd70a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ef55582164f1ad9ce2ba8ac25e49cd3e01a0e8383bdfbf9bac97c768b1e91f84\",\"dweb:/ipfs/QmXupdT8p88m5dNJuCGpQABoMLFs98AvRS4E1CDRkt7isM\"]},\"contracts/common/OutgoingTransferSupport/V1/OutgoingTransferSupportV1.sol\":{\"keccak256\":\"0xe13614f0a2f5547fa1c97564ed26d843678aaaf245d7406d051ab8ad91115efe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://815cc7f0070d60dedfe610a7189aae87594383b8010d1df65342fd6fb67e1a21\",\"dweb:/ipfs/QmbU8yxSwYgV9A7L2FCnfHCHHyDntUaHKg5sCxfNwbBrDQ\"]},\"contracts/common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol\":{\"keccak256\":\"0x5558ac2feadaea95d7cdd50a08b0ff7ef7212232939cd96c9c07a52512a5f994\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7f18b2e3ae487f002d6e000db0e640a8602c754d884244dad720e0ce59fa1aa4\",\"dweb:/ipfs/QmbETw9NikqJ4vYVPhqAoQqpBJoYYDq1nfq8J6LD6SCjTE\"]},\"contracts/modules/Asks/V1.1/AsksV1_1.sol\":{\"keccak256\":\"0x3edca7604c2f25d766459f6c12a8e35c5e4ef8dbd36134ec1e056927c8f61564\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b42f0f6c82aec1ae4302e51bc34bd36fc21d6de0b302db4e4d2ec2a95f4bad8a\",\"dweb:/ipfs/QmP6pgMG9n532dz1cv4vUDt9nr8umATWHiWQMsGV7rpUYV\"]},\"contracts/transferHelpers/BaseTransferHelper.sol\":{\"keccak256\":\"0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575\",\"dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp\"]},\"contracts/transferHelpers/ERC20TransferHelper.sol\":{\"keccak256\":\"0xc859f86b8ab62e2b98840360995426c70171e74f68fd5ed63c7d34cdfee00623\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://33ecf220a30ac6a6b56a98d58fcca6ee38fc4bcde498e8e33750e675c5d77ab3\",\"dweb:/ipfs/QmVn2cxhEiQdD11f2b1vaQ1uGrXHKanxBXxjP5P3SWdsPz\"]},\"contracts/transferHelpers/ERC721TransferHelper.sol\":{\"keccak256\":\"0x23fa0ddaac378c885fabf22e8d458e61f3ab8608b9937dfbf49ac82e25153761\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a5d75279b5ca309e35b184db7fefa69053dc58402be86aea1fc141bf55cf95d3\",\"dweb:/ipfs/QmXfoyWWAekkinQrzcSgkJJoKCRVg2dWqBtdLe6m2drDqW\"]},\"node_modules/@manifoldxyz/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol\":{\"keccak256\":\"0x088b901b9fe87d03d237b5a0a84ba35c18933dafb9fc344bd4d17a8085ea0387\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa396e7cb04483aaffc2d50038d01a71816e5a3bc72021c5780e56a6437a1bcf\",\"dweb:/ipfs/QmUEawXCXimTSihzT2UBVvwVjmCa1ykFuwwQg9p6CapDzM\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826\",\"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed\",\"dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_erc20TransferHelper",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_erc721TransferHelper",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyEngine",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeSettings",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_wethAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct AsksV1_1.Ask",
              "name": "ask",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sellerFundsRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "askCurrency",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "findersFeeBps",
                  "type": "uint16"
                },
                {
                  "internalType": "uint256",
                  "name": "askPrice",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct AsksV1_1.Ask",
              "name": "ask",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sellerFundsRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "askCurrency",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "findersFeeBps",
                  "type": "uint16"
                },
                {
                  "internalType": "uint256",
                  "name": "askPrice",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "finder",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct AsksV1_1.Ask",
              "name": "ask",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sellerFundsRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "askCurrency",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "findersFeeBps",
                  "type": "uint16"
                },
                {
                  "internalType": "uint256",
                  "name": "askPrice",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskFilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct AsksV1_1.Ask",
              "name": "ask",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sellerFundsRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "askCurrency",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "findersFeeBps",
                  "type": "uint16"
                },
                {
                  "internalType": "uint256",
                  "name": "askPrice",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskPriceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userA",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "userB",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
              "name": "a",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
              "name": "b",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExchangeExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyPayout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_payoutCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "_handleRoyaltyEnginePayout",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "askForNFT",
          "outputs": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAsk"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_askPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_askCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "_findersFeeBps",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAsk"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "erc20TransferHelper",
          "outputs": [
            {
              "internalType": "contract ERC20TransferHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "erc721TransferHelper",
          "outputs": [
            {
              "internalType": "contract ERC721TransferHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_fillCurrency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_fillAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_finder",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fillAsk"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registrar",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_askPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_askCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAskPrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyEngine",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyEngineAddress"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
            "details": "This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.",
            "params": {
              "_amount": "The total sale amount",
              "_payoutCurrency": "The ERC-20 token address to payout royalties in, or address(0) for ETH",
              "_tokenContract": "The NFT Contract to get royalty information from",
              "_tokenId": ", The Token ID to get royalty information from"
            },
            "returns": {
              "_0": "The remaining funds after paying out royalties"
            }
          },
          "cancelAsk(address,uint256)": {
            "params": {
              "_tokenContract": "The address of the ERC-721 token",
              "_tokenId": "The ID of the ERC-721 token"
            }
          },
          "constructor": {
            "params": {
              "_erc20TransferHelper": "The ZORA ERC-20 Transfer Helper address",
              "_erc721TransferHelper": "The ZORA ERC-721 Transfer Helper address",
              "_protocolFeeSettings": "The ZoraProtocolFeeSettingsV1 address",
              "_royaltyEngine": "The Manifold Royalty Engine address << @note this was simplified for Canto implementation",
              "_wethAddress": "The WETH token address"
            }
          },
          "createAsk(address,uint256,uint256,address,address,uint16)": {
            "params": {
              "_askCurrency": "The address of the ERC-20 token required to fill, or address(0) for ETH",
              "_askPrice": "The price to fill the ask",
              "_findersFeeBps": "The bps of the ask price (post-royalties) to be sent to the referrer of the sale",
              "_sellerFundsRecipient": "The address to send funds once the ask is filled",
              "_tokenContract": "The address of the ERC-721 token to be sold",
              "_tokenId": "The ID of the ERC-721 token to be sold"
            }
          },
          "fillAsk(address,uint256,address,uint256,address)": {
            "params": {
              "_fillAmount": "The amount to fill the ask",
              "_fillCurrency": "The address of the ERC-20 token using to fill, or address(0) for ETH",
              "_finder": "The address of the ask referrer",
              "_tokenContract": "The address of the ERC-721 token",
              "_tokenId": "The ID of the ERC-721 token"
            }
          },
          "setAskPrice(address,uint256,uint256,address)": {
            "params": {
              "_askCurrency": "The address of the ERC-20 token required to fill, or address(0) for ETH",
              "_askPrice": "The ask price to set",
              "_tokenContract": "The address of the ERC-721 token",
              "_tokenId": "The ID of the ERC-721 token"
            }
          },
          "setRoyaltyEngineAddress(address)": {
            "details": "emergency use only – requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI",
            "params": {
              "_royaltyEngine": "The address for the new royalty engine"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
            "notice": "Pays out royalties for NFTs based on the information returned by the royalty engine"
          },
          "askForNFT(address,uint256)": {
            "notice": "The ask for a given NFT, if one exists"
          },
          "cancelAsk(address,uint256)": {
            "notice": "Cancels the ask for a given NFT"
          },
          "createAsk(address,uint256,uint256,address,address,uint16)": {
            "notice": "Creates the ask for a given NFT"
          },
          "erc20TransferHelper()": {
            "notice": "The ZORA ERC-20 Transfer Helper"
          },
          "erc721TransferHelper()": {
            "notice": "The ZORA ERC-721 Transfer Helper"
          },
          "fillAsk(address,uint256,address,uint256,address)": {
            "notice": "Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer"
          },
          "name()": {
            "notice": "The module name"
          },
          "registrar()": {
            "notice": "The ZORA Module Registrar"
          },
          "setAskPrice(address,uint256,uint256,address)": {
            "notice": "Updates the ask price for a given NFT"
          },
          "setRoyaltyEngineAddress(address)": {
            "notice": "Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@manifoldxyz/=node_modules/@manifoldxyz/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 500000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/modules/Asks/V1.1/AsksV1_1.sol": "AsksV1_1"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ZoraModuleManager.sol": {
        "keccak256": "0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435",
        "urls": [
          "bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f",
          "dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6"
        ],
        "license": "GPL-3.0"
      },
      "contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol": {
        "keccak256": "0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d",
        "urls": [
          "bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805",
          "dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol": {
        "keccak256": "0xa29ac2f5104fe554ccab7c1c1eac1a91c043064a8c571253177e8c707d3df8d1",
        "urls": [
          "bzz-raw://7335dcf58a8134289861c5dbe20e79bb7db28d131d065bc1e4c0dc0f79a99f27",
          "dweb:/ipfs/Qmdabk1co2w1LQzh4bmaniFXPogmVaPMDHP2WPcrRkmBFc"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol": {
        "keccak256": "0xc9fcd245467d24b64528581a38fcf0f07568f107f520edbb93c287c11f745bd3",
        "urls": [
          "bzz-raw://2284e0522eff27797026547b2162ae656458d0c33f71cc1a98efe9117265e35f",
          "dweb:/ipfs/QmQbnLjat7YZro2Ko3XXn7Hi8BMgVnW6BTNj9aaMuMuKM6"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol": {
        "keccak256": "0xe4496549a785f714d8b8edea0716aa0f9ac53152fc171d286b24ed35d6046481",
        "urls": [
          "bzz-raw://86bf38b07ac5b62dac1889c23d6ffa72c41413c5b3e2c37518e3ef16724170d2",
          "dweb:/ipfs/QmdmpFLMTReVM6j49CPXkzgyS4qjGsAkM7LtFzszqTy3EL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/OutgoingTransferSupport/V1/IWETH.sol": {
        "keccak256": "0xc95333328cada092ac242d36c205f984a69a22925f1d6ec4f3d26032006cd70a",
        "urls": [
          "bzz-raw://ef55582164f1ad9ce2ba8ac25e49cd3e01a0e8383bdfbf9bac97c768b1e91f84",
          "dweb:/ipfs/QmXupdT8p88m5dNJuCGpQABoMLFs98AvRS4E1CDRkt7isM"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/OutgoingTransferSupport/V1/OutgoingTransferSupportV1.sol": {
        "keccak256": "0xe13614f0a2f5547fa1c97564ed26d843678aaaf245d7406d051ab8ad91115efe",
        "urls": [
          "bzz-raw://815cc7f0070d60dedfe610a7189aae87594383b8010d1df65342fd6fb67e1a21",
          "dweb:/ipfs/QmbU8yxSwYgV9A7L2FCnfHCHHyDntUaHKg5sCxfNwbBrDQ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol": {
        "keccak256": "0x5558ac2feadaea95d7cdd50a08b0ff7ef7212232939cd96c9c07a52512a5f994",
        "urls": [
          "bzz-raw://7f18b2e3ae487f002d6e000db0e640a8602c754d884244dad720e0ce59fa1aa4",
          "dweb:/ipfs/QmbETw9NikqJ4vYVPhqAoQqpBJoYYDq1nfq8J6LD6SCjTE"
        ],
        "license": "GPL-3.0"
      },
      "contracts/modules/Asks/V1.1/AsksV1_1.sol": {
        "keccak256": "0x3edca7604c2f25d766459f6c12a8e35c5e4ef8dbd36134ec1e056927c8f61564",
        "urls": [
          "bzz-raw://b42f0f6c82aec1ae4302e51bc34bd36fc21d6de0b302db4e4d2ec2a95f4bad8a",
          "dweb:/ipfs/QmP6pgMG9n532dz1cv4vUDt9nr8umATWHiWQMsGV7rpUYV"
        ],
        "license": "GPL-3.0"
      },
      "contracts/transferHelpers/BaseTransferHelper.sol": {
        "keccak256": "0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46",
        "urls": [
          "bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575",
          "dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/transferHelpers/ERC20TransferHelper.sol": {
        "keccak256": "0xc859f86b8ab62e2b98840360995426c70171e74f68fd5ed63c7d34cdfee00623",
        "urls": [
          "bzz-raw://33ecf220a30ac6a6b56a98d58fcca6ee38fc4bcde498e8e33750e675c5d77ab3",
          "dweb:/ipfs/QmVn2cxhEiQdD11f2b1vaQ1uGrXHKanxBXxjP5P3SWdsPz"
        ],
        "license": "GPL-3.0"
      },
      "contracts/transferHelpers/ERC721TransferHelper.sol": {
        "keccak256": "0x23fa0ddaac378c885fabf22e8d458e61f3ab8608b9937dfbf49ac82e25153761",
        "urls": [
          "bzz-raw://a5d75279b5ca309e35b184db7fefa69053dc58402be86aea1fc141bf55cf95d3",
          "dweb:/ipfs/QmXfoyWWAekkinQrzcSgkJJoKCRVg2dWqBtdLe6m2drDqW"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@manifoldxyz/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol": {
        "keccak256": "0x088b901b9fe87d03d237b5a0a84ba35c18933dafb9fc344bd4d17a8085ea0387",
        "urls": [
          "bzz-raw://fa396e7cb04483aaffc2d50038d01a71816e5a3bc72021c5780e56a6437a1bcf",
          "dweb:/ipfs/QmUEawXCXimTSihzT2UBVvwVjmCa1ykFuwwQg9p6CapDzM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea",
        "urls": [
          "bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62",
          "dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba",
        "urls": [
          "bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0",
          "dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e",
        "urls": [
          "bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826",
          "dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015",
        "urls": [
          "bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed",
          "dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/modules/Asks/V1.1/AsksV1_1.sol",
    "id": 7006,
    "exportedSymbols": {
      "AsksV1_1": [
        7005
      ],
      "ERC721TransferHelper": [
        50788
      ],
      "FeePayoutSupportV1": [
        1068
      ],
      "IERC721": [
        56788
      ],
      "IncomingTransferSupportV1": [
        1173
      ],
      "ModuleNamingSupportV1": [
        1191
      ],
      "ReentrancyGuard": [
        58243
      ],
      "UniversalExchangeEventV1": [
        1361
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:17672:38",
    "nodes": [
      {
        "id": 6431,
        "nodeType": "PragmaDirective",
        "src": "36:23:38",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 6433,
        "nodeType": "ImportDirective",
        "src": "61:84:38",
        "nodes": [],
        "absolutePath": "node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7006,
        "sourceUnit": 58244,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6432,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6435,
        "nodeType": "ImportDirective",
        "src": "146:73:38",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7006,
        "sourceUnit": 56789,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6434,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6437,
        "nodeType": "ImportDirective",
        "src": "220:87:38",
        "nodes": [],
        "absolutePath": "contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../transferHelpers/ERC721TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7006,
        "sourceUnit": 50789,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6436,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "228:20:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6439,
        "nodeType": "ImportDirective",
        "src": "308:112:38",
        "nodes": [],
        "absolutePath": "contracts/common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "file": "../../../common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7006,
        "sourceUnit": 1362,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6438,
              "name": "UniversalExchangeEventV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "316:24:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6441,
        "nodeType": "ImportDirective",
        "src": "421:115:38",
        "nodes": [],
        "absolutePath": "contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "file": "../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7006,
        "sourceUnit": 1174,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6440,
              "name": "IncomingTransferSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "429:25:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6443,
        "nodeType": "ImportDirective",
        "src": "537:91:38",
        "nodes": [],
        "absolutePath": "contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7006,
        "sourceUnit": 1069,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6442,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "545:18:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6445,
        "nodeType": "ImportDirective",
        "src": "629:100:38",
        "nodes": [],
        "absolutePath": "contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7006,
        "sourceUnit": 1192,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6444,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "637:21:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7005,
        "nodeType": "ContractDefinition",
        "src": "947:16760:38",
        "nodes": [
          {
            "id": 6460,
            "nodeType": "VariableDeclaration",
            "src": "1165:45:38",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 6457,
              "nodeType": "StructuredDocumentation",
              "src": "1086:74:38",
              "text": "@dev The indicator to pass all remaining gas when paying out royalties"
            },
            "mutability": "constant",
            "name": "USE_ALL_GAS_FLAG",
            "nameLocation": "1190:16:38",
            "scope": 7005,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6458,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 6459,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1209:1:38",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "id": 6464,
            "nodeType": "VariableDeclaration",
            "src": "1266:58:38",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6461,
              "nodeType": "StructuredDocumentation",
              "src": "1217:44:38",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1304:20:38",
            "scope": 7005,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 6463,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6462,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50788,
                "src": "1266:20:38"
              },
              "referencedDeclaration": 50788,
              "src": "1266:20:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6472,
            "nodeType": "VariableDeclaration",
            "src": "1449:60:38",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6465,
              "nodeType": "StructuredDocumentation",
              "src": "1331:113:38",
              "text": "@notice The ask for a given NFT, if one exists\n @dev ERC-721 token contract => ERC-721 token ID => Ask"
            },
            "functionSelector": "418f0656",
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "1500:9:38",
            "scope": 7005,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
            },
            "typeName": {
              "id": 6471,
              "keyType": {
                "id": 6466,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1457:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1449:43:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
              },
              "valueType": {
                "id": 6470,
                "keyType": {
                  "id": 6467,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1476:7:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1468:23:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                  "typeString": "mapping(uint256 => struct AsksV1_1.Ask)"
                },
                "valueType": {
                  "id": 6469,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 6468,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 6483,
                    "src": "1487:3:38"
                  },
                  "referencedDeclaration": 6483,
                  "src": "1487:3:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 6483,
            "nodeType": "StructDefinition",
            "src": "1922:165:38",
            "nodes": [],
            "canonicalName": "AsksV1_1.Ask",
            "members": [
              {
                "constant": false,
                "id": 6474,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1951:6:38",
                "nodeType": "VariableDeclaration",
                "scope": 6483,
                "src": "1943:14:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6473,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1943:7:38",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6476,
                "mutability": "mutable",
                "name": "sellerFundsRecipient",
                "nameLocation": "1975:20:38",
                "nodeType": "VariableDeclaration",
                "scope": 6483,
                "src": "1967:28:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6475,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1967:7:38",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6478,
                "mutability": "mutable",
                "name": "askCurrency",
                "nameLocation": "2013:11:38",
                "nodeType": "VariableDeclaration",
                "scope": 6483,
                "src": "2005:19:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6477,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2005:7:38",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6480,
                "mutability": "mutable",
                "name": "findersFeeBps",
                "nameLocation": "2041:13:38",
                "nodeType": "VariableDeclaration",
                "scope": 6483,
                "src": "2034:20:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 6479,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2034:6:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6482,
                "mutability": "mutable",
                "name": "askPrice",
                "nameLocation": "2072:8:38",
                "nodeType": "VariableDeclaration",
                "scope": 6483,
                "src": "2064:16:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6481,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2064:7:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "1929:3:38",
            "scope": 7005,
            "visibility": "public"
          },
          {
            "id": 6493,
            "nodeType": "EventDefinition",
            "src": "2328:82:38",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6484,
              "nodeType": "StructuredDocumentation",
              "src": "2093:230:38",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token ID of the created ask\n @param ask The metadata of the created ask"
            },
            "name": "AskCreated",
            "nameLocation": "2334:10:38",
            "parameters": {
              "id": 6492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6486,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2361:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6493,
                  "src": "2345:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6488,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2392:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6493,
                  "src": "2376:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6491,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2405:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6493,
                  "src": "2401:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$6483_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 6490,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6489,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6483,
                      "src": "2401:3:38"
                    },
                    "referencedDeclaration": 6483,
                    "src": "2401:3:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2344:65:38"
            }
          },
          {
            "id": 6503,
            "nodeType": "EventDefinition",
            "src": "2657:87:38",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6494,
              "nodeType": "StructuredDocumentation",
              "src": "2416:236:38",
              "text": "@notice Emitted when an ask price is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token ID of the updated ask\n @param ask The metadata of the updated ask"
            },
            "name": "AskPriceUpdated",
            "nameLocation": "2663:15:38",
            "parameters": {
              "id": 6502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6496,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2695:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6503,
                  "src": "2679:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6498,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2726:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6503,
                  "src": "2710:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6501,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2739:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6503,
                  "src": "2735:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$6483_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 6500,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6499,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6483,
                      "src": "2735:3:38"
                    },
                    "referencedDeclaration": 6483,
                    "src": "2735:3:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2678:65:38"
            }
          },
          {
            "id": 6513,
            "nodeType": "EventDefinition",
            "src": "2989:83:38",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6504,
              "nodeType": "StructuredDocumentation",
              "src": "2750:234:38",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token ID of the canceled ask\n @param ask The metadata of the canceled ask"
            },
            "name": "AskCanceled",
            "nameLocation": "2995:11:38",
            "parameters": {
              "id": 6512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6506,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3023:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6513,
                  "src": "3007:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6508,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3054:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6513,
                  "src": "3038:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6511,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3067:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6513,
                  "src": "3063:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$6483_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 6510,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6509,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6483,
                      "src": "3063:3:38"
                    },
                    "referencedDeclaration": 6483,
                    "src": "3063:3:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:65:38"
            }
          },
          {
            "id": 6527,
            "nodeType": "EventDefinition",
            "src": "3431:120:38",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6514,
              "nodeType": "StructuredDocumentation",
              "src": "3078:348:38",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token ID of the filled ask\n @param buyer The buyer address of the filled ask\n @param finder The address of finder who referred the ask\n @param ask The metadata of the filled ask"
            },
            "name": "AskFilled",
            "nameLocation": "3437:9:38",
            "parameters": {
              "id": 6526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6516,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3463:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6527,
                  "src": "3447:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6518,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3494:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6527,
                  "src": "3478:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6520,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3519:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6527,
                  "src": "3503:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6522,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finder",
                  "nameLocation": "3534:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6527,
                  "src": "3526:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6525,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3546:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6527,
                  "src": "3542:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$6483_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 6524,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6523,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6483,
                      "src": "3542:3:38"
                    },
                    "referencedDeclaration": 6483,
                    "src": "3542:3:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:104:38"
            }
          },
          {
            "id": 6566,
            "nodeType": "FunctionDefinition",
            "src": "3956:524:38",
            "nodes": [],
            "body": {
              "id": 6565,
              "nodeType": "Block",
              "src": "4397:83:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6559,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6464,
                      "src": "4407:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6561,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6532,
                          "src": "4451:21:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6560,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50788,
                        "src": "4430:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$50788_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 6562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4430:43:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "4407:66:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 6564,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:66:38"
                }
              ]
            },
            "documentation": {
              "id": 6528,
              "nodeType": "StructuredDocumentation",
              "src": "3557:394:38",
              "text": "@param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address << @note this was simplified for Canto implementation\n @param _protocolFeeSettings The ZoraProtocolFeeSettingsV1 address\n @param _wethAddress The WETH token address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6541,
                    "name": "_erc20TransferHelper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6530,
                    "src": "4185:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6542,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6540,
                  "name": "IncomingTransferSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1173,
                  "src": "4159:25:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "4159:47:38"
              },
              {
                "arguments": [
                  {
                    "id": 6544,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6534,
                    "src": "4234:14:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 6545,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6536,
                    "src": "4250:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 6546,
                    "name": "_wethAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6538,
                    "src": "4272:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6548,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6532,
                                "src": "4307:21:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6547,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50788,
                              "src": "4286:20:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$50788_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 6549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4286:43:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 6550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50537,
                          "src": "4286:47:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$379_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 6551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4286:49:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 6552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "4286:59:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 6553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4286:61:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 6554,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6543,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1068,
                  "src": "4215:18:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "4215:133:38"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b733a2076312e31",
                    "id": 6556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4379:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2b85543abc64e3ede7d9f29fca8002c6858bcd6cd65cc034248bdc99d1add94e",
                      "typeString": "literal_string \"Asks: v1.1\""
                    },
                    "value": "Asks: v1.1"
                  }
                ],
                "id": 6557,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6555,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1191,
                  "src": "4357:21:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "4357:35:38"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6530,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "3985:20:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6566,
                  "src": "3977:28:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6532,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "4023:21:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6566,
                  "src": "4015:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4015:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6534,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "4062:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6566,
                  "src": "4054:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6536,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "4094:20:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6566,
                  "src": "4086:28:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4086:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6538,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "4132:12:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6566,
                  "src": "4124:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4124:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3967:183:38"
            },
            "returnParameters": {
              "id": 6558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4397:0:38"
            },
            "scope": 7005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6693,
            "nodeType": "FunctionDefinition",
            "src": "6468:1504:38",
            "nodes": [],
            "body": {
              "id": 6692,
              "nodeType": "Block",
              "src": "6700:1272:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6585,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "6718:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 6692,
                      "src": "6710:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6584,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6710:7:38",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6592,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6590,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6571,
                        "src": "6763:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6587,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6569,
                            "src": "6739:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6586,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56788,
                          "src": "6731:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 6588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6731:23:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$56788",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 6589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56721,
                      "src": "6731:31:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 6591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6731:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6710:62:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6594,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6804:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6804:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 6596,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6585,
                            "src": "6818:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6804:24:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6602,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6585,
                              "src": "6873:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 6603,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6885:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6885:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6599,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6569,
                                  "src": "6840:14:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6598,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56788,
                                "src": "6832:7:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 6600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6832:23:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$56788",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 6601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56787,
                            "src": "6832:40:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 6605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6832:64:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6804:92:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 6607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6910:43:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        },
                        "value": "createAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        }
                      ],
                      "id": 6593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6783:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6783:180:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6609,
                  "nodeType": "ExpressionStatement",
                  "src": "6783:180:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6613,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7019:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7019:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6611,
                            "name": "erc721TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6464,
                            "src": "6981:20:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 6612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isModuleApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50590,
                          "src": "6981:37:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 6615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6981:49:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f76652041736b735631206d6f64756c65",
                        "id": 6616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7032:38:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        },
                        "value": "createAsk must approve AsksV1 module"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        }
                      ],
                      "id": 6610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6973:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:98:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6618,
                  "nodeType": "ExpressionStatement",
                  "src": "6973:98:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6624,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6585,
                            "src": "7143:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 6627,
                                "name": "erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6464,
                                "src": "7163:20:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              ],
                              "id": 6626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7155:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6625,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7155:7:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7155:29:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 6621,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6569,
                                "src": "7110:14:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6620,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56788,
                              "src": "7102:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 6622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7102:23:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$56788",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 6623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56787,
                          "src": "7102:40:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 6629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7102:83:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f7665204552433732315472616e7366657248656c706572206173206f70657261746f72",
                        "id": 6630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7199:57:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        },
                        "value": "createAsk must approve ERC721TransferHelper as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        }
                      ],
                      "id": 6619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7081:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7081:185:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6632,
                  "nodeType": "ExpressionStatement",
                  "src": "7081:185:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 6636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6634,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6579,
                          "src": "7284:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 6635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7302:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "7284:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b2066696e646572732066656520627073206d757374206265206c657373207468616e206f7220657175616c20746f203130303030",
                        "id": 6637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7309:63:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        },
                        "value": "createAsk finders fee bps must be less than or equal to 10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        }
                      ],
                      "id": 6633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7276:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7276:97:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6639,
                  "nodeType": "ExpressionStatement",
                  "src": "7276:97:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6641,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6577,
                          "src": "7391:21:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7424:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7416:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6642,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7416:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7416:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7391:35:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d7573742073706563696679205f73656c6c657246756e6473526563697069656e74",
                        "id": 6647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7428:46:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        },
                        "value": "createAsk must specify _sellerFundsRecipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        }
                      ],
                      "id": 6640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7383:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7383:92:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6649,
                  "nodeType": "ExpressionStatement",
                  "src": "7383:92:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 6650,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6472,
                            "src": "7490:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 6652,
                          "indexExpression": {
                            "id": 6651,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6569,
                            "src": "7500:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7490:25:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 6654,
                        "indexExpression": {
                          "id": 6653,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6571,
                          "src": "7516:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7490:35:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      },
                      "id": 6655,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6474,
                      "src": "7490:42:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 6658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7544:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7536:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7536:7:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7536:10:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7490:56:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6667,
                  "nodeType": "IfStatement",
                  "src": "7486:123:38",
                  "trueBody": {
                    "id": 6666,
                    "nodeType": "Block",
                    "src": "7548:61:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6662,
                              "name": "_tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6569,
                              "src": "7573:14:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6663,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6571,
                              "src": "7589:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6661,
                            "name": "_cancelAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7004,
                            "src": "7562:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 6664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7562:36:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6665,
                        "nodeType": "ExpressionStatement",
                        "src": "7562:36:38"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6668,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6472,
                          "src": "7619:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 6671,
                        "indexExpression": {
                          "id": 6669,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6569,
                          "src": "7629:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7619:25:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 6672,
                      "indexExpression": {
                        "id": 6670,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6571,
                        "src": "7645:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7619:35:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$6483_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6674,
                          "name": "tokenOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6585,
                          "src": "7683:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6675,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6577,
                          "src": "7729:21:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6676,
                          "name": "_askCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6575,
                          "src": "7777:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6677,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6579,
                          "src": "7818:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 6678,
                          "name": "_askPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6573,
                          "src": "7856:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6673,
                        "name": "Ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6483,
                        "src": "7657:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Ask_$6483_storage_ptr_$",
                          "typeString": "type(struct AsksV1_1.Ask storage pointer)"
                        }
                      },
                      "id": 6679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "sellerFundsRecipient",
                        "askCurrency",
                        "findersFeeBps",
                        "askPrice"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7657:219:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$6483_memory_ptr",
                        "typeString": "struct AsksV1_1.Ask memory"
                      }
                    },
                    "src": "7619:257:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$6483_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "id": 6681,
                  "nodeType": "ExpressionStatement",
                  "src": "7619:257:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6683,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6569,
                        "src": "7903:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6684,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6571,
                        "src": "7919:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 6685,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6472,
                            "src": "7929:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 6687,
                          "indexExpression": {
                            "id": 6686,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6569,
                            "src": "7939:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7929:25:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 6689,
                        "indexExpression": {
                          "id": 6688,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6571,
                          "src": "7955:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7929:35:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 6682,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6493,
                      "src": "7892:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$6483_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 6690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7892:73:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6691,
                  "nodeType": "EmitStatement",
                  "src": "7887:78:38"
                }
              ]
            },
            "documentation": {
              "id": 6567,
              "nodeType": "StructuredDocumentation",
              "src": "5935:528:38",
              "text": "@notice Creates the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token to be sold\n @param _tokenId The ID of the ERC-721 token to be sold\n @param _askPrice The price to fill the ask\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH\n @param _sellerFundsRecipient The address to send funds once the ask is filled\n @param _findersFeeBps The bps of the ask price (post-royalties) to be sent to the referrer of the sale"
            },
            "functionSelector": "9e847108",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6582,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6581,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "6687:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "6687:12:38"
              }
            ],
            "name": "createAsk",
            "nameLocation": "6477:9:38",
            "parameters": {
              "id": 6580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6569,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "6504:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6496:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6571,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6536:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6528:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6573,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "6562:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6554:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6554:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6575,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "6589:12:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6581:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6581:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6577,
                  "mutability": "mutable",
                  "name": "_sellerFundsRecipient",
                  "nameLocation": "6619:21:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6611:29:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6611:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6579,
                  "mutability": "mutable",
                  "name": "_findersFeeBps",
                  "nameLocation": "6657:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6693,
                  "src": "6650:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 6578,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6650:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6486:191:38"
            },
            "returnParameters": {
              "id": 6583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6700:0:38"
            },
            "scope": 7005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6744,
            "nodeType": "FunctionDefinition",
            "src": "9038:445:38",
            "nodes": [],
            "body": {
              "id": 6743,
              "nodeType": "Block",
              "src": "9202:281:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6709,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "9224:3:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 6743,
                      "src": "9212:15:38",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 6708,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6707,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6483,
                          "src": "9212:3:38"
                        },
                        "referencedDeclaration": 6483,
                        "src": "9212:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6715,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 6710,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6472,
                        "src": "9230:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 6712,
                      "indexExpression": {
                        "id": 6711,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6696,
                        "src": "9240:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9230:25:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 6714,
                    "indexExpression": {
                      "id": 6713,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6698,
                      "src": "9256:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9230:35:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$6483_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9212:53:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6717,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6709,
                            "src": "9284:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 6718,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6474,
                          "src": "9284:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6719,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9298:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9298:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9284:24:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73657441736b5072696365206d7573742062652073656c6c6572",
                        "id": 6722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9310:28:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        },
                        "value": "setAskPrice must be seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        }
                      ],
                      "id": 6716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9276:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9276:63:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6724,
                  "nodeType": "ExpressionStatement",
                  "src": "9276:63:38"
                },
                {
                  "expression": {
                    "id": 6729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6725,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6709,
                        "src": "9350:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 6727,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6482,
                      "src": "9350:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6728,
                      "name": "_askPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6700,
                      "src": "9365:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9350:24:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6730,
                  "nodeType": "ExpressionStatement",
                  "src": "9350:24:38"
                },
                {
                  "expression": {
                    "id": 6735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 6731,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6709,
                        "src": "9384:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 6733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6478,
                      "src": "9384:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6734,
                      "name": "_askCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6702,
                      "src": "9402:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9384:30:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6736,
                  "nodeType": "ExpressionStatement",
                  "src": "9384:30:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6738,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6696,
                        "src": "9446:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6739,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6698,
                        "src": "9462:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6740,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6709,
                        "src": "9472:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 6737,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6503,
                      "src": "9430:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$6483_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 6741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9430:46:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6742,
                  "nodeType": "EmitStatement",
                  "src": "9425:51:38"
                }
              ]
            },
            "documentation": {
              "id": 6694,
              "nodeType": "StructuredDocumentation",
              "src": "8723:310:38",
              "text": "@notice Updates the ask price for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _askPrice The ask price to set\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH"
            },
            "functionSelector": "b2007533",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6705,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6704,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "9189:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "9189:12:38"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "9047:11:38",
            "parameters": {
              "id": 6703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6696,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "9076:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6744,
                  "src": "9068:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9068:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6698,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9108:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6744,
                  "src": "9100:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9100:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6700,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "9134:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6744,
                  "src": "9126:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9126:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6702,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "9161:12:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6744,
                  "src": "9153:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9153:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9058:121:38"
            },
            "returnParameters": {
              "id": 6706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9202:0:38"
            },
            "scope": 7005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6801,
            "nodeType": "FunctionDefinition",
            "src": "10387:506:38",
            "nodes": [],
            "body": {
              "id": 6800,
              "nodeType": "Block",
              "src": "10470:423:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 6755,
                                "name": "askForNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6472,
                                "src": "10488:9:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                                }
                              },
                              "id": 6757,
                              "indexExpression": {
                                "id": 6756,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6747,
                                "src": "10498:14:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10488:25:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                                "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                              }
                            },
                            "id": 6759,
                            "indexExpression": {
                              "id": 6758,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6749,
                              "src": "10514:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10488:35:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$6483_storage",
                              "typeString": "struct AsksV1_1.Ask storage ref"
                            }
                          },
                          "id": 6760,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6474,
                          "src": "10488:42:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10542:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10534:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6761,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10534:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10534:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10488:56:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b2061736b20646f65736e2774206578697374",
                        "id": 6766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10546:29:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        },
                        "value": "cancelAsk ask doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        }
                      ],
                      "id": 6754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10480:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10480:96:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6768,
                  "nodeType": "ExpressionStatement",
                  "src": "10480:96:38"
                },
                {
                  "assignments": [
                    6770
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6770,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "10595:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 6800,
                      "src": "10587:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6769,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10587:7:38",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6777,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6775,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6749,
                        "src": "10640:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6772,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6747,
                            "src": "10616:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6771,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56788,
                          "src": "10608:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 6773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10608:23:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$56788",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 6774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56721,
                      "src": "10608:31:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 6776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10608:41:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10587:62:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6779,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10680:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10680:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 6781,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6770,
                            "src": "10694:10:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10680:24:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6787,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6770,
                              "src": "10749:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 6788,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10761:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10761:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6784,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6747,
                                  "src": "10716:14:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6783,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56788,
                                "src": "10708:7:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 6785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10708:23:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$56788",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 6786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56787,
                            "src": "10708:40:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 6790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10708:64:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10680:92:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 6792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10786:43:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        },
                        "value": "cancelAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        }
                      ],
                      "id": 6778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10659:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10659:180:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6794,
                  "nodeType": "ExpressionStatement",
                  "src": "10659:180:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6796,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6747,
                        "src": "10861:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6797,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6749,
                        "src": "10877:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6795,
                      "name": "_cancelAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7004,
                      "src": "10850:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10850:36:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6799,
                  "nodeType": "ExpressionStatement",
                  "src": "10850:36:38"
                }
              ]
            },
            "documentation": {
              "id": 6745,
              "nodeType": "StructuredDocumentation",
              "src": "10224:158:38",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6751,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "10457:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "10457:12:38"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "10396:9:38",
            "parameters": {
              "id": 6750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6747,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "10414:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6801,
                  "src": "10406:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10406:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6749,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10438:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6801,
                  "src": "10430:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10430:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10405:42:38"
            },
            "returnParameters": {
              "id": 6753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10470:0:38"
            },
            "scope": 7005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6978,
            "nodeType": "FunctionDefinition",
            "src": "15203:2115:38",
            "nodes": [],
            "body": {
              "id": 6977,
              "nodeType": "Block",
              "src": "15399:1919:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6819,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "15421:3:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 6977,
                      "src": "15409:15:38",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 6818,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6817,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6483,
                          "src": "15409:3:38"
                        },
                        "referencedDeclaration": 6483,
                        "src": "15409:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6825,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 6820,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6472,
                        "src": "15427:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 6822,
                      "indexExpression": {
                        "id": 6821,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6804,
                        "src": "15437:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15427:25:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 6824,
                    "indexExpression": {
                      "id": 6823,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6806,
                      "src": "15453:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15427:35:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$6483_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15409:53:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6827,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6819,
                            "src": "15481:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 6828,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6474,
                          "src": "15481:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15503:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15495:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6829,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15495:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15495:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15481:24:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b206d757374206265206163746976652061736b",
                        "id": 6834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15507:28:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        },
                        "value": "fillAsk must be active ask"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        }
                      ],
                      "id": 6826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15473:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15473:63:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6836,
                  "nodeType": "ExpressionStatement",
                  "src": "15473:63:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6838,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6819,
                            "src": "15554:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 6839,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6478,
                          "src": "15554:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6840,
                          "name": "_fillCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6808,
                          "src": "15573:13:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15554:32:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c43757272656e6379206d757374206d617463682061736b2063757272656e6379",
                        "id": 6842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15588:47:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        },
                        "value": "fillAsk _fillCurrency must match ask currency"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        }
                      ],
                      "id": 6837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15546:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15546:90:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6844,
                  "nodeType": "ExpressionStatement",
                  "src": "15546:90:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6846,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6819,
                            "src": "15654:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 6847,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6482,
                          "src": "15654:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6848,
                          "name": "_fillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6810,
                          "src": "15670:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15654:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c416d6f756e74206d757374206d617463682061736b20616d6f756e74",
                        "id": 6850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15683:43:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        },
                        "value": "fillAsk _fillAmount must match ask amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        }
                      ],
                      "id": 6845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15646:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15646:81:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6852,
                  "nodeType": "ExpressionStatement",
                  "src": "15646:81:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6854,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "15836:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6855,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6482,
                        "src": "15836:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6856,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "15850:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6857,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6478,
                        "src": "15850:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6853,
                      "name": "_handleIncomingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1172,
                      "src": "15812:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15812:54:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6859,
                  "nodeType": "ExpressionStatement",
                  "src": "15812:54:38"
                },
                {
                  "assignments": [
                    6861,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6861,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "15955:15:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 6977,
                      "src": "15947:23:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6860,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15947:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6871,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6863,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6804,
                        "src": "15997:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6864,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6806,
                        "src": "16013:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6865,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "16023:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6866,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6482,
                        "src": "16023:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6867,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "16037:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6868,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6478,
                        "src": "16037:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6869,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6460,
                        "src": "16054:16:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6862,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "15976:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 6870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15976:95:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15946:125:38"
                },
                {
                  "expression": {
                    "id": 6878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6872,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6861,
                      "src": "16122:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6874,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6861,
                          "src": "16165:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 6875,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6819,
                            "src": "16182:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 6876,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6478,
                          "src": "16182:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6873,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 895,
                        "src": "16140:24:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 6877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16140:58:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16122:76:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6879,
                  "nodeType": "ExpressionStatement",
                  "src": "16122:76:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6880,
                      "name": "_finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6812,
                      "src": "16251:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 6883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16270:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16262:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16262:7:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16262:10:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16251:21:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6911,
                  "nodeType": "IfStatement",
                  "src": "16247:272:38",
                  "trueBody": {
                    "id": 6910,
                    "nodeType": "Block",
                    "src": "16274:245:38",
                    "statements": [
                      {
                        "assignments": [
                          6887
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6887,
                            "mutability": "mutable",
                            "name": "findersFee",
                            "nameLocation": "16296:10:38",
                            "nodeType": "VariableDeclaration",
                            "scope": 6910,
                            "src": "16288:18:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6886,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16288:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6895,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6888,
                                  "name": "remainingProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6861,
                                  "src": "16310:15:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 6889,
                                    "name": "ask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6819,
                                    "src": "16328:3:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                                      "typeString": "struct AsksV1_1.Ask storage pointer"
                                    }
                                  },
                                  "id": 6890,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "findersFeeBps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6480,
                                  "src": "16328:17:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16310:35:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6892,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16309:37:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 6893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16349:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "16309:45:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16288:66:38"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6897,
                              "name": "_finder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6812,
                              "src": "16392:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6898,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6887,
                              "src": "16401:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 6899,
                                "name": "ask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6819,
                                "src": "16413:3:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                                  "typeString": "struct AsksV1_1.Ask storage pointer"
                                }
                              },
                              "id": 6900,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "askCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6478,
                              "src": "16413:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6901,
                              "name": "USE_ALL_GAS_FLAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6460,
                              "src": "16430:16:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6896,
                            "name": "_handleOutgoingTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "16368:23:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256)"
                            }
                          },
                          "id": 6902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16368:79:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6903,
                        "nodeType": "ExpressionStatement",
                        "src": "16368:79:38"
                      },
                      {
                        "expression": {
                          "id": 6908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6904,
                            "name": "remainingProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6861,
                            "src": "16462:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6905,
                              "name": "remainingProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6861,
                              "src": "16480:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 6906,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6887,
                              "src": "16498:10:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16480:28:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16462:46:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6909,
                        "nodeType": "ExpressionStatement",
                        "src": "16462:46:38"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6913,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "16604:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6914,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6476,
                        "src": "16604:24:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6915,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6861,
                        "src": "16630:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6916,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "16647:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6478,
                        "src": "16647:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6918,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6460,
                        "src": "16664:16:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6912,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "16580:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 6919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16580:101:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6920,
                  "nodeType": "ExpressionStatement",
                  "src": "16580:101:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6924,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6804,
                        "src": "16759:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6925,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "16775:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6926,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6474,
                        "src": "16775:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6927,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16787:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16787:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6929,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6806,
                        "src": "16799:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6921,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6464,
                        "src": "16725:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 6923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50787,
                      "src": "16725:33:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 6930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16725:83:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6931,
                  "nodeType": "ExpressionStatement",
                  "src": "16725:83:38"
                },
                {
                  "assignments": [
                    6934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6934,
                      "mutability": "mutable",
                      "name": "userAExchangeDetails",
                      "nameLocation": "16842:20:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 6977,
                      "src": "16819:43:38",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 6933,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6932,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1347,
                          "src": "16819:15:38"
                        },
                        "referencedDeclaration": 1347,
                        "src": "16819:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6940,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6936,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6804,
                        "src": "16897:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6937,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6806,
                        "src": "16922:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 6938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16940:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 6935,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1347,
                      "src": "16865:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$1347_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 6939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16865:78:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16819:124:38"
                },
                {
                  "assignments": [
                    6943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6943,
                      "mutability": "mutable",
                      "name": "userBExchangeDetails",
                      "nameLocation": "16976:20:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 6977,
                      "src": "16953:43:38",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 6942,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6941,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1347,
                          "src": "16953:15:38"
                        },
                        "referencedDeclaration": 1347,
                        "src": "16953:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6951,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6945,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "17031:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6946,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6478,
                        "src": "17031:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 6947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17057:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 6948,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "17068:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6949,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6482,
                        "src": "17068:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6944,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1347,
                      "src": "16999:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$1347_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 6950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16999:83:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16953:129:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6953,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6819,
                          "src": "17115:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 6954,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6474,
                        "src": "17115:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6955,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17127:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17127:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6957,
                        "name": "userAExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6934,
                        "src": "17139:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      },
                      {
                        "id": 6958,
                        "name": "userBExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6943,
                        "src": "17161:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$1347_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      ],
                      "id": 6952,
                      "name": "ExchangeExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "17098:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_ExchangeDetails_$1347_memory_ptr_$_t_struct$_ExchangeDetails_$1347_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct UniversalExchangeEventV1.ExchangeDetails memory,struct UniversalExchangeEventV1.ExchangeDetails memory)"
                      }
                    },
                    "id": 6959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17098:84:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6960,
                  "nodeType": "EmitStatement",
                  "src": "17093:89:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6962,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6804,
                        "src": "17207:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6963,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6806,
                        "src": "17223:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 6964,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17233:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17233:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6966,
                        "name": "_finder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6812,
                        "src": "17245:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6967,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6819,
                        "src": "17254:3:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 6961,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6527,
                      "src": "17197:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_struct$_Ask_$6483_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,address,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 6968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17197:61:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6969,
                  "nodeType": "EmitStatement",
                  "src": "17192:66:38"
                },
                {
                  "expression": {
                    "id": 6975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17269:42:38",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6970,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6472,
                          "src": "17276:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 6972,
                        "indexExpression": {
                          "id": 6971,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6804,
                          "src": "17286:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17276:25:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 6974,
                      "indexExpression": {
                        "id": 6973,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6806,
                        "src": "17302:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17276:35:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$6483_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6976,
                  "nodeType": "ExpressionStatement",
                  "src": "17269:42:38"
                }
              ]
            },
            "documentation": {
              "id": 6802,
              "nodeType": "StructuredDocumentation",
              "src": "14771:427:38",
              "text": "@notice Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _fillCurrency The address of the ERC-20 token using to fill, or address(0) for ETH\n @param _fillAmount The amount to fill the ask\n @param _finder The address of the ask referrer"
            },
            "functionSelector": "622dcbd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6815,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6814,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "15386:12:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "15386:12:38"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "15212:7:38",
            "parameters": {
              "id": 6813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6804,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "15237:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6978,
                  "src": "15229:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15229:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6806,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "15269:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6978,
                  "src": "15261:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15261:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6808,
                  "mutability": "mutable",
                  "name": "_fillCurrency",
                  "nameLocation": "15295:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6978,
                  "src": "15287:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15287:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6810,
                  "mutability": "mutable",
                  "name": "_fillAmount",
                  "nameLocation": "15326:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6978,
                  "src": "15318:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15318:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6812,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "15355:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 6978,
                  "src": "15347:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15347:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15219:149:38"
            },
            "returnParameters": {
              "id": 6816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15399:0:38"
            },
            "scope": 7005,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7004,
            "nodeType": "FunctionDefinition",
            "src": "17486:219:38",
            "nodes": [],
            "body": {
              "id": 7003,
              "nodeType": "Block",
              "src": "17556:149:38",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6987,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6981,
                        "src": "17583:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6988,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6983,
                        "src": "17599:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 6989,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6472,
                            "src": "17609:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 6991,
                          "indexExpression": {
                            "id": 6990,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6981,
                            "src": "17619:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17609:25:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 6993,
                        "indexExpression": {
                          "id": 6992,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6983,
                          "src": "17635:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17609:35:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$6483_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 6986,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6513,
                      "src": "17571:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$6483_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 6994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17571:74:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6995,
                  "nodeType": "EmitStatement",
                  "src": "17566:79:38"
                },
                {
                  "expression": {
                    "id": 7001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17656:42:38",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6996,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6472,
                          "src": "17663:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 6998,
                        "indexExpression": {
                          "id": 6997,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6981,
                          "src": "17673:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17663:25:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$6483_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 7000,
                      "indexExpression": {
                        "id": 6999,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6983,
                        "src": "17689:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17663:35:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$6483_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7002,
                  "nodeType": "ExpressionStatement",
                  "src": "17656:42:38"
                }
              ]
            },
            "documentation": {
              "id": 6979,
              "nodeType": "StructuredDocumentation",
              "src": "17324:157:38",
              "text": "@dev Deletes canceled and invalid asks\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cancelAsk",
            "nameLocation": "17495:10:38",
            "parameters": {
              "id": 6984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6981,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "17514:14:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 7004,
                  "src": "17506:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17506:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6983,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "17538:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 7004,
                  "src": "17530:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17530:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17505:42:38"
            },
            "returnParameters": {
              "id": 6985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17556:0:38"
            },
            "scope": 7005,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6447,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58243,
              "src": "968:15:38"
            },
            "id": 6448,
            "nodeType": "InheritanceSpecifier",
            "src": "968:15:38"
          },
          {
            "baseName": {
              "id": 6449,
              "name": "UniversalExchangeEventV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1361,
              "src": "985:24:38"
            },
            "id": 6450,
            "nodeType": "InheritanceSpecifier",
            "src": "985:24:38"
          },
          {
            "baseName": {
              "id": 6451,
              "name": "IncomingTransferSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1173,
              "src": "1011:25:38"
            },
            "id": 6452,
            "nodeType": "InheritanceSpecifier",
            "src": "1011:25:38"
          },
          {
            "baseName": {
              "id": 6453,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1068,
              "src": "1038:18:38"
            },
            "id": 6454,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:18:38"
          },
          {
            "baseName": {
              "id": 6455,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1191,
              "src": "1058:21:38"
            },
            "id": 6456,
            "nodeType": "InheritanceSpecifier",
            "src": "1058:21:38"
          }
        ],
        "canonicalName": "AsksV1_1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6446,
          "nodeType": "StructuredDocumentation",
          "src": "731:216:38",
          "text": "@title Asks V1.1\n @author tbtstl <t@zora.co>\n @notice This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7005,
          1191,
          1068,
          1337,
          1173,
          1361,
          58243
        ],
        "name": "AsksV1_1",
        "nameLocation": "956:8:38",
        "scope": 7006,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 38
}