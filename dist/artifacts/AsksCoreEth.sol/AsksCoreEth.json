{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc721TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payoutCurrency",
          "type": "address"
        }
      ],
      "name": "_handleRoyaltyEnginePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "askForNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "price",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "createAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC721TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "fillAsk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setAskPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngineAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61010060405260016000553480156200001757600080fd5b5060405162002546380380620025468339810160408190526200003a916200024a565b6040518060400160405280600d81526020016c082e6d6e64086dee4ca408aa89609b1b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c89190620002b2565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000106573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012c9190620002b2565b6001600160a01b03918216608052600180546001600160a01b0319169483169490941790935590811660c0521660a0528051620001719060029060208401906200018b565b5050506001600160a01b0390921660e05250620003169050565b8280546200019990620002d9565b90600052602060002090601f016020900481019282620001bd576000855562000208565b82601f10620001d857805160ff191683800117855562000208565b8280016001018555821562000208579182015b8281111562000208578251825591602001919060010190620001eb565b50620002169291506200021a565b5090565b5b808211156200021657600081556001016200021b565b6001600160a01b03811681146200024757600080fd5b50565b600080600080608085870312156200026157600080fd5b84516200026e8162000231565b6020860151909450620002818162000231565b6040860151909350620002948162000231565b6060860151909250620002a78162000231565b939692955090935050565b600060208284031215620002c557600080fd5b8151620002d28162000231565b9392505050565b600181811c90821680620002ee57607f821691505b602082108114156200031057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516121da6200036c600039600081816102e80152610ae701526000818161144e01526114fa01526000818161014c0152610e9c0152600081816116fc015261179401526121da6000f3fe6080604052600436106100bc5760003560e01c8063418f065611610074578063b249bb301161004e578063b249bb3014610296578063c4f0ee36146102b6578063f7cd1d9b146102d657600080fd5b8063418f0656146101b357806368b5a9a8146102625780639128c22c1461027557600080fd5b80630be48095116100a55780630be48095146101185780632b20e3971461013a57806340b807461461019357600080fd5b806301ffc9a7146100c157806306fdde03146100f6575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611cb0565b61030a565b60405190151581526020015b60405180910390f35b34801561010257600080fd5b5061010b6103a3565b6040516100ed9190611d1e565b34801561012457600080fd5b50610138610133366004611d94565b610431565b005b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b34801561019f57600080fd5b506101386101ae366004611dc9565b6105d2565b3480156101bf57600080fd5b506102296101ce366004611dc9565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff8116907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526bffffffffffffffffffffffff9091166020830152016100ed565b610138610270366004611dc9565b61089c565b610288610283366004611df5565b610bdf565b6040519081526020016100ed565b3480156102a257600080fd5b506101386102b1366004611e3f565b610e84565b3480156102c257600080fd5b506101386102d1366004611d94565b611046565b3480156102e257600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fe719c04d00000000000000000000000000000000000000000000000000000000148061039d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600280546103b090611e5c565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc90611e5c565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b505050505081565b6000546001146104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600090815573ffffffffffffffffffffffffffffffffffffffff848116825260036020908152604080842086855290915290912080549091163314610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4f4e4c595f53454c4c45520000000000000000000000000000000000000000006044820152606401610499565b805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff851602178255604080513381526020810185905285928716917f18c0eece1e729d9b8010f8a94ed680280eb3ccfedaedef0218b6c6a64a2d314391015b60405180910390a3505060016000555050565b60005460011461063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610499565b6002600090815573ffffffffffffffffffffffffffffffffffffffff8381168252600360209081526040808420858552825292839020835180850190945254918216808452740100000000000000000000000000000000000000009092046bffffffffffffffffffffffff16908301523381148061077557506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff851690636352211e90602401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611eb0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e45520000000000006044820152606401610499565b828473ffffffffffffffffffffffffffffffffffffffff167fbe338a95c86a3b9c15c04bcc9498991ef98dc6013ff35a86006784873bf0f9b483856020015160405161085792919073ffffffffffffffffffffffffffffffffffffffff9290921682526bffffffffffffffffffffffff16602082015260400190565b60405180910390a3505073ffffffffffffffffffffffffffffffffffffffff909116600090815260036020908152604080832093835292905290812081905560019055565b600054600114610908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610499565b6002600090815573ffffffffffffffffffffffffffffffffffffffff8381168252600360209081526040808420858552825292839020835180850190945254918216808452740100000000000000000000000000000000000000009092046bffffffffffffffffffffffff1690830152806109df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e4143544956455f41534b00000000000000000000000000000000000000006044820152606401610499565b60208201516bffffffffffffffffffffffff16348114610a5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4d5553545f4d415443485f5052494345000000000000000000000000000000006044820152606401610499565b6000610a6e8686846000620493e06112f9565b509050610a7c8160006113ff565b9050610a8d8382600061c35061159d565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528481166024830152336044830152606482018790527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b50506040805133815273ffffffffffffffffffffffffffffffffffffffff878116602083015291810186905288935090891691507fed509339c949cdfdb11c117315bb3f74aa98886204732c065edd38979d7ccf539060600160405180910390a350505073ffffffffffffffffffffffffffffffffffffffff90921660009081526003602090815260408083209383529290529081208190556001905550565b6000333014610c70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c65000000000000000000000000000000000000006064820152608401610499565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610cf4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d3a9190810190611fda565b8151919350915080610d5157859350505050610e7c565b85600080805b84811015610e7257868181518110610d7157610d7161209f565b60200260200101519250858181518110610d8d57610d8d61209f565b6020026020010151915081841015610e01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610499565b610e0f83838b61c35061159d565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610d57565b5091955050505050505b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610499565b610f73817fcb23f816000000000000000000000000000000000000000000000000000000006117ed565b610fff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610499565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000546001146110b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610499565b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff851690636352211e90602401602060405180830381865afa158015611124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111489190611eb0565b90503373ffffffffffffffffffffffffffffffffffffffff821614806111ff57506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015285169063e985e9c590604401602060405180830381865afa1580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff91906120ce565b611265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52000000006044820152606401610499565b73ffffffffffffffffffffffffffffffffffffffff8481166000818152600360209081526040808320888452825291829020938516740100000000000000000000000000000000000000006bffffffffffffffffffffffff88160281179094558151938452830185905285927fb427f2572be967193f84fe4fa05aa3137657735475127a9dffaf978c15f682be91016105bf565b6000808083158061130957505a84115b6113135783611315565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f1935050505080156113d7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526113d4918101906120f0565b60015b6113e85785600092509250506113f5565b9250600191506113f59050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015611495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b991906120f0565b9050806114c9578391505061039d565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015611555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115799190612109565b91505061158a81838661c35061159d565b611594828661214a565b95945050505050565b8215806115be575073ffffffffffffffffffffffffffffffffffffffff8416155b156115c8576117e7565b73ffffffffffffffffffffffffffffffffffffffff82166117c65782471015611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b600081158061168157505a82115b61168b578161168d565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d80600081146116ec576040519150601f19603f3d011682016040523d82523d6000602084013e6116f1565b606091505b50509050806117bf577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561176257600080fd5b505af1158015611776573d6000803e3d6000fd5b506117bf93505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016915088905087611810565b50506117e7565b6117e773ffffffffffffffffffffffffffffffffffffffff83168585611810565b50505050565b60006117f8836118a2565b801561180957506118098383611906565b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261189d908490611a42565b505050565b60006118ce827f01ffc9a700000000000000000000000000000000000000000000000000000000611906565b801561039d57506118ff827fffffffff00000000000000000000000000000000000000000000000000000000611906565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff871690617530906119c0908690612188565b6000604051808303818686fa925050503d80600081146119fc576040519150601f19603f3d011682016040523d82523d6000602084013e611a01565b606091505b5091509150602081511015611a1c576000935050505061039d565b818015611a38575080806020019051810190611a3891906120ce565b9695505050505050565b6000611aa4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611b4e9092919063ffffffff16565b80519091501561189d5780806020019051810190611ac291906120ce565b61189d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610499565b6060610e7c84846000858573ffffffffffffffffffffffffffffffffffffffff85163b611bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610499565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c009190612188565b60006040518083038185875af1925050503d8060008114611c3d576040519150601f19603f3d011682016040523d82523d6000602084013e611c42565b606091505b5091509150611c52828286611c5d565b979650505050505050565b60608315611c6c575081611809565b825115611c7c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104999190611d1e565b600060208284031215611cc257600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461180957600080fd5b60005b83811015611d0d578181015183820152602001611cf5565b838111156117e75750506000910152565b6020815260008251806020840152611d3d816040850160208701611cf2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611d9157600080fd5b50565b600080600060608486031215611da957600080fd5b8335611db481611d6f565b95602085013595506040909401359392505050565b60008060408385031215611ddc57600080fd5b8235611de781611d6f565b946020939093013593505050565b60008060008060808587031215611e0b57600080fd5b8435611e1681611d6f565b935060208501359250604085013591506060850135611e3481611d6f565b939692955090935050565b600060208284031215611e5157600080fd5b813561180981611d6f565b600181811c90821680611e7057607f821691505b60208210811415611eaa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611ec257600080fd5b815161180981611d6f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f4357611f43611ecd565b604052919050565b600067ffffffffffffffff821115611f6557611f65611ecd565b5060051b60200190565b600082601f830112611f8057600080fd5b81516020611f95611f9083611f4b565b611efc565b82815260059290921b84018101918181019086841115611fb457600080fd5b8286015b84811015611fcf5780518352918301918301611fb8565b509695505050505050565b60008060408385031215611fed57600080fd5b825167ffffffffffffffff8082111561200557600080fd5b818501915085601f83011261201957600080fd5b81516020612029611f9083611f4b565b82815260059290921b8401810191818101908984111561204857600080fd5b948201945b8386101561206f57855161206081611d6f565b8252948201949082019061204d565b9188015191965090935050508082111561208857600080fd5b5061209585828601611f6f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156120e057600080fd5b8151801515811461180957600080fd5b60006020828403121561210257600080fd5b5051919050565b6000806040838503121561211c57600080fd5b825161ffff8116811461212e57600080fd5b602084015190925061213f81611d6f565b809150509250929050565b600082821015612183577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b6000825161219a818460208701611cf2565b919091019291505056fea264697066735822122002667aa809f4ca2a31ae58455396f1776a8d123556bca51ee53173c8f3b74ff264736f6c634300080a0033",
    "sourceMap": "668:13389:31:-:0;;;461:1:127;426:36;;1342:419:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:62:4;;;;;;;;;;;;;-1:-1:-1;;;376:62:4;;;1519:14:31;1535:20;1557:5;1585:21;-1:-1:-1;;;;;1564:47:31;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1564:59:31;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;552:26:6;;;;;1931:13:2::1;:48:::0;;-1:-1:-1;;;;;;1931:48:2::1;::::0;;::::1;::::0;;;::::1;::::0;;;1989:67;;::::1;;::::0;2066:29:::1;;::::0;419:12:4;;;;:4;;-1:-1:-1;419:12:4;;;;:::i;:::-;-1:-1:-1;;;;;;;;1688:66:31;;::::2;;::::0;-1:-1:-1;668:13389:31;;-1:-1:-1;668:13389:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;668:13389:31;;;-1:-1:-1;668:13389:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:128;-1:-1:-1;;;;;89:31:128;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:654::-;247:6;255;263;271;324:3;312:9;303:7;299:23;295:33;292:53;;;341:1;338;331:12;292:53;373:9;367:16;392:31;417:5;392:31;:::i;:::-;492:2;477:18;;471:25;442:5;;-1:-1:-1;505:33:128;471:25;505:33;:::i;:::-;609:2;594:18;;588:25;557:7;;-1:-1:-1;622:33:128;588:25;622:33;:::i;:::-;726:2;711:18;;705:25;674:7;;-1:-1:-1;739:33:128;705:25;739:33;:::i;:::-;150:654;;;;-1:-1:-1;150:654:128;;-1:-1:-1;;150:654:128:o;809:276::-;904:6;957:2;945:9;936:7;932:23;928:32;925:52;;;973:1;970;963:12;925:52;1005:9;999:16;1024:31;1049:5;1024:31;:::i;:::-;1074:5;809:276;-1:-1:-1;;;809:276:128:o;1346:380::-;1425:1;1421:12;;;;1468;;;1489:61;;1543:4;1535:6;1531:17;1521:27;;1489:61;1596:2;1588:6;1585:14;1565:18;1562:38;1559:161;;;1642:10;1637:3;1633:20;1630:1;1623:31;1677:4;1674:1;1667:15;1705:4;1702:1;1695:15;1559:161;;1346:380;;;:::o;:::-;668:13389:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100bc5760003560e01c8063418f065611610074578063b249bb301161004e578063b249bb3014610296578063c4f0ee36146102b6578063f7cd1d9b146102d657600080fd5b8063418f0656146101b357806368b5a9a8146102625780639128c22c1461027557600080fd5b80630be48095116100a55780630be48095146101185780632b20e3971461013a57806340b807461461019357600080fd5b806301ffc9a7146100c157806306fdde03146100f6575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611cb0565b61030a565b60405190151581526020015b60405180910390f35b34801561010257600080fd5b5061010b6103a3565b6040516100ed9190611d1e565b34801561012457600080fd5b50610138610133366004611d94565b610431565b005b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b34801561019f57600080fd5b506101386101ae366004611dc9565b6105d2565b3480156101bf57600080fd5b506102296101ce366004611dc9565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff8116907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526bffffffffffffffffffffffff9091166020830152016100ed565b610138610270366004611dc9565b61089c565b610288610283366004611df5565b610bdf565b6040519081526020016100ed565b3480156102a257600080fd5b506101386102b1366004611e3f565b610e84565b3480156102c257600080fd5b506101386102d1366004611d94565b611046565b3480156102e257600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fe719c04d00000000000000000000000000000000000000000000000000000000148061039d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600280546103b090611e5c565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc90611e5c565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b505050505081565b6000546001146104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e43590000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002600090815573ffffffffffffffffffffffffffffffffffffffff848116825260036020908152604080842086855290915290912080549091163314610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4f4e4c595f53454c4c45520000000000000000000000000000000000000000006044820152606401610499565b805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff851602178255604080513381526020810185905285928716917f18c0eece1e729d9b8010f8a94ed680280eb3ccfedaedef0218b6c6a64a2d314391015b60405180910390a3505060016000555050565b60005460011461063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610499565b6002600090815573ffffffffffffffffffffffffffffffffffffffff8381168252600360209081526040808420858552825292839020835180850190945254918216808452740100000000000000000000000000000000000000009092046bffffffffffffffffffffffff16908301523381148061077557506040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff851690636352211e90602401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611eb0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e45520000000000006044820152606401610499565b828473ffffffffffffffffffffffffffffffffffffffff167fbe338a95c86a3b9c15c04bcc9498991ef98dc6013ff35a86006784873bf0f9b483856020015160405161085792919073ffffffffffffffffffffffffffffffffffffffff9290921682526bffffffffffffffffffffffff16602082015260400190565b60405180910390a3505073ffffffffffffffffffffffffffffffffffffffff909116600090815260036020908152604080832093835292905290812081905560019055565b600054600114610908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610499565b6002600090815573ffffffffffffffffffffffffffffffffffffffff8381168252600360209081526040808420858552825292839020835180850190945254918216808452740100000000000000000000000000000000000000009092046bffffffffffffffffffffffff1690830152806109df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f494e4143544956455f41534b00000000000000000000000000000000000000006044820152606401610499565b60208201516bffffffffffffffffffffffff16348114610a5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4d5553545f4d415443485f5052494345000000000000000000000000000000006044820152606401610499565b6000610a6e8686846000620493e06112f9565b509050610a7c8160006113ff565b9050610a8d8382600061c35061159d565b6040517f15dacbea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528481166024830152336044830152606482018790527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b50506040805133815273ffffffffffffffffffffffffffffffffffffffff878116602083015291810186905288935090891691507fed509339c949cdfdb11c117315bb3f74aa98886204732c065edd38979d7ccf539060600160405180910390a350505073ffffffffffffffffffffffffffffffffffffffff90921660009081526003602090815260408083209383529290529081208190556001905550565b6000333014610c70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c65000000000000000000000000000000000000006064820152608401610499565b6001546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610cf4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d3a9190810190611fda565b8151919350915080610d5157859350505050610e7c565b85600080805b84811015610e7257868181518110610d7157610d7161209f565b60200260200101519250858181518110610d8d57610d8d61209f565b6020026020010151915081841015610e01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610499565b610e0f83838b61c35061159d565b6040805173ffffffffffffffffffffffffffffffffffffffff8581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610d57565b5091955050505050505b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610499565b610f73817fcb23f816000000000000000000000000000000000000000000000000000000006117ed565b610fff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610499565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000546001146110b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f5245454e5452414e4359000000000000000000000000000000000000000000006044820152606401610499565b600260009081556040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff851690636352211e90602401602060405180830381865afa158015611124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111489190611eb0565b90503373ffffffffffffffffffffffffffffffffffffffff821614806111ff57506040517fe985e9c500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015233602483015285169063e985e9c590604401602060405180830381865afa1580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff91906120ce565b611265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52000000006044820152606401610499565b73ffffffffffffffffffffffffffffffffffffffff8481166000818152600360209081526040808320888452825291829020938516740100000000000000000000000000000000000000006bffffffffffffffffffffffff88160281179094558151938452830185905285927fb427f2572be967193f84fe4fa05aa3137657735475127a9dffaf978c15f682be91016105bf565b6000808083158061130957505a84115b6113135783611315565b5a5b6040517f9128c22c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f1935050505080156113d7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526113d4918101906120f0565b60015b6113e85785600092509250506113f5565b9250600191506113f59050565b9550959350505050565b6040517f61b485f600000000000000000000000000000000000000000000000000000000815230600482015260248101839052600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015611495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b991906120f0565b9050806114c9578391505061039d565b6040517f86ab6fb90000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906386ab6fb9906024016040805180830381865afa158015611555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115799190612109565b91505061158a81838661c35061159d565b611594828661214a565b95945050505050565b8215806115be575073ffffffffffffffffffffffffffffffffffffffff8416155b156115c8576117e7565b73ffffffffffffffffffffffffffffffffffffffff82166117c65782471015611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610499565b600081158061168157505a82115b61168b578161168d565b5a5b905060008573ffffffffffffffffffffffffffffffffffffffff16858390604051600060405180830381858888f193505050503d80600081146116ec576040519150601f19603f3d011682016040523d82523d6000602084013e6116f1565b606091505b50509050806117bf577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561176257600080fd5b505af1158015611776573d6000803e3d6000fd5b506117bf93505073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016915088905087611810565b50506117e7565b6117e773ffffffffffffffffffffffffffffffffffffffff83168585611810565b50505050565b60006117f8836118a2565b801561180957506118098383611906565b9392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261189d908490611a42565b505050565b60006118ce827f01ffc9a700000000000000000000000000000000000000000000000000000000611906565b801561039d57506118ff827fffffffff00000000000000000000000000000000000000000000000000000000611906565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff871690617530906119c0908690612188565b6000604051808303818686fa925050503d80600081146119fc576040519150601f19603f3d011682016040523d82523d6000602084013e611a01565b606091505b5091509150602081511015611a1c576000935050505061039d565b818015611a38575080806020019051810190611a3891906120ce565b9695505050505050565b6000611aa4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611b4e9092919063ffffffff16565b80519091501561189d5780806020019051810190611ac291906120ce565b61189d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610499565b6060610e7c84846000858573ffffffffffffffffffffffffffffffffffffffff85163b611bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610499565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c009190612188565b60006040518083038185875af1925050503d8060008114611c3d576040519150601f19603f3d011682016040523d82523d6000602084013e611c42565b606091505b5091509150611c52828286611c5d565b979650505050505050565b60608315611c6c575081611809565b825115611c7c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104999190611d1e565b600060208284031215611cc257600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461180957600080fd5b60005b83811015611d0d578181015183820152602001611cf5565b838111156117e75750506000910152565b6020815260008251806020840152611d3d816040850160208701611cf2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611d9157600080fd5b50565b600080600060608486031215611da957600080fd5b8335611db481611d6f565b95602085013595506040909401359392505050565b60008060408385031215611ddc57600080fd5b8235611de781611d6f565b946020939093013593505050565b60008060008060808587031215611e0b57600080fd5b8435611e1681611d6f565b935060208501359250604085013591506060850135611e3481611d6f565b939692955090935050565b600060208284031215611e5157600080fd5b813561180981611d6f565b600181811c90821680611e7057607f821691505b60208210811415611eaa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611ec257600080fd5b815161180981611d6f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611f4357611f43611ecd565b604052919050565b600067ffffffffffffffff821115611f6557611f65611ecd565b5060051b60200190565b600082601f830112611f8057600080fd5b81516020611f95611f9083611f4b565b611efc565b82815260059290921b84018101918181019086841115611fb457600080fd5b8286015b84811015611fcf5780518352918301918301611fb8565b509695505050505050565b60008060408385031215611fed57600080fd5b825167ffffffffffffffff8082111561200557600080fd5b818501915085601f83011261201957600080fd5b81516020612029611f9083611f4b565b82815260059290921b8401810191818101908984111561204857600080fd5b948201945b8386101561206f57855161206081611d6f565b8252948201949082019061204d565b9188015191965090935050508082111561208857600080fd5b5061209585828601611f6f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156120e057600080fd5b8151801515811461180957600080fd5b60006020828403121561210257600080fd5b5051919050565b6000806040838503121561211c57600080fd5b825161ffff8116811461212e57600080fd5b602084015190925061213f81611d6f565b809150509250929050565b600082821015612183577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b6000825161219a818460208701611cf2565b919091019291505056fea264697066735822122002667aa809f4ca2a31ae58455396f1776a8d123556bca51ee53173c8f3b74ff264736f6c634300080a0033",
    "sourceMap": "668:13389:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:177;;;;;;;;;;-1:-1:-1;2005:177:31;;;;;:::i;:::-;;:::i;:::-;;;516:14:128;;509:22;491:41;;479:2;464:18;2005:177:31;;;;;;;;265:18:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6745:602:31:-;;;;;;;;;;-1:-1:-1;6745:602:31;;;;;:::i;:::-;;:::i;:::-;;792:34:2;;;;;;;;;;;;;;;;;;1976:42:128;1964:55;;;1946:74;;1934:2;1919:18;792:34:2;1800:226:128;8850:630:31;;;;;;;;;;-1:-1:-1;8850:630:31;;;;;:::i;:::-;;:::i;2709:60::-;;;;;;;;;;-1:-1:-1;2709:60:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:42:128;2541:55;;;2523:74;;2645:26;2633:39;;;2628:2;2613:18;;2606:67;2496:18;2709:60:31;2351:328:128;12685:1370:31;;;;;;:::i;:::-;;:::i;5751:1742:2:-;;;;;;:::i;:::-;;:::i;:::-;;;3360:25:128;;;3348:2;3333:18;5751:1742:2;3214:177:128;2472:414:2;;;;;;;;;;-1:-1:-1;2472:414:2;;;;;:::i;:::-;;:::i;4329:855:31:-;;;;;;;;;;-1:-1:-1;4329:855:31;;;;;:::i;:::-;;:::i;1014:58::-;;;;;;;;;;;;;;;2005:177;2076:4;2099:46;;;2115:30;2099:46;;:76;;-1:-1:-1;2149:26:31;;;;;2099:76;2092:83;2005:177;-1:-1:-1;;2005:177:31:o;265:18:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6745:602:31:-;511:16:127;;531:1;511:21;503:44;;;;;;;4553:2:128;503:44:127;;;4535:21:128;4592:2;4572:18;;;4565:30;4631:12;4611:18;;;4604:40;4661:18;;503:44:127;;;;;;;;;577:1;558:16;:20;;;6951:25:31::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;7058:10;;6951:35;;7058:10:::1;7044;:24;7036:48;;;::::0;::::1;::::0;;4892:2:128;7036:48:31::1;::::0;::::1;4874:21:128::0;4931:2;4911:18;;;4904:30;4970:13;4950:18;;;4943:41;5001:18;;7036:48:31::1;4690:335:128::0;7036:48:31::1;7237:26:::0;;;;;::::1;::::0;::::1;::::0;::::1;;;::::0;;7279:61:::1;::::0;;7321:10:::1;5204:74:128::0;;5309:2;5294:18;;5287:34;;;7311:8:31;;7279:61;::::1;::::0;::::1;::::0;5177:18:128;7279:61:31::1;;;;;;;;-1:-1:-1::0;;620:1:127;601:16;:20;-1:-1:-1;;6745:602:31:o;8850:630::-;511:16:127;;531:1;511:21;503:44;;;;;;;4553:2:128;503:44:127;;;4535:21:128;4592:2;4572:18;;;4565:30;4631:12;4611:18;;;4604:40;4661:18;;503:44:127;4351:334:128;503:44:127;577:1;558:16;:20;;;9007:25:31::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;8990:52;;;;::::1;::::0;;;;;;::::1;::::0;;;;;;::::1;;;::::0;;::::1;::::0;9199:10:::1;:20:::0;::::1;::::0;:79:::1;;-1:-1:-1::0;9237:41:31::1;::::0;;;;::::1;::::0;::::1;3360:25:128::0;;;9237:31:31::1;::::0;::::1;::::0;::::1;::::0;3333:18:128;;9237:41:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9223:55;;:10;:55;;;9199:79;9191:118;;;::::0;::::1;::::0;;5790:2:128;9191:118:31::1;::::0;::::1;5772:21:128::0;5829:2;5809:18;;;5802:30;5868:28;5848:18;;;5841:56;5914:18;;9191:118:31::1;5588:350:128::0;9191:118:31::1;9353:8;9337:14;9325:56;;;9363:6;9371:3;:9;;;9325:56;;;;;;2553:42:128::0;2541:55;;;;2523:74;;2645:26;2633:39;2628:2;2613:18;;2606:67;2511:2;2496:18;;2351:328;9325:56:31::1;;;;;;;;-1:-1:-1::0;;9438:25:31::1;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;9431:42;;;;601:20:127;;8850:630:31:o;12685:1370::-;511:16:127;;531:1;511:21;503:44;;;;;;;4553:2:128;503:44:127;;;4535:21:128;4592:2;4572:18;;;4565:30;4631:12;4611:18;;;4604:40;4661:18;;503:44:127;4351:334:128;503:44:127;577:1;558:16;:20;;;12848:25:31::1;::::0;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;12831:52;;;;::::1;::::0;;;;;;::::1;::::0;;;;;;::::1;;;::::0;;::::1;::::0;;12996:45:::1;;;::::0;::::1;::::0;;6479:2:128;12996:45:31::1;::::0;::::1;6461:21:128::0;6518:2;6498:18;;;6491:30;6557:14;6537:18;;;6530:42;6589:18;;12996:45:31::1;6277:336:128::0;12996:45:31::1;13095:9;::::0;::::1;::::0;13079:25:::1;;13176:9;:18:::0;::::1;13168:47;;;::::0;::::1;::::0;;6820:2:128;13168:47:31::1;::::0;::::1;6802:21:128::0;6859:2;6839:18;;;6832:30;6898:18;6878;;;6871:46;6934:18;;13168:47:31::1;6618:340:128::0;13168:47:31::1;13280:23;13309:73;13330:14;13346:8;13356:5;13371:1;13375:6;13309:20;:73::i;:::-;13279:103;;;13459:53;13484:15;13509:1;13459:24;:53::i;:::-;13441:71;;13578:67;13602:6;13610:15;13635:1;13639:5;13578:23;:67::i;:::-;13799:79;::::0;;;;:33:::1;7273:15:128::0;;;13799:79:31::1;::::0;::::1;7255:34:128::0;7325:15;;;7305:18;;;7298:43;13857:10:31::1;7357:18:128::0;;;7350:43;7409:18;;;7402:34;;;13799:20:31::1;:33;::::0;::::1;::::0;7166:19:128;;13799:79:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13894:62:31::1;::::0;;13930:10:::1;7710:34:128::0;;13894:62:31::1;7780:15:128::0;;;7775:2;7760:18;;7753:43;7812:18;;;7805:34;;;13920:8:31;;-1:-1:-1;13894:62:31;;::::1;::::0;-1:-1:-1;13894:62:31::1;::::0;7637:2:128;7622:18;13894:62:31::1;;;;;;;-1:-1:-1::0;;;14013:25:31::1;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;14006:42;;;;601:20:127;;-1:-1:-1;12685:1370:31:o;5751:1742:2:-;5935:7;6007:10;6029:4;6007:27;5999:85;;;;;;;8052:2:128;5999:85:2;;;8034:21:128;8091:2;8071:18;;;8064:30;8130:34;8110:18;;;8103:62;8201:15;8181:18;;;8174:43;8234:19;;5999:85:2;7850:409:128;5999:85:2;6228:13;;:59;;;;;:13;8484:55:128;;;6228:59:2;;;8466:74:128;8556:18;;;8549:34;;;8599:18;;;8592:34;;;6163:35:2;;;;6228:13;;;:24;;8439:18:128;;6228:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6364:17;;6162:125;;-1:-1:-1;6162:125:2;-1:-1:-1;6460:18:2;6456:38;;6487:7;6480:14;;;;;;;6456:38;6567:7;6541:23;;;6736:718;6760:13;6756:1;:17;6736:718;;;6849:10;6860:1;6849:13;;;;;;;;:::i;:::-;;;;;;;6837:25;;6885:7;6893:1;6885:10;;;;;;;;:::i;:::-;;;;;;;6876:19;;7011:6;6992:15;:25;;6984:47;;;;;;;11654:2:128;6984:47:2;;;11636:21:128;11693:1;11673:18;;;11666:29;11731:11;11711:18;;;11704:39;11760:18;;6984:47:2;11452:332:128;6984:47:2;7087:66;7111:9;7122:6;7130:15;7147:5;7087:23;:66::i;:::-;7173:58;;;;5222:55:128;;;5204:74;;5309:2;5294:18;;5287:34;;;7203:8:2;;7173:58;;;;;;5177:18:128;7173:58:2;;;;;;;7383:25;;;;;7426:3;;6736:718;;;-1:-1:-1;7471:15:2;;-1:-1:-1;;;;;;5751:1742:2;;;;;;;:::o;2472:414::-;2554:10;:23;2568:9;2554:23;;2546:74;;;;;;;11991:2:128;2546:74:2;;;11973:21:128;12030:2;12010:18;;;12003:30;12069:34;12049:18;;;12042:62;12140:8;12120:18;;;12113:36;12166:19;;2546:74:2;11789:402:128;2546:74:2;2651:83;2683:14;2699:34;2651:31;:83::i;:::-;2630:191;;;;;;;12398:2:128;2630:191:2;;;12380:21:128;12437:2;12417:18;;;12410:30;12476:34;12456:18;;;12449:62;12547:31;12527:18;;;12520:59;12596:19;;2630:191:2;12196:425:128;2630:191:2;2831:13;:48;;;;;;;;;;;;;;;2472:414::o;4329:855:31:-;511:16:127;;531:1;511:21;503:44;;;;;;;4553:2:128;503:44:127;;;4535:21:128;4592:2;4572:18;;;4565:30;4631:12;4611:18;;;4604:40;4661:18;;503:44:127;4351:334:128;503:44:127;577:1;558:16;:20;;;4537:41:31::1;::::0;;;;::::1;::::0;::::1;3360:25:128::0;;;4537:31:31::1;::::0;::::1;::::0;::::1;::::0;3333:18:128;;4537:41:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4516:62:::0;-1:-1:-1;4663:10:31::1;:24;::::0;::::1;;::::0;:92:::1;;-1:-1:-1::0;4691:64:31::1;::::0;;;;:40:::1;12879:15:128::0;;;4691:64:31::1;::::0;::::1;12861:34:128::0;4744:10:31::1;12911:18:128::0;;;12904:43;4691:40:31;::::1;::::0;::::1;::::0;12773:18:128;;4691:64:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4655:133;;;::::0;::::1;::::0;;13442:2:128;4655:133:31::1;::::0;::::1;13424:21:128::0;13481:2;13461:18;;;13454:30;13520;13500:18;;;13493:58;13568:18;;4655:133:31::1;13240:352:128::0;4655:133:31::1;4840:25;::::0;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;:55;;::::1;5047:58:::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;5121:56;;5204:74:128;;;5294:18;;5287:34;;;4840:35:31;;5121:56:::1;::::0;5177:18:128;5121:56:31::1;5030:297:128::0;4289:888:2;4486:7;;;4640:14;;;:39;;;4670:9;4658;:21;4640:39;4639:65;;4695:9;4639:65;;;4683:9;4639:65;4802:93;;;;;13838:42:128;13907:15;;;4802:93:2;;;13889:34:128;13939:18;;;13932:34;;;13982:18;;;13975:34;;;14045:15;;14025:18;;;14018:43;4625:79:2;;-1:-1:-1;4802:4:2;;:31;;4625:79;;13800:19:128;;4802:93:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4802:93:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4798:373;;5145:7;5154:5;5137:23;;;;;;;4798:373;5020:14;-1:-1:-1;5036:4:2;;-1:-1:-1;5012:29:2;;-1:-1:-1;5012:29:2;4289:888;;;;;;;;;:::o;3119:632::-;3289:56;;;;;3330:4;3289:56;;;5204:74:128;5294:18;;;5287:34;;;3213:7:2;;;;3289:32;:19;:32;;;;5177:18:128;;3289:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:78;-1:-1:-1;3404:16:2;3400:36;;3429:7;3422:14;;;;;3400:36;3503:51;;;;;3548:4;3503:51;;;1946:74:128;3479:20:2;;3503:19;:36;;;;;1919:18:128;;3503:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3476:78;;;3596:74;3620:12;3634:11;3647:15;3664:5;3596:23;:74::i;:::-;3723:21;3733:11;3723:7;:21;:::i;:::-;3716:28;3119:632;-1:-1:-1;;;;;3119:632:2:o;1039:1016:6:-;1203:12;;;:35;;-1:-1:-1;1219:19:6;;;;1203:35;1199:72;;;1254:7;;1199:72;1315:23;;;1311:738;;1387:7;1362:21;:32;;1354:78;;;;;;;15162:2:128;1354:78:6;;;15144:21:128;15201:2;15181:18;;;15174:30;15240:34;15220:18;;;15213:62;15311:3;15291:18;;;15284:31;15332:19;;1354:78:6;14960:397:128;1354:78:6;1564:11;1579:14;;;:39;;;1609:9;1597;:21;1579:39;1578:65;;1634:9;1578:65;;;1622:9;1578:65;1564:79;;1658:12;1676:5;:10;;1694:7;1708:3;1676:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:59;;;1822:7;1817:145;;1849:4;:12;;;1869:7;1849:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1897:50:6;;-1:-1:-1;;1897:34:6;1912:4;1897:34;;-1:-1:-1;1932:5:6;;-1:-1:-1;1939:7:6;1897:34;:50::i;:::-;1340:632;;1311:738;;;1992:46;:30;;;2023:5;2030:7;1992:30;:46::i;:::-;1039:1016;;;;:::o;1318:274:124:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;:::-;1505:80;1318:274;-1:-1:-1;;;1318:274:124:o;701:205:114:-;840:58;;;5234:42:128;5222:55;;840:58:114;;;5204:74:128;5294:18;;;;5287:34;;;840:58:114;;;;;;;;;;5177:18:128;;;;840:58:114;;;;;;;;;;863:23;840:58;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;689:411:124:-;753:4;960:60;985:7;994:25;960:24;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:124;1062:7;1071:21;1037:24;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:124:o;4208:409::-;4346:71;;;15746:66:128;15734:79;;4346:71:124;;;;15716:98:128;;;;4346:71:124;;;;;;;;;;15689:18:128;;;;4346:71:124;;;;;;;;;4369:34;4346:71;;;4465:45;;4301:4;;4346:71;4301:4;;;;4465:18;;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:124:o;3207:706:114:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:114;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;16306:2:128;3811:85:114;;;16288:21:128;16345:2;16325:18;;;16318:30;16384:34;16364:18;;;16357:62;16455:12;16435:18;;;16428:40;16485:19;;3811:85:114;16104:406:128;3861:223:120;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;1465:19;;;;5228:60;;;;;;;17124:2:128;5228:60:120;;;17106:21:128;17163:2;17143:18;;;17136:30;17202:31;17182:18;;;17175:59;17251:18;;5228:60:120;16922:353:128;5228:60:120;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:120:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:120;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;14:332:128:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:258;615:1;625:113;639:6;636:1;633:13;625:113;;;715:11;;;709:18;696:11;;;689:39;661:2;654:10;625:113;;;756:6;753:1;750:13;747:48;;;-1:-1:-1;;791:1:128;773:16;;766:27;543:258::o;806:442::-;955:2;944:9;937:21;918:4;987:6;981:13;1030:6;1025:2;1014:9;1010:18;1003:34;1046:66;1105:6;1100:2;1089:9;1085:18;1080:2;1072:6;1068:15;1046:66;:::i;:::-;1164:2;1152:15;1169:66;1148:88;1133:104;;;;1239:2;1129:113;;806:442;-1:-1:-1;;806:442:128:o;1253:154::-;1339:42;1332:5;1328:54;1321:5;1318:65;1308:93;;1397:1;1394;1387:12;1308:93;1253:154;:::o;1412:383::-;1489:6;1497;1505;1558:2;1546:9;1537:7;1533:23;1529:32;1526:52;;;1574:1;1571;1564:12;1526:52;1613:9;1600:23;1632:31;1657:5;1632:31;:::i;:::-;1682:5;1734:2;1719:18;;1706:32;;-1:-1:-1;1785:2:128;1770:18;;;1757:32;;1412:383;-1:-1:-1;;;1412:383:128:o;2031:315::-;2099:6;2107;2160:2;2148:9;2139:7;2135:23;2131:32;2128:52;;;2176:1;2173;2166:12;2128:52;2215:9;2202:23;2234:31;2259:5;2234:31;:::i;:::-;2284:5;2336:2;2321:18;;;;2308:32;;-1:-1:-1;;;2031:315:128:o;2684:525::-;2770:6;2778;2786;2794;2847:3;2835:9;2826:7;2822:23;2818:33;2815:53;;;2864:1;2861;2854:12;2815:53;2903:9;2890:23;2922:31;2947:5;2922:31;:::i;:::-;2972:5;-1:-1:-1;3024:2:128;3009:18;;2996:32;;-1:-1:-1;3075:2:128;3060:18;;3047:32;;-1:-1:-1;3131:2:128;3116:18;;3103:32;3144:33;3103:32;3144:33;:::i;:::-;2684:525;;;;-1:-1:-1;2684:525:128;;-1:-1:-1;;2684:525:128:o;3396:247::-;3455:6;3508:2;3496:9;3487:7;3483:23;3479:32;3476:52;;;3524:1;3521;3514:12;3476:52;3563:9;3550:23;3582:31;3607:5;3582:31;:::i;3909:437::-;3988:1;3984:12;;;;4031;;;4052:61;;4106:4;4098:6;4094:17;4084:27;;4052:61;4159:2;4151:6;4148:14;4128:18;4125:38;4122:218;;;4196:77;4193:1;4186:88;4297:4;4294:1;4287:15;4325:4;4322:1;4315:15;4122:218;;3909:437;;;:::o;5332:251::-;5402:6;5455:2;5443:9;5434:7;5430:23;5426:32;5423:52;;;5471:1;5468;5461:12;5423:52;5503:9;5497:16;5522:31;5547:5;5522:31;:::i;8637:184::-;8689:77;8686:1;8679:88;8786:4;8783:1;8776:15;8810:4;8807:1;8800:15;8826:334;8897:2;8891:9;8953:2;8943:13;;8958:66;8939:86;8927:99;;9056:18;9041:34;;9077:22;;;9038:62;9035:88;;;9103:18;;:::i;:::-;9139:2;9132:22;8826:334;;-1:-1:-1;8826:334:128:o;9165:191::-;9233:4;9266:18;9258:6;9255:30;9252:56;;;9288:18;;:::i;:::-;-1:-1:-1;9333:1:128;9329:14;9345:4;9325:25;;9165:191::o;9361:667::-;9426:5;9479:3;9472:4;9464:6;9460:17;9456:27;9446:55;;9497:1;9494;9487:12;9446:55;9526:6;9520:13;9552:4;9576:68;9592:51;9640:2;9592:51;:::i;:::-;9576:68;:::i;:::-;9678:15;;;9764:1;9760:10;;;;9748:23;;9744:32;;;9709:12;;;;9788:15;;;9785:35;;;9816:1;9813;9806:12;9785:35;9852:2;9844:6;9840:15;9864:135;9880:6;9875:3;9872:15;9864:135;;;9946:10;;9934:23;;9977:12;;;;9897;;9864:135;;;-1:-1:-1;10017:5:128;9361:667;-1:-1:-1;;;;;;9361:667:128:o;10033:1225::-;10170:6;10178;10231:2;10219:9;10210:7;10206:23;10202:32;10199:52;;;10247:1;10244;10237:12;10199:52;10280:9;10274:16;10309:18;10350:2;10342:6;10339:14;10336:34;;;10366:1;10363;10356:12;10336:34;10404:6;10393:9;10389:22;10379:32;;10449:7;10442:4;10438:2;10434:13;10430:27;10420:55;;10471:1;10468;10461:12;10420:55;10500:2;10494:9;10522:4;10546:68;10562:51;10610:2;10562:51;:::i;10546:68::-;10648:15;;;10730:1;10726:10;;;;10718:19;;10714:28;;;10679:12;;;;10754:19;;;10751:39;;;10786:1;10783;10776:12;10751:39;10810:11;;;;10830:210;10846:6;10841:3;10838:15;10830:210;;;10919:3;10913:10;10936:31;10961:5;10936:31;:::i;:::-;10980:18;;10863:12;;;;11018;;;;10830:210;;;11095:18;;;11089:25;11059:5;;-1:-1:-1;11089:25:128;;-1:-1:-1;;;11126:16:128;;;11123:36;;;11155:1;11152;11145:12;11123:36;;11178:74;11244:7;11233:8;11222:9;11218:24;11178:74;:::i;:::-;11168:84;;;10033:1225;;;;;:::o;11263:184::-;11315:77;11312:1;11305:88;11412:4;11409:1;11402:15;11436:4;11433:1;11426:15;12958:277;13025:6;13078:2;13066:9;13057:7;13053:23;13049:32;13046:52;;;13094:1;13091;13084:12;13046:52;13126:9;13120:16;13179:5;13172:13;13165:21;13158:5;13155:32;13145:60;;13201:1;13198;13191:12;14072:184;14142:6;14195:2;14183:9;14174:7;14170:23;14166:32;14163:52;;;14211:1;14208;14201:12;14163:52;-1:-1:-1;14234:16:128;;14072:184;-1:-1:-1;14072:184:128:o;14261:410::-;14339:6;14347;14400:2;14388:9;14379:7;14375:23;14371:32;14368:52;;;14416:1;14413;14406:12;14368:52;14448:9;14442:16;14498:6;14491:5;14487:18;14480:5;14477:29;14467:57;;14520:1;14517;14510:12;14467:57;14593:2;14578:18;;14572:25;14543:5;;-1:-1:-1;14606:33:128;14572:25;14606:33;:::i;:::-;14658:7;14648:17;;;14261:410;;;;;:::o;14676:279::-;14716:4;14744:1;14741;14738:8;14735:188;;;14779:77;14776:1;14769:88;14880:4;14877:1;14870:15;14908:4;14905:1;14898:15;14735:188;-1:-1:-1;14940:9:128;;14676:279::o;15825:274::-;15954:3;15992:6;15986:13;16008:53;16054:6;16049:3;16042:4;16034:6;16030:17;16008:53;:::i;:::-;16077:16;;;;;15825:274;-1:-1:-1;;15825:274:128:o",
    "linkReferences": {},
    "immutableReferences": {
      "1222": [
        {
          "start": 5884,
          "length": 32
        },
        {
          "start": 6036,
          "length": 32
        }
      ],
      "3851": [
        {
          "start": 744,
          "length": 32
        },
        {
          "start": 2791,
          "length": 32
        }
      ],
      "762": [
        {
          "start": 332,
          "length": 32
        },
        {
          "start": 3740,
          "length": 32
        }
      ],
      "766": [
        {
          "start": 5198,
          "length": 32
        },
        {
          "start": 5370,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": "9128c22c",
    "askForNFT(address,uint256)": "418f0656",
    "cancelAsk(address,uint256)": "40b80746",
    "createAsk(address,uint256,uint256)": "c4f0ee36",
    "erc721TransferHelper()": "f7cd1d9b",
    "fillAsk(address,uint256)": "68b5a9a8",
    "name()": "06fdde03",
    "registrar()": "2b20e397",
    "setAskPrice(address,uint256,uint256)": "0be48095",
    "setRoyaltyEngineAddress(address)": "b249bb30",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc721TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeSettings\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPayout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payoutCurrency\",\"type\":\"address\"}],\"name\":\"_handleRoyaltyEnginePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"askForNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC721TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"fillAsk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setAskPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"}],\"name\":\"setRoyaltyEngineAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"kulkarohan\",\"events\":{\"AskCanceled(address,uint256,address,uint256)\":{\"params\":{\"price\":\"The price of the canceled ask\",\"seller\":\"The user that canceled the ask\",\"tokenContract\":\"The ERC-721 token address of the canceled ask\",\"tokenId\":\"The ERC-721 token id of the canceled ask\"}},\"AskCreated(address,uint256,address,uint256)\":{\"params\":{\"price\":\"The price of the created ask\",\"seller\":\"The seller address of the created ask\",\"tokenContract\":\"The ERC-721 token address of the created ask\",\"tokenId\":\"The ERC-721 token id of the created ask\"}},\"AskFilled(address,uint256,address,address,uint256)\":{\"params\":{\"buyer\":\"The buyer address of the filled ask\",\"price\":\"The price of the filled ask\",\"seller\":\"The seller address of the filled ask\",\"tokenContract\":\"The ERC-721 token address of the filled ask\",\"tokenId\":\"The ERC-721 token id of the filled ask\"}},\"AskPriceUpdated(address,uint256,address,uint256)\":{\"params\":{\"price\":\"The updated price of the ask\",\"seller\":\"The user that updated the ask\",\"tokenContract\":\"The ERC-721 token address of the updated ask\",\"tokenId\":\"The ERC-721 token id of the updated ask\"}}},\"kind\":\"dev\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"details\":\"This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.\",\"params\":{\"_amount\":\"The total sale amount\",\"_payoutCurrency\":\"The ERC-20 token address to payout royalties in, or address(0) for ETH\",\"_tokenContract\":\"The NFT Contract to get royalty information from\",\"_tokenId\":\", The Token ID to get royalty information from\"},\"returns\":{\"_0\":\"The remaining funds after paying out royalties\"}},\"cancelAsk(address,uint256)\":{\"params\":{\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"constructor\":{\"params\":{\"_erc721TransferHelper\":\"The ZORA ERC-721 Transfer Helper address\",\"_protocolFeeSettings\":\"The ZORA Protocol Fee Settings address\",\"_royaltyEngine\":\"The Manifold Royalty Engine address\",\"_weth\":\"The WETH token address\"}},\"createAsk(address,uint256,uint256)\":{\"params\":{\"_price\":\"The price to fill the ask\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"fillAsk(address,uint256)\":{\"params\":{\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"setAskPrice(address,uint256,uint256)\":{\"params\":{\"_price\":\"The ask price to set\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"setRoyaltyEngineAddress(address)\":{\"details\":\"emergency use only \\u2013 requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI\",\"params\":{\"_royaltyEngine\":\"The address for the new royalty engine\"}},\"supportsInterface(bytes4)\":{\"details\":\"`0x01ffc9a7` is the IERC165 interface id\",\"params\":{\"_interfaceId\":\"The identifier of a given interface\"},\"returns\":{\"_0\":\"If the given interface is supported\"}}},\"stateVariables\":{\"askForNFT\":{\"details\":\"ERC-721 token contract => ERC-721 token id => Ask\"}},\"title\":\"Asks Core ETH\",\"version\":1},\"userdoc\":{\"events\":{\"AskCanceled(address,uint256,address,uint256)\":{\"notice\":\"Emitted when an ask is canceled\"},\"AskCreated(address,uint256,address,uint256)\":{\"notice\":\"Emitted when an ask is created\"},\"AskFilled(address,uint256,address,address,uint256)\":{\"notice\":\"Emitted when an ask is filled\"},\"AskPriceUpdated(address,uint256,address,uint256)\":{\"notice\":\"Emitted when an ask is updated\"},\"RoyaltyPayout(address,uint256,address,uint256)\":{\"notice\":\"Emitted when royalties are paid\"}},\"kind\":\"user\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"notice\":\"Pays out royalties for NFTs based on the information returned by the royalty engine\"},\"askForNFT(address,uint256)\":{\"notice\":\"The ask for a given NFT\"},\"cancelAsk(address,uint256)\":{\"notice\":\"Cancels the ask for a given NFT\"},\"createAsk(address,uint256,uint256)\":{\"notice\":\"Creates an ask for a given NFT\"},\"erc721TransferHelper()\":{\"notice\":\"The ZORA ERC-721 Transfer Helper\"},\"fillAsk(address,uint256)\":{\"notice\":\"Fills the ask for a given NFT\"},\"name()\":{\"notice\":\"The module name\"},\"registrar()\":{\"notice\":\"The ZORA Module Registrar\"},\"setAskPrice(address,uint256,uint256)\":{\"notice\":\"Updates the ask price for a given NFT\"},\"setRoyaltyEngineAddress(address)\":{\"notice\":\"Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy\"},\"supportsInterface(bytes4)\":{\"notice\":\"Implements EIP-165 for standard interface detection\"}},\"notice\":\"Module for minimal ETH asks for ERC-721 tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Asks/Core/ETH/AsksCoreEth.sol\":\"AsksCoreEth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@manifoldxyz/=node_modules/@manifoldxyz/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/ZoraModuleManager.sol\":{\"keccak256\":\"0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f\",\"dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6\"]},\"contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol\":{\"keccak256\":\"0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805\",\"dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t\"]},\"contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol\":{\"keccak256\":\"0xa29ac2f5104fe554ccab7c1c1eac1a91c043064a8c571253177e8c707d3df8d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7335dcf58a8134289861c5dbe20e79bb7db28d131d065bc1e4c0dc0f79a99f27\",\"dweb:/ipfs/Qmdabk1co2w1LQzh4bmaniFXPogmVaPMDHP2WPcrRkmBFc\"]},\"contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol\":{\"keccak256\":\"0xe4496549a785f714d8b8edea0716aa0f9ac53152fc171d286b24ed35d6046481\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://86bf38b07ac5b62dac1889c23d6ffa72c41413c5b3e2c37518e3ef16724170d2\",\"dweb:/ipfs/QmdmpFLMTReVM6j49CPXkzgyS4qjGsAkM7LtFzszqTy3EL\"]},\"contracts/common/OutgoingTransferSupport/V1/IWETH.sol\":{\"keccak256\":\"0xc95333328cada092ac242d36c205f984a69a22925f1d6ec4f3d26032006cd70a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ef55582164f1ad9ce2ba8ac25e49cd3e01a0e8383bdfbf9bac97c768b1e91f84\",\"dweb:/ipfs/QmXupdT8p88m5dNJuCGpQABoMLFs98AvRS4E1CDRkt7isM\"]},\"contracts/common/OutgoingTransferSupport/V1/OutgoingTransferSupportV1.sol\":{\"keccak256\":\"0xe13614f0a2f5547fa1c97564ed26d843678aaaf245d7406d051ab8ad91115efe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://815cc7f0070d60dedfe610a7189aae87594383b8010d1df65342fd6fb67e1a21\",\"dweb:/ipfs/QmbU8yxSwYgV9A7L2FCnfHCHHyDntUaHKg5sCxfNwbBrDQ\"]},\"contracts/modules/Asks/Core/ETH/AsksCoreEth.sol\":{\"keccak256\":\"0x7e57c64f5b490898fb70119bf971ee02fb86f710083ac29c510fc75083ccf34c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce00d48bb2b629de919193b04b99aefd92f3d003927bdbeef490c93ee9d07667\",\"dweb:/ipfs/QmQJJs6ZLUfNv7ocFeneFgimGFegvx15zso14o9J5H2imt\"]},\"contracts/modules/Asks/Core/ETH/IAsksCoreEth.sol\":{\"keccak256\":\"0xf52bc708209663113c52dcbf884efe74da039e6e33e00fcf246272b66c13f5eb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://799e4f69d8409b3e21fe7d20cbd7b7f6923fb292667a78dc500b5d9a345bbef6\",\"dweb:/ipfs/QmejbLyDmeUYXwm1rvnAKCjKBSonaCkdSUD82zj3CRxHat\"]},\"contracts/transferHelpers/BaseTransferHelper.sol\":{\"keccak256\":\"0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575\",\"dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp\"]},\"contracts/transferHelpers/ERC721TransferHelper.sol\":{\"keccak256\":\"0x23fa0ddaac378c885fabf22e8d458e61f3ab8608b9937dfbf49ac82e25153761\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a5d75279b5ca309e35b184db7fefa69053dc58402be86aea1fc141bf55cf95d3\",\"dweb:/ipfs/QmXfoyWWAekkinQrzcSgkJJoKCRVg2dWqBtdLe6m2drDqW\"]},\"node_modules/@manifoldxyz/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol\":{\"keccak256\":\"0x088b901b9fe87d03d237b5a0a84ba35c18933dafb9fc344bd4d17a8085ea0387\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa396e7cb04483aaffc2d50038d01a71816e5a3bc72021c5780e56a6437a1bcf\",\"dweb:/ipfs/QmUEawXCXimTSihzT2UBVvwVjmCa1ykFuwwQg9p6CapDzM\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826\",\"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed\",\"dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_erc721TransferHelper",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyEngine",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolFeeSettings",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_weth",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskFilled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AskPriceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyPayout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_payoutCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "_handleRoyaltyEnginePayout",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "askForNFT",
          "outputs": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAsk"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAsk"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "erc721TransferHelper",
          "outputs": [
            {
              "internalType": "contract ERC721TransferHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fillAsk"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registrar",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAskPrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyEngine",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyEngineAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
            "details": "This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.",
            "params": {
              "_amount": "The total sale amount",
              "_payoutCurrency": "The ERC-20 token address to payout royalties in, or address(0) for ETH",
              "_tokenContract": "The NFT Contract to get royalty information from",
              "_tokenId": ", The Token ID to get royalty information from"
            },
            "returns": {
              "_0": "The remaining funds after paying out royalties"
            }
          },
          "cancelAsk(address,uint256)": {
            "params": {
              "_tokenContract": "The address of the ERC-721 token",
              "_tokenId": "The id of the ERC-721 token"
            }
          },
          "constructor": {
            "params": {
              "_erc721TransferHelper": "The ZORA ERC-721 Transfer Helper address",
              "_protocolFeeSettings": "The ZORA Protocol Fee Settings address",
              "_royaltyEngine": "The Manifold Royalty Engine address",
              "_weth": "The WETH token address"
            }
          },
          "createAsk(address,uint256,uint256)": {
            "params": {
              "_price": "The price to fill the ask",
              "_tokenContract": "The address of the ERC-721 token",
              "_tokenId": "The id of the ERC-721 token"
            }
          },
          "fillAsk(address,uint256)": {
            "params": {
              "_tokenContract": "The address of the ERC-721 token",
              "_tokenId": "The id of the ERC-721 token"
            }
          },
          "setAskPrice(address,uint256,uint256)": {
            "params": {
              "_price": "The ask price to set",
              "_tokenContract": "The address of the ERC-721 token",
              "_tokenId": "The id of the ERC-721 token"
            }
          },
          "setRoyaltyEngineAddress(address)": {
            "details": "emergency use only – requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI",
            "params": {
              "_royaltyEngine": "The address for the new royalty engine"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "`0x01ffc9a7` is the IERC165 interface id",
            "params": {
              "_interfaceId": "The identifier of a given interface"
            },
            "returns": {
              "_0": "If the given interface is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
            "notice": "Pays out royalties for NFTs based on the information returned by the royalty engine"
          },
          "askForNFT(address,uint256)": {
            "notice": "The ask for a given NFT"
          },
          "cancelAsk(address,uint256)": {
            "notice": "Cancels the ask for a given NFT"
          },
          "createAsk(address,uint256,uint256)": {
            "notice": "Creates an ask for a given NFT"
          },
          "erc721TransferHelper()": {
            "notice": "The ZORA ERC-721 Transfer Helper"
          },
          "fillAsk(address,uint256)": {
            "notice": "Fills the ask for a given NFT"
          },
          "name()": {
            "notice": "The module name"
          },
          "registrar()": {
            "notice": "The ZORA Module Registrar"
          },
          "setAskPrice(address,uint256,uint256)": {
            "notice": "Updates the ask price for a given NFT"
          },
          "setRoyaltyEngineAddress(address)": {
            "notice": "Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy"
          },
          "supportsInterface(bytes4)": {
            "notice": "Implements EIP-165 for standard interface detection"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@manifoldxyz/=node_modules/@manifoldxyz/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 500000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/modules/Asks/Core/ETH/AsksCoreEth.sol": "AsksCoreEth"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ZoraModuleManager.sol": {
        "keccak256": "0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435",
        "urls": [
          "bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f",
          "dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6"
        ],
        "license": "GPL-3.0"
      },
      "contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol": {
        "keccak256": "0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d",
        "urls": [
          "bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805",
          "dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol": {
        "keccak256": "0xa29ac2f5104fe554ccab7c1c1eac1a91c043064a8c571253177e8c707d3df8d1",
        "urls": [
          "bzz-raw://7335dcf58a8134289861c5dbe20e79bb7db28d131d065bc1e4c0dc0f79a99f27",
          "dweb:/ipfs/Qmdabk1co2w1LQzh4bmaniFXPogmVaPMDHP2WPcrRkmBFc"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol": {
        "keccak256": "0xe4496549a785f714d8b8edea0716aa0f9ac53152fc171d286b24ed35d6046481",
        "urls": [
          "bzz-raw://86bf38b07ac5b62dac1889c23d6ffa72c41413c5b3e2c37518e3ef16724170d2",
          "dweb:/ipfs/QmdmpFLMTReVM6j49CPXkzgyS4qjGsAkM7LtFzszqTy3EL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/OutgoingTransferSupport/V1/IWETH.sol": {
        "keccak256": "0xc95333328cada092ac242d36c205f984a69a22925f1d6ec4f3d26032006cd70a",
        "urls": [
          "bzz-raw://ef55582164f1ad9ce2ba8ac25e49cd3e01a0e8383bdfbf9bac97c768b1e91f84",
          "dweb:/ipfs/QmXupdT8p88m5dNJuCGpQABoMLFs98AvRS4E1CDRkt7isM"
        ],
        "license": "GPL-3.0"
      },
      "contracts/common/OutgoingTransferSupport/V1/OutgoingTransferSupportV1.sol": {
        "keccak256": "0xe13614f0a2f5547fa1c97564ed26d843678aaaf245d7406d051ab8ad91115efe",
        "urls": [
          "bzz-raw://815cc7f0070d60dedfe610a7189aae87594383b8010d1df65342fd6fb67e1a21",
          "dweb:/ipfs/QmbU8yxSwYgV9A7L2FCnfHCHHyDntUaHKg5sCxfNwbBrDQ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/modules/Asks/Core/ETH/AsksCoreEth.sol": {
        "keccak256": "0x7e57c64f5b490898fb70119bf971ee02fb86f710083ac29c510fc75083ccf34c",
        "urls": [
          "bzz-raw://ce00d48bb2b629de919193b04b99aefd92f3d003927bdbeef490c93ee9d07667",
          "dweb:/ipfs/QmQJJs6ZLUfNv7ocFeneFgimGFegvx15zso14o9J5H2imt"
        ],
        "license": "GPL-3.0"
      },
      "contracts/modules/Asks/Core/ETH/IAsksCoreEth.sol": {
        "keccak256": "0xf52bc708209663113c52dcbf884efe74da039e6e33e00fcf246272b66c13f5eb",
        "urls": [
          "bzz-raw://799e4f69d8409b3e21fe7d20cbd7b7f6923fb292667a78dc500b5d9a345bbef6",
          "dweb:/ipfs/QmejbLyDmeUYXwm1rvnAKCjKBSonaCkdSUD82zj3CRxHat"
        ],
        "license": "GPL-3.0"
      },
      "contracts/transferHelpers/BaseTransferHelper.sol": {
        "keccak256": "0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46",
        "urls": [
          "bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575",
          "dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/transferHelpers/ERC721TransferHelper.sol": {
        "keccak256": "0x23fa0ddaac378c885fabf22e8d458e61f3ab8608b9937dfbf49ac82e25153761",
        "urls": [
          "bzz-raw://a5d75279b5ca309e35b184db7fefa69053dc58402be86aea1fc141bf55cf95d3",
          "dweb:/ipfs/QmXfoyWWAekkinQrzcSgkJJoKCRVg2dWqBtdLe6m2drDqW"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@manifoldxyz/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol": {
        "keccak256": "0x088b901b9fe87d03d237b5a0a84ba35c18933dafb9fc344bd4d17a8085ea0387",
        "urls": [
          "bzz-raw://fa396e7cb04483aaffc2d50038d01a71816e5a3bc72021c5780e56a6437a1bcf",
          "dweb:/ipfs/QmUEawXCXimTSihzT2UBVvwVjmCa1ykFuwwQg9p6CapDzM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
        "urls": [
          "bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
          "dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea",
        "urls": [
          "bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62",
          "dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba",
        "urls": [
          "bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0",
          "dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
        "urls": [
          "bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
          "dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e",
        "urls": [
          "bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826",
          "dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015",
        "urls": [
          "bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed",
          "dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/modules/Asks/Core/ETH/AsksCoreEth.sol",
    "id": 4246,
    "exportedSymbols": {
      "AsksCoreEth": [
        4245
      ],
      "ERC721TransferHelper": [
        50788
      ],
      "FeePayoutSupportV1": [
        1068
      ],
      "IAsksCoreEth": [
        4285
      ],
      "IERC721": [
        56788
      ],
      "ModuleNamingSupportV1": [
        1191
      ],
      "ReentrancyGuard": [
        58243
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:14022:31",
    "nodes": [
      {
        "id": 3828,
        "nodeType": "PragmaDirective",
        "src": "36:23:31",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 3830,
        "nodeType": "ImportDirective",
        "src": "61:84:31",
        "absolutePath": "node_modules/@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4246,
        "sourceUnit": 58244,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3829,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3832,
        "nodeType": "ImportDirective",
        "src": "146:73:31",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4246,
        "sourceUnit": 56789,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3831,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3834,
        "nodeType": "ImportDirective",
        "src": "221:90:31",
        "absolutePath": "contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC721TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4246,
        "sourceUnit": 50789,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3833,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "229:20:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3836,
        "nodeType": "ImportDirective",
        "src": "312:94:31",
        "absolutePath": "contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4246,
        "sourceUnit": 1069,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3835,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "320:18:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3838,
        "nodeType": "ImportDirective",
        "src": "407:103:31",
        "absolutePath": "contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4246,
        "sourceUnit": 1192,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3837,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "415:21:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3840,
        "nodeType": "ImportDirective",
        "src": "511:48:31",
        "absolutePath": "contracts/modules/Asks/Core/ETH/IAsksCoreEth.sol",
        "file": "./IAsksCoreEth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4246,
        "sourceUnit": 4286,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3839,
              "name": "IAsksCoreEth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "519:12:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4245,
        "nodeType": "ContractDefinition",
        "src": "668:13389:31",
        "nodes": [
          {
            "id": 3851,
            "nodeType": "VariableDeclaration",
            "src": "1014:58:31",
            "constant": false,
            "documentation": {
              "id": 3848,
              "nodeType": "StructuredDocumentation",
              "src": "965:44:31",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1052:20:31",
            "scope": 4245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 3850,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3849,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50788,
                "src": "1014:20:31"
              },
              "referencedDeclaration": 50788,
              "src": "1014:20:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3885,
            "nodeType": "FunctionDefinition",
            "src": "1342:419:31",
            "body": {
              "id": 3884,
              "nodeType": "Block",
              "src": "1678:83:31",
              "statements": [
                {
                  "expression": {
                    "id": 3882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3878,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3851,
                      "src": "1688:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3880,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3854,
                          "src": "1732:21:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3879,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50788,
                        "src": "1711:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$50788_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 3881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1711:43:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "1688:66:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 3883,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:66:31"
                }
              ]
            },
            "documentation": {
              "id": 3852,
              "nodeType": "StructuredDocumentation",
              "src": "1079:258:31",
              "text": "@param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n @param _weth The WETH token address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3863,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3856,
                    "src": "1519:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3864,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3858,
                    "src": "1535:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3865,
                    "name": "_weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3860,
                    "src": "1557:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 3867,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3854,
                                "src": "1585:21:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3866,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50788,
                              "src": "1564:20:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$50788_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 3868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1564:43:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50537,
                          "src": "1564:47:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$379_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 3870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1564:49:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$379",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 3871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1564:59:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 3872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:61:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3873,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3862,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1068,
                  "src": "1500:18:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1500:126:31"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b7320436f726520455448",
                    "id": 3875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1657:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c762a0d1da0dd24320216e767d9c3b09b0d2dad0570c310ace73390378b2d6aa",
                      "typeString": "literal_string \"Asks Core ETH\""
                    },
                    "value": "Asks Core ETH"
                  }
                ],
                "id": 3876,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3874,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1191,
                  "src": "1635:21:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1635:38:31"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3854,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "1371:21:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3885,
                  "src": "1363:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3856,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "1410:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3885,
                  "src": "1402:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3858,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "1442:20:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3885,
                  "src": "1434:28:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3860,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "1480:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3885,
                  "src": "1472:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:138:31"
            },
            "returnParameters": {
              "id": 3877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:0:31"
            },
            "scope": 4245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3905,
            "nodeType": "FunctionDefinition",
            "src": "2005:177:31",
            "body": {
              "id": 3904,
              "nodeType": "Block",
              "src": "2082:100:31",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 3898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3893,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "2099:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3895,
                              "name": "IAsksCoreEth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4285,
                              "src": "2120:12:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreEth_$4285_$",
                                "typeString": "type(contract IAsksCoreEth)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreEth_$4285_$",
                                "typeString": "type(contract IAsksCoreEth)"
                              }
                            ],
                            "id": 3894,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2115:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2115:18:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IAsksCoreEth_$4285",
                            "typeString": "type(contract IAsksCoreEth)"
                          }
                        },
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2115:30:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2099:46:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 3901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3899,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "2149:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 3900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "2149:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2099:76:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3892,
                  "id": 3903,
                  "nodeType": "Return",
                  "src": "2092:83:31"
                }
              ]
            },
            "documentation": {
              "id": 3886,
              "nodeType": "StructuredDocumentation",
              "src": "1767:233:31",
              "text": "@notice Implements EIP-165 for standard interface detection\n @dev `0x01ffc9a7` is the IERC165 interface id\n @param _interfaceId The identifier of a given interface\n @return If the given interface is supported"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2014:17:31",
            "parameters": {
              "id": 3889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3888,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "2039:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3905,
                  "src": "2032:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3887,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:21:31"
            },
            "returnParameters": {
              "id": 3892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3905,
                  "src": "2076:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3890,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2075:6:31"
            },
            "scope": 4245,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3910,
            "nodeType": "StructDefinition",
            "src": "2536:64:31",
            "canonicalName": "AsksCoreEth.Ask",
            "members": [
              {
                "constant": false,
                "id": 3907,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2565:6:31",
                "nodeType": "VariableDeclaration",
                "scope": 3910,
                "src": "2557:14:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3906,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2557:7:31",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3909,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "2588:5:31",
                "nodeType": "VariableDeclaration",
                "scope": 3910,
                "src": "2581:12:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 3908,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2581:6:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "2543:3:31",
            "scope": 4245,
            "visibility": "public"
          },
          {
            "id": 3918,
            "nodeType": "VariableDeclaration",
            "src": "2709:60:31",
            "constant": false,
            "documentation": {
              "id": 3911,
              "nodeType": "StructuredDocumentation",
              "src": "2606:98:31",
              "text": "@notice The ask for a given NFT\n @dev ERC-721 token contract => ERC-721 token id => Ask"
            },
            "functionSelector": "418f0656",
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "2760:9:31",
            "scope": 4245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask))"
            },
            "typeName": {
              "id": 3917,
              "keyType": {
                "id": 3912,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2717:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2709:43:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask))"
              },
              "valueType": {
                "id": 3916,
                "keyType": {
                  "id": 3913,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2736:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2728:23:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                  "typeString": "mapping(uint256 => struct AsksCoreEth.Ask)"
                },
                "valueType": {
                  "id": 3915,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3914,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3910,
                    "src": "2747:3:31"
                  },
                  "referencedDeclaration": 3910,
                  "src": "2747:3:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$3910_storage_ptr",
                    "typeString": "struct AsksCoreEth.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 3929,
            "nodeType": "EventDefinition",
            "src": "4009:104:31",
            "anonymous": false,
            "documentation": {
              "id": 3919,
              "nodeType": "StructuredDocumentation",
              "src": "3715:289:31",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token id of the created ask\n @param seller The seller address of the created ask\n @param price The price of the created ask"
            },
            "name": "AskCreated",
            "nameLocation": "4015:10:31",
            "parameters": {
              "id": 3928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3921,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "4042:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3929,
                  "src": "4026:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3923,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4073:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3929,
                  "src": "4057:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3925,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "4090:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3929,
                  "src": "4082:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3927,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4106:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3929,
                  "src": "4098:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4025:87:31"
            }
          },
          {
            "id": 3996,
            "nodeType": "FunctionDefinition",
            "src": "4329:855:31",
            "body": {
              "id": 3995,
              "nodeType": "Block",
              "src": "4458:726:31",
              "statements": [
                {
                  "assignments": [
                    3942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3942,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "4524:10:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 3995,
                      "src": "4516:18:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3941,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4516:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3949,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3947,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3934,
                        "src": "4569:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3944,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3932,
                            "src": "4545:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3943,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56788,
                          "src": "4537:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 3945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4537:23:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$56788",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 3946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56721,
                      "src": "4537:31:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 3948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4537:41:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4516:62:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3951,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4663:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4663:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3953,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3942,
                            "src": "4677:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4663:24:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3959,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3942,
                              "src": "4732:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3960,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4744:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4744:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3956,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3932,
                                  "src": "4699:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3955,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56788,
                                "src": "4691:7:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 3957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4691:23:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$56788",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 3958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56787,
                            "src": "4691:40:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 3962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4691:64:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4663:92:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 3964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4757:30:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "id": 3950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4655:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:133:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3966,
                  "nodeType": "ExpressionStatement",
                  "src": "4655:133:31"
                },
                {
                  "expression": {
                    "id": 3974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 3967,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3918,
                            "src": "4840:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                            }
                          },
                          "id": 3970,
                          "indexExpression": {
                            "id": 3968,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3932,
                            "src": "4850:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4840:25:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                          }
                        },
                        "id": 3971,
                        "indexExpression": {
                          "id": 3969,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3934,
                          "src": "4866:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4840:35:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$3910_storage",
                          "typeString": "struct AsksCoreEth.Ask storage ref"
                        }
                      },
                      "id": 3972,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3907,
                      "src": "4840:42:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3973,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3942,
                      "src": "4885:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4840:55:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3975,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:55:31"
                },
                {
                  "expression": {
                    "id": 3986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 3976,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3918,
                            "src": "5047:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                            }
                          },
                          "id": 3979,
                          "indexExpression": {
                            "id": 3977,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3932,
                            "src": "5057:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5047:25:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                          }
                        },
                        "id": 3980,
                        "indexExpression": {
                          "id": 3978,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3934,
                          "src": "5073:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5047:35:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$3910_storage",
                          "typeString": "struct AsksCoreEth.Ask storage ref"
                        }
                      },
                      "id": 3981,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3909,
                      "src": "5047:41:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3984,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3936,
                          "src": "5098:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5091:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 3982,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5091:6:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5091:14:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "5047:58:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 3987,
                  "nodeType": "ExpressionStatement",
                  "src": "5047:58:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3989,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3932,
                        "src": "5132:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3990,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3934,
                        "src": "5148:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3991,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3942,
                        "src": "5158:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3992,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3936,
                        "src": "5170:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3988,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3929,
                      "src": "5121:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 3993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5121:56:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3994,
                  "nodeType": "EmitStatement",
                  "src": "5116:61:31"
                }
              ]
            },
            "documentation": {
              "id": 3930,
              "nodeType": "StructuredDocumentation",
              "src": "4119:205:31",
              "text": "@notice Creates an ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask"
            },
            "functionSelector": "c4f0ee36",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3939,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3938,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "4445:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "4445:12:31"
              }
            ],
            "name": "createAsk",
            "nameLocation": "4338:9:31",
            "parameters": {
              "id": 3937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3932,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "4365:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3996,
                  "src": "4357:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4357:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3934,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4397:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3996,
                  "src": "4389:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3936,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4423:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 3996,
                  "src": "4415:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4415:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4347:88:31"
            },
            "returnParameters": {
              "id": 3940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4458:0:31"
            },
            "scope": 4245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4007,
            "nodeType": "EventDefinition",
            "src": "6418:109:31",
            "anonymous": false,
            "documentation": {
              "id": 3997,
              "nodeType": "StructuredDocumentation",
              "src": "6132:281:31",
              "text": "@notice Emitted when an ask is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token id of the updated ask\n @param seller The user that updated the ask\n @param price The updated price of the ask"
            },
            "name": "AskPriceUpdated",
            "nameLocation": "6424:15:31",
            "parameters": {
              "id": 4006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3999,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "6456:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "6440:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6440:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4001,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6487:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "6471:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "6504:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "6496:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4005,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "6520:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "6512:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6512:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6439:87:31"
            }
          },
          {
            "id": 4055,
            "nodeType": "FunctionDefinition",
            "src": "6745:602:31",
            "body": {
              "id": 4054,
              "nodeType": "Block",
              "src": "6876:471:31",
              "statements": [
                {
                  "assignments": [
                    4021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4021,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "6945:3:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4054,
                      "src": "6933:15:31",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_storage_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 4020,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4019,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3910,
                          "src": "6933:3:31"
                        },
                        "referencedDeclaration": 3910,
                        "src": "6933:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$3910_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4027,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4022,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3918,
                        "src": "6951:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 4024,
                      "indexExpression": {
                        "id": 4023,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4010,
                        "src": "6961:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6951:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 4026,
                    "indexExpression": {
                      "id": 4025,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "6977:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6951:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$3910_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6933:53:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4029,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7044:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7044:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4031,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4021,
                            "src": "7058:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$3910_storage_ptr",
                              "typeString": "struct AsksCoreEth.Ask storage pointer"
                            }
                          },
                          "id": 4032,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3907,
                          "src": "7058:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7044:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "id": 4034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7070:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        },
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        }
                      ],
                      "id": 4028,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7036:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7036:48:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4036,
                  "nodeType": "ExpressionStatement",
                  "src": "7036:48:31"
                },
                {
                  "expression": {
                    "id": 4044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4037,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4021,
                        "src": "7237:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$3910_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask storage pointer"
                        }
                      },
                      "id": 4039,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3909,
                      "src": "7237:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4042,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4014,
                          "src": "7256:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7249:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 4040,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "7249:6:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7249:14:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "7237:26:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 4045,
                  "nodeType": "ExpressionStatement",
                  "src": "7237:26:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4047,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4010,
                        "src": "7295:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4048,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4012,
                        "src": "7311:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4049,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7321:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7321:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4051,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4014,
                        "src": "7333:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4046,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4007,
                      "src": "7279:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 4052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7279:61:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4053,
                  "nodeType": "EmitStatement",
                  "src": "7274:66:31"
                }
              ]
            },
            "documentation": {
              "id": 4008,
              "nodeType": "StructuredDocumentation",
              "src": "6533:207:31",
              "text": "@notice Updates the ask price for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The ask price to set"
            },
            "functionSelector": "0be48095",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4017,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4016,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "6863:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "6863:12:31"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "6754:11:31",
            "parameters": {
              "id": 4015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4010,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "6783:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4055,
                  "src": "6775:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6775:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4012,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6815:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4055,
                  "src": "6807:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6807:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4014,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "6841:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4055,
                  "src": "6833:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6833:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6765:88:31"
            },
            "returnParameters": {
              "id": 4018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6876:0:31"
            },
            "scope": 4245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4066,
            "nodeType": "EventDefinition",
            "src": "8576:105:31",
            "anonymous": false,
            "documentation": {
              "id": 4056,
              "nodeType": "StructuredDocumentation",
              "src": "8285:286:31",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token id of the canceled ask\n @param seller The user that canceled the ask\n @param price The price of the canceled ask"
            },
            "name": "AskCanceled",
            "nameLocation": "8582:11:31",
            "parameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4058,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "8610:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "8594:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8594:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4060,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8641:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "8625:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8625:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "8658:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "8650:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8650:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "8674:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "8666:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8666:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8593:87:31"
            }
          },
          {
            "id": 4124,
            "nodeType": "FunctionDefinition",
            "src": "8850:630:31",
            "body": {
              "id": 4123,
              "nodeType": "Block",
              "src": "8933:547:31",
              "statements": [
                {
                  "assignments": [
                    4078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4078,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "9001:3:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4123,
                      "src": "8990:14:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 4077,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4076,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3910,
                          "src": "8990:3:31"
                        },
                        "referencedDeclaration": 3910,
                        "src": "8990:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$3910_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4084,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4079,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3918,
                        "src": "9007:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 4081,
                      "indexExpression": {
                        "id": 4080,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4069,
                        "src": "9017:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9007:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 4083,
                    "indexExpression": {
                      "id": 4082,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4071,
                      "src": "9033:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9007:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$3910_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8990:52:31"
                },
                {
                  "assignments": [
                    4086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4086,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "9097:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4123,
                      "src": "9089:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4085,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9089:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4089,
                  "initialValue": {
                    "expression": {
                      "id": 4087,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4078,
                      "src": "9106:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 4088,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3907,
                    "src": "9106:10:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9089:27:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4091,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9199:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9199:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4093,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4086,
                            "src": "9213:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9199:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4095,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9223:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9223:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 4101,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4071,
                                "src": "9269:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4098,
                                    "name": "_tokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4069,
                                    "src": "9245:14:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4097,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56788,
                                  "src": "9237:7:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$56788_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 4099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9237:23:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$56788",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 4100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56721,
                              "src": "9237:31:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 4102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9237:41:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9223:55:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9199:79:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "id": 4105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9280:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        },
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        }
                      ],
                      "id": 4090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9191:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9191:118:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4107,
                  "nodeType": "ExpressionStatement",
                  "src": "9191:118:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4109,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4069,
                        "src": "9337:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4110,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "9353:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4111,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4086,
                        "src": "9363:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4112,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4078,
                          "src": "9371:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$3910_memory_ptr",
                            "typeString": "struct AsksCoreEth.Ask memory"
                          }
                        },
                        "id": 4113,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3909,
                        "src": "9371:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 4108,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4066,
                      "src": "9325:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 4114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9325:56:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4115,
                  "nodeType": "EmitStatement",
                  "src": "9320:61:31"
                },
                {
                  "expression": {
                    "id": 4121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9431:42:31",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4116,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3918,
                          "src": "9438:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                          }
                        },
                        "id": 4118,
                        "indexExpression": {
                          "id": 4117,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4069,
                          "src": "9448:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9438:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                        }
                      },
                      "id": 4120,
                      "indexExpression": {
                        "id": 4119,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "9464:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9438:35:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_storage",
                        "typeString": "struct AsksCoreEth.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4122,
                  "nodeType": "ExpressionStatement",
                  "src": "9431:42:31"
                }
              ]
            },
            "documentation": {
              "id": 4067,
              "nodeType": "StructuredDocumentation",
              "src": "8687:158:31",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4074,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4073,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "8920:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "8920:12:31"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "8859:9:31",
            "parameters": {
              "id": 4072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4069,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "8877:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4124,
                  "src": "8869:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8869:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4071,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8901:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4124,
                  "src": "8893:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8893:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8868:42:31"
            },
            "returnParameters": {
              "id": 4075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8933:0:31"
            },
            "scope": 4245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4137,
            "nodeType": "EventDefinition",
            "src": "12400:118:31",
            "anonymous": false,
            "documentation": {
              "id": 4125,
              "nodeType": "StructuredDocumentation",
              "src": "12054:341:31",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token id of the filled ask\n @param buyer The buyer address of the filled ask\n @param seller The seller address of the filled ask\n @param price The price of the filled ask"
            },
            "name": "AskFilled",
            "nameLocation": "12406:9:31",
            "parameters": {
              "id": 4136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4127,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "12432:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "12416:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12416:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4129,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12463:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "12447:23:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12447:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12480:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "12472:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12472:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "12495:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "12487:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12487:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "12511:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "12503:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12503:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12415:102:31"
            }
          },
          {
            "id": 4244,
            "nodeType": "FunctionDefinition",
            "src": "12685:1370:31",
            "body": {
              "id": 4243,
              "nodeType": "Block",
              "src": "12774:1281:31",
              "statements": [
                {
                  "assignments": [
                    4149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4149,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "12842:3:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4243,
                      "src": "12831:14:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 4148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4147,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3910,
                          "src": "12831:3:31"
                        },
                        "referencedDeclaration": 3910,
                        "src": "12831:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$3910_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4155,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4150,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3918,
                        "src": "12848:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 4152,
                      "indexExpression": {
                        "id": 4151,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4140,
                        "src": "12858:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12848:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 4154,
                    "indexExpression": {
                      "id": 4153,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4142,
                      "src": "12874:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12848:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$3910_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12831:52:31"
                },
                {
                  "assignments": [
                    4157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4157,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "12930:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4243,
                      "src": "12922:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4156,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12922:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4160,
                  "initialValue": {
                    "expression": {
                      "id": 4158,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4149,
                      "src": "12939:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 4159,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3907,
                    "src": "12939:10:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12922:27:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4162,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4157,
                          "src": "13004:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13022:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13014:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4163,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13014:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13014:10:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13004:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "id": 4168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13026:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        },
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        }
                      ],
                      "id": 4161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12996:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12996:45:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4170,
                  "nodeType": "ExpressionStatement",
                  "src": "12996:45:31"
                },
                {
                  "assignments": [
                    4172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4172,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "13087:5:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4243,
                      "src": "13079:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13079:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4175,
                  "initialValue": {
                    "expression": {
                      "id": 4173,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4149,
                      "src": "13095:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 4174,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3909,
                    "src": "13095:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13079:25:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13176:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "13176:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4179,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4172,
                          "src": "13189:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13176:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "id": 4181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13196:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        },
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        }
                      ],
                      "id": 4176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13168:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13168:47:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4183,
                  "nodeType": "ExpressionStatement",
                  "src": "13168:47:31"
                },
                {
                  "assignments": [
                    4185,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4185,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "13288:15:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4243,
                      "src": "13280:23:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4184,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13280:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4196,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4187,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4140,
                        "src": "13330:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4188,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "13346:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4189,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4172,
                        "src": "13356:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13371:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13363:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13363:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13363:10:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030303030",
                        "id": 4194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13375:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        }
                      ],
                      "id": 4186,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 955,
                      "src": "13309:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 4195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13309:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13279:103:31"
                },
                {
                  "expression": {
                    "id": 4205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4197,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4185,
                      "src": "13441:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4199,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4185,
                          "src": "13484:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13509:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13501:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13501:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13501:10:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4198,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 895,
                        "src": "13459:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 4204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13459:53:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13441:71:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4206,
                  "nodeType": "ExpressionStatement",
                  "src": "13441:71:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4208,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4157,
                        "src": "13602:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4209,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4185,
                        "src": "13610:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13635:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13627:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13627:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13627:10:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 4214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13639:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 4207,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "13578:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 4215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13578:67:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4216,
                  "nodeType": "ExpressionStatement",
                  "src": "13578:67:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4220,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4140,
                        "src": "13833:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4221,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4157,
                        "src": "13849:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13857:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13857:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4224,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "13869:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4217,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3851,
                        "src": "13799:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$50788",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 4219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50787,
                      "src": "13799:33:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 4225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13799:79:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4226,
                  "nodeType": "ExpressionStatement",
                  "src": "13799:79:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4228,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4140,
                        "src": "13904:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4229,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "13920:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4230,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13930:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13930:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4232,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4157,
                        "src": "13942:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4233,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4172,
                        "src": "13950:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4227,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4137,
                      "src": "13894:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 4234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13894:62:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4235,
                  "nodeType": "EmitStatement",
                  "src": "13889:67:31"
                },
                {
                  "expression": {
                    "id": 4241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "14006:42:31",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4236,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3918,
                          "src": "14013:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                          }
                        },
                        "id": 4238,
                        "indexExpression": {
                          "id": 4237,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4140,
                          "src": "14023:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14013:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$3910_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                        }
                      },
                      "id": 4240,
                      "indexExpression": {
                        "id": 4239,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "14039:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14013:35:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$3910_storage",
                        "typeString": "struct AsksCoreEth.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4242,
                  "nodeType": "ExpressionStatement",
                  "src": "14006:42:31"
                }
              ]
            },
            "documentation": {
              "id": 4138,
              "nodeType": "StructuredDocumentation",
              "src": "12524:156:31",
              "text": "@notice Fills the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "68b5a9a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4144,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58242,
                  "src": "12761:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "12761:12:31"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "12694:7:31",
            "parameters": {
              "id": 4143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4140,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "12710:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4244,
                  "src": "12702:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12702:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4142,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "12734:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4244,
                  "src": "12726:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12726:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12701:42:31"
            },
            "returnParameters": {
              "id": 4146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12774:0:31"
            },
            "scope": 4245,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3842,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58243,
              "src": "692:15:31"
            },
            "id": 3843,
            "nodeType": "InheritanceSpecifier",
            "src": "692:15:31"
          },
          {
            "baseName": {
              "id": 3844,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1068,
              "src": "709:18:31"
            },
            "id": 3845,
            "nodeType": "InheritanceSpecifier",
            "src": "709:18:31"
          },
          {
            "baseName": {
              "id": 3846,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1191,
              "src": "729:21:31"
            },
            "id": 3847,
            "nodeType": "InheritanceSpecifier",
            "src": "729:21:31"
          }
        ],
        "canonicalName": "AsksCoreEth",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3841,
          "nodeType": "StructuredDocumentation",
          "src": "561:107:31",
          "text": "@title Asks Core ETH\n @author kulkarohan\n @notice Module for minimal ETH asks for ERC-721 tokens"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4245,
          1191,
          1068,
          1337,
          58243
        ],
        "name": "AsksCoreEth",
        "nameLocation": "677:11:31",
        "scope": 4246,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 31
}